{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// ————————————————————————————————————————————————————\n// Helpers\n// ————————————————————————————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const freeMs = endOfDay - current;\n    if (freeMs <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= freeMs) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= freeMs;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n// **Changed** to \"MM/DD hh:mm AM/PM\"\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  let mo = pad(dt.getMonth() + 1),\n    da = pad(dt.getDate()),\n    h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ampm = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ampm}`;\n}\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length === 2) {\n    const [mo, da] = parts.map(x => parseInt(x, 10));\n    if (!isNaN(mo) && !isNaN(da)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), mo - 1, da, 0, 0, 0, 0);\n      return dt;\n    }\n  }\n  const dt = new Date(due);\n  return isNaN(dt) ? null : dt;\n}\n\n// ————————————————————————————————————————————————————\n// Main Component\n// ————————————————————————————————————————————————————\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [editId, setEditId] = useState(null);\n\n  // Fetch from API + merge placeholders\n  const fetchOrders = () => {\n    axios.get('http://localhost:5000/api/orders').then(({\n      data\n    }) => {\n      const cols = {\n        queue: {\n          id: 'queue',\n          title: 'Unscheduled',\n          jobs: []\n        },\n        machine1: {\n          id: 'machine1',\n          title: 'Machine 1',\n          jobs: []\n        },\n        machine2: {\n          id: 'machine2',\n          title: 'Machine 2',\n          jobs: []\n        }\n      };\n      data.forEach(o => {\n        cols[o.machineId || 'queue'].jobs.push({\n          id: o.id,\n          title: o.title,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date,\n          end: o.end_date\n        });\n      });\n      // sort static queue by due date\n      const staticQ = cols.queue.jobs.sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        return da && db ? da - db : 0;\n      });\n      // prepend placeholders so they stick around\n      cols.queue.jobs = [...placeholders, ...staticQ];\n      // sort machines by start\n      ['machine1', 'machine2'].forEach(mid => {\n        cols[mid].jobs.sort((a, b) => {\n          const sa = a.start ? new Date(a.start) : null,\n            sb = b.start ? new Date(b.start) : null;\n          return sa && sb ? sa - sb : 0;\n        });\n      });\n      setColumns(cols);\n    }).catch(console.error);\n  };\n\n  // initial + whenever placeholders change\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [placeholders]);\n\n  // — Drag & Drop\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const moved = cols[source.droppableId].jobs.splice(source.index, 1)[0];\n      cols[destination.droppableId].jobs.splice(destination.index, 0, moved);\n      let prevEnd = null;\n      cols[destination.droppableId].jobs.forEach((job, i) => {\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          const pe = cols[destination.droppableId].jobs[i - 1].end;\n          prevEnd = pe ? new Date(pe) : prevEnd;\n          start = prevEnd ? new Date(prevEnd.getTime() + 30 * 60000) : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = job.stitchCount / 30000 * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n        job.start = fmtDT(start);\n        job.end = fmtDT(end);\n        prevEnd = end;\n      });\n      setColumns(cols);\n\n      // persist moved\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId: destination.droppableId,\n        start_date: moved.start,\n        end_date: moved.end\n      }).catch(console.error);\n\n      // cascade\n      cols[destination.droppableId].jobs.slice(destination.index + 1).forEach(job => {\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          start_date: job.start,\n          end_date: job.end\n        }).catch(console.error);\n      });\n    }, 0);\n  };\n\n  // — Open modal for new or editing placeholder\n  const openModalForNew = () => {\n    setEditId(null);\n    setPh({\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n    setShowModal(true);\n  };\n  const openModalForEdit = job => {\n    setEditId(job.id);\n    setPh({\n      company: job.title.split(' - ')[0] || '',\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // — Add or update placeholder\n  const addPlaceholder = () => {\n    const updatedJob = {\n      id: editId || `ph-${Date.now()}`,\n      title: `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`,\n      stitchCount: Number(ph.stitchCount) || 30000,\n      quantity: Number(ph.quantity) || 1,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      start: '',\n      end: ''\n    };\n    setPlaceholders(pl => {\n      if (editId) {\n        return pl.map(j => j.id === editId ? updatedJob : j);\n      } else {\n        return [updatedJob, ...pl];\n      }\n    });\n    setShowModal(false);\n  };\n\n  // — Remove placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(pl => pl.filter(j => j.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: '14px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModalForNew,\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: editId ? 'Edit Placeholder' : 'Add Placeholder'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Stitch Count\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"In Hand Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Due Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addPlaceholder,\n            children: editId ? 'Save' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                textAlign: 'center',\n                fontSize: '16px'\n              },\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const dueDt = parseDueDate(job.due_date),\n                endDt = job.end ? new Date(job.end) : null,\n                isLate = dueDt && endDt && endDt > dueDt,\n                isHard = job.due_type === 'Hard Date',\n                isPh = job.id.startsWith('ph-');\n              let bg = '#fff';\n              if (isLate) bg = '#ffe6e6';else if (isPh) bg = '#e8f5e9';else if (isHard) bg = '#f3e5f5';\n              const borderColor = isPh ? '#388e3c' : isHard ? '#8e24aa' : '#ccc';\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    position: 'relative',\n                    userSelect: 'none',\n                    padding: '8px',\n                    margin: '0 0 8px 0',\n                    background: bg,\n                    border: `2px solid ${borderColor}`,\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    ...p.draggableProps.style\n                  },\n                  children: [isPh && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => removePlaceholder(job.id),\n                      style: {\n                        position: 'absolute',\n                        top: 4,\n                        right: 28,\n                        cursor: 'pointer',\n                        color: '#b71c1c',\n                        fontWeight: 'bold'\n                      },\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => openModalForEdit(job),\n                      style: {\n                        position: 'absolute',\n                        top: 4,\n                        right: 4,\n                        cursor: 'pointer',\n                        color: '#000',\n                        fontWeight: 'bold'\n                      },\n                      children: \"\\u270E\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 6\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 2,\n                      fontSize: '12px'\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#e0f7fa',\n                        borderRadius: 10\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 33\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#ffe0b2',\n                        borderRadius: 10\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"teqvxHYcCuNyl39NtlnQIfPZfqU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","freeMs","getTime","fmtDT","pad","n","String","padStart","mo","getMonth","da","h","m","ampm","parseDueDate","due","parts","split","length","map","x","parseInt","setFullYear","getFullYear","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","placeholders","setPlaceholders","showModal","setShowModal","ph","setPh","company","quantity","stitchCount","inHand","dueType","editId","setEditId","fetchOrders","get","then","data","cols","forEach","o","machineId","push","stitch_count","due_date","due_type","start","start_date","end","end_date","staticQ","sort","a","b","db","mid","sa","sb","catch","console","error","iv","setInterval","clearInterval","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","JSON","parse","stringify","moved","splice","prevEnd","job","i","pe","runMs","put","openModalForNew","openModalForEdit","addPlaceholder","updatedJob","now","Number","pl","j","removePlaceholder","filter","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","value","onChange","e","target","width","type","gap","Object","values","col","prov","ref","innerRef","droppableProps","border","minHeight","idx","dueDt","endDt","isLate","isHard","isPh","startsWith","bg","borderColor","p","draggableProps","dragHandleProps","userSelect","margin","boxShadow","cursor","color","fontWeight","flex","paddingRight","flexDirection","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// ————————————————————————————————————————————————————\n// Helpers\n// ————————————————————————————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HOUR ||\n    (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HOUR ||\n    (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const freeMs = endOfDay - current;\n    if (freeMs <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= freeMs) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= freeMs;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n// **Changed** to \"MM/DD hh:mm AM/PM\"\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  let mo = pad(dt.getMonth()+1),\n      da = pad(dt.getDate()),\n      h  = dt.getHours(),\n      m  = pad(dt.getMinutes()),\n      ampm = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ampm}`;\n}\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length === 2) {\n    const [mo,da] = parts.map(x=>parseInt(x,10));\n    if (!isNaN(mo) && !isNaN(da)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), mo-1, da, 0,0,0,0);\n      return dt;\n    }\n  }\n  const dt = new Date(due);\n  return isNaN(dt) ? null : dt;\n}\n\n// ————————————————————————————————————————————————————\n// Main Component\n// ————————————————————————————————————————————————————\nexport default function App() {\n  const [columns, setColumns]       = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',   jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',   jobs:[] },\n  });\n  const [placeholders, setPlaceholders] = useState([]);\n  const [showModal, setShowModal]     = useState(false);\n  const [ph, setPh]                   = useState({\n    company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n  const [editId, setEditId]           = useState(null);\n\n  // Fetch from API + merge placeholders\n  const fetchOrders = () => {\n    axios.get('http://localhost:5000/api/orders')\n      .then(({ data }) => {\n        const cols = {\n          queue:    { id:'queue', title:'Unscheduled', jobs:[] },\n          machine1: { id:'machine1', title:'Machine 1', jobs:[] },\n          machine2: { id:'machine2', title:'Machine 2', jobs:[] },\n        };\n        data.forEach(o => {\n          cols[o.machineId||'queue'].jobs.push({\n            id: o.id,\n            title: o.title,\n            stitchCount: o.stitch_count,\n            quantity:    o.quantity,\n            due_date:    o.due_date,\n            due_type:    o.due_type,\n            start:       o.start_date,\n            end:         o.end_date\n          });\n        });\n        // sort static queue by due date\n        const staticQ = cols.queue.jobs.sort((a,b)=>{\n          const da = parseDueDate(a.due_date),\n                db = parseDueDate(b.due_date);\n          return da && db ? da-db : 0;\n        });\n        // prepend placeholders so they stick around\n        cols.queue.jobs = [...placeholders, ...staticQ];\n        // sort machines by start\n        ['machine1','machine2'].forEach(mid => {\n          cols[mid].jobs.sort((a,b)=>{\n            const sa = a.start ? new Date(a.start) : null,\n                  sb = b.start ? new Date(b.start) : null;\n            return sa && sb ? sa - sb : 0;\n          });\n        });\n        setColumns(cols);\n      })\n      .catch(console.error);\n  };\n\n  // initial + whenever placeholders change\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [placeholders]);\n\n  // — Drag & Drop\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason!=='DROP' || !destination) return;\n    if (source.droppableId===destination.droppableId && source.index===destination.index) return;\n\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const moved = cols[source.droppableId].jobs.splice(source.index,1)[0];\n      cols[destination.droppableId].jobs.splice(destination.index,0,moved);\n\n      let prevEnd = null;\n      cols[destination.droppableId].jobs.forEach((job, i) => {\n        let start;\n        if (i === 0) {\n          start = new Date(); start.setHours(WORK_START_HOUR,WORK_START_MIN,0,0);\n        } else {\n          const pe = cols[destination.droppableId].jobs[i-1].end;\n          prevEnd = pe ? new Date(pe) : prevEnd;\n          start = prevEnd\n            ? new Date(prevEnd.getTime()+30*60000)\n            : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = (job.stitchCount/30000)*(job.quantity/6)*3600000;\n        const end   = addWorkTime(start, runMs);\n        job.start = fmtDT(start);\n        job.end   = fmtDT(end);\n        prevEnd   = end;\n      });\n\n      setColumns(cols);\n\n      // persist moved\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId:  destination.droppableId,\n        start_date: moved.start,\n        end_date:   moved.end\n      }).catch(console.error);\n\n      // cascade\n      cols[destination.droppableId].jobs\n        .slice(destination.index+1)\n        .forEach(job => {\n          axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n            start_date: job.start,\n            end_date:   job.end\n          }).catch(console.error);\n        });\n    }, 0);\n  };\n\n  // — Open modal for new or editing placeholder\n  const openModalForNew = () => {\n    setEditId(null);\n    setPh({ company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date' });\n    setShowModal(true);\n  };\n  const openModalForEdit = job => {\n    setEditId(job.id);\n    setPh({\n      company:     job.title.split(' - ')[0] || '',\n      quantity:    job.quantity,\n      stitchCount: job.stitchCount,\n      inHand:      job.due_date,\n      dueType:     job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // — Add or update placeholder\n  const addPlaceholder = () => {\n    const updatedJob = {\n      id:           editId || `ph-${Date.now()}`,\n      title:        `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`,\n      stitchCount:  Number(ph.stitchCount)||30000,\n      quantity:     Number(ph.quantity)   ||1,\n      due_date:     ph.inHand,\n      due_type:     ph.dueType,\n      start:        '',\n      end:          ''\n    };\n    setPlaceholders(pl => {\n      if (editId) {\n        return pl.map(j => j.id===editId ? updatedJob : j);\n      } else {\n        return [updatedJob, ...pl];\n      }\n    });\n    setShowModal(false);\n  };\n\n  // — Remove placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(pl => pl.filter(j => j.id !== id));\n  };\n\n  return (\n    <div style={{\n      padding:16,\n      fontFamily:'sans-serif',\n      fontSize:'14px'\n    }}>\n      <button onClick={openModalForNew} style={{ marginRight:8 }}>\n        + Add Placeholder\n      </button>\n      <button onClick={fetchOrders}>\n        Refresh Data\n      </button>\n\n      {/* — Modal */}\n      {showModal && (\n        <div style={{\n          position:'fixed', top:0,left:0,right:0,bottom:0,\n          background:'rgba(0,0,0,0.3)',\n          display:'flex', alignItems:'center', justifyContent:'center',\n          zIndex:1000\n        }}>\n          <div style={{\n            background:'#fff', padding:20, borderRadius:4, minWidth:300\n          }}>\n            <h3 style={{ marginTop:0, textAlign:'center' }}>\n              {editId ? 'Edit Placeholder' : 'Add Placeholder'}\n            </h3>\n            <label>Company Name<br/>\n              <input\n                value={ph.company}\n                onChange={e => setPh({...ph,company:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Quantity<br/>\n              <input\n                type=\"number\"\n                value={ph.quantity}\n                onChange={e => setPh({...ph,quantity:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Stitch Count<br/>\n              <input\n                type=\"number\"\n                value={ph.stitchCount}\n                onChange={e => setPh({...ph,stitchCount:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>In Hand Date<br/>\n              <input\n                type=\"date\"\n                value={ph.inHand}\n                onChange={e => setPh({...ph,inHand:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Due Type<br/>\n              <select\n                value={ph.dueType}\n                onChange={e => setPh({...ph,dueType:e.target.value})}\n                style={{ width:'100%' }}\n              >\n                <option>Hard Date</option>\n                <option>Soft Date</option>\n              </select>\n            </label><br/><br/>\n            <div style={{ textAlign:'right' }}>\n              <button onClick={() => setShowModal(false)} style={{ marginRight:8 }}>\n                Cancel\n              </button>\n              <button onClick={addPlaceholder}>\n                {editId ? 'Save' : 'Submit'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* — Scheduler */}\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display:'flex', gap:16, marginTop:16 }}>\n          {Object.values(columns).map(col => (\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov => (\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4 style={{ textAlign:'center', fontSize:'16px' }}>\n                    {col.title}\n                  </h4>\n                  {col.jobs.map((job, idx) => {\n                    const dueDt = parseDueDate(job.due_date),\n                          endDt = job.end ? new Date(job.end) : null,\n                          isLate = dueDt && endDt && endDt > dueDt,\n                          isHard = job.due_type === 'Hard Date',\n                          isPh   = job.id.startsWith('ph-');\n                    let bg = '#fff';\n                    if (isLate)    bg = '#ffe6e6';\n                    else if (isPh) bg = '#e8f5e9';\n                    else if (isHard) bg = '#f3e5f5';\n\n                    const borderColor = isPh\n                      ? '#388e3c'\n                      : isHard\n                        ? '#8e24aa'\n                        : '#ccc';\n\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p => (\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              position:'relative',\n                              userSelect:'none',\n                              padding:'8px',\n                              margin:'0 0 8px 0',\n                              background: bg,\n                              border: `2px solid ${borderColor}`,\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              fontSize:'14px',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            {/* Placeholder delete/edit */}\n                            {isPh && (\n                              <>\n                                <span\n                                  onClick={() => removePlaceholder(job.id)}\n                                  style={{\n                                    position:'absolute',\n                                    top:4, right:28,\n                                    cursor:'pointer',\n                                    color:'#b71c1c',\n                                    fontWeight:'bold'\n                                  }}\n                                >×</span>\n                                <span\n                                  onClick={() => openModalForEdit(job)}\n                                  style={{\n                                    position:'absolute',\n                                    top:4, right:4,\n                                    cursor:'pointer',\n                                    color:'#000',\n                                    fontWeight:'bold'\n                                  }}\n                                >✎</span>\n                              </>\n                            )}\n\n                            <div style={{ flex:1, paddingRight:6 }}>\n                              {job.title}\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:2,\n                              fontSize:'12px'\n                            }}>\n                              {job.start && (\n                                <div style={{\n                                  padding:'2px 4px',\n                                  background:'#e0f7fa',\n                                  borderRadius:10\n                                }}>{job.start}</div>\n                              )}\n                              {job.end && (\n                                <div style={{\n                                  padding:'2px 4px',\n                                  background:'#ffe0b2',\n                                  borderRadius:10\n                                }}>{job.end}</div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}