{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === Section 1: Imports, Configuration & Component Setup ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\n\n// Start of your App component\nexport default function App() {\n  _s();\n  // State hooks\n  const [columns, setColumns] = useState({\n    queue: {\n      title: 'Queue',\n      jobs: []\n    },\n    machine1: {\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [links, setLinks] = useState(loadLinks());\n  const [syncStatus, setSyncStatus] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchAll();\n  }, []);\n\n  // Manual sync handler\n  const handleSync = async () => {\n    setSyncStatus('');\n    await fetchAll();\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n  // === Section 2: Helpers ===\n\n  function isHoliday(dt) {\n    return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n  }\n  function isWorkday(dt) {\n    return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n  }\n  function clampToWorkHours(dt) {\n    let d = new Date(dt);\n    while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    }\n    if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      return clampToWorkHours(d);\n    }\n    return d;\n  }\n  function addWorkTime(start, ms) {\n    let remaining = ms;\n    let current = clampToWorkHours(start);\n    while (remaining > 0) {\n      const endOfDay = new Date(current);\n      endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n      const free = endOfDay.getTime() - current.getTime();\n      if (free <= 0) {\n        current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n      } else if (remaining <= free) {\n        current = new Date(current.getTime() + remaining);\n        remaining = 0;\n      } else {\n        remaining -= free;\n        current = new Date(endOfDay);\n      }\n    }\n    return current;\n  }\n  function fmtDT(dt) {\n    const pad = n => String(n).padStart(2, '0');\n    const month = pad(dt.getMonth() + 1);\n    const day = pad(dt.getDate());\n    let h = dt.getHours(),\n      m = pad(dt.getMinutes()),\n      ap = h >= 12 ? 'PM' : 'AM';\n    h = h % 12 || 12;\n    return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n  }\n  function parseDueDate(d) {\n    if (!d) return null;\n    if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n    const parts = d.split('/');\n    if (parts.length >= 2) {\n      const mo = +parts[0],\n        da = +parts[1],\n        yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n      if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n    }\n    const dt = new Date(d);\n    return isNaN(dt) ? null : dt;\n  }\n  function addWorkDays(start, days) {\n    let d = new Date(start),\n      added = 0;\n    while (added < days) {\n      d.setDate(d.getDate() + 1);\n      if (isWorkday(d)) added++;\n    }\n    return d;\n  }\n  function subWorkDays(start, days) {\n    let d = new Date(start),\n      removed = 0;\n    while (removed < days) {\n      d.setDate(d.getDate() - 1);\n      if (isWorkday(d)) removed++;\n    }\n    return d;\n  }\n  function fmtMMDD(d) {\n    const dt = new Date(d);\n    const mo = String(dt.getMonth() + 1).padStart(2, '0');\n    const da = String(dt.getDate()).padStart(2, '0');\n    return `${mo}/${da}`;\n  }\n  function sortQueue(arr) {\n    return [...arr].sort((a, b) => {\n      const da = parseDueDate(a.due_date),\n        db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    });\n  }\n\n  // —————————————————————————————\n  // SCHEDULING + LATE (persist embroidery_start)\n  // —————————————————————————————\n\n  // —————————————————————————————\n  // Section 3: Scheduling & Late (using start_date)\n  // —————————————————————————————\n  function scheduleMachineJobs(jobs) {\n    let prevEnd = null;\n    return jobs.map((job, idx) => {\n      // 1) Calculate cutoff for lateness (6 work-days before due)\n      const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n      const cutoff = new Date(eedDay);\n      cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n      // 2) Pick or stamp a start time (use start_date from your sheet)\n      let start;\n      if (idx === 0) {\n        if (job.start_date) {\n          // reuse stored start_date\n          start = clampToWorkHours(new Date(job.start_date));\n        } else {\n          // first-time at top: stamp “now” into start_date and persist\n          const nowIso = new Date().toISOString();\n          job.start_date = nowIso;\n          start = clampToWorkHours(new Date(nowIso));\n\n          // **Reformatted axios call below**:\n          axios.put(`${API_ROOT}/orders/${job.id}`, {\n            start_date: nowIso\n          }).catch(console.error);\n        }\n      } else {\n        // chain from previous job’s end + 30m\n        start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n      }\n\n      // 3) Calculate run time → end\n      const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n      const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n      const end = addWorkTime(start, runMs);\n\n      // 4) Decorate for display\n      job._rawStart = start;\n      job._rawEnd = end;\n      job.start = fmtDT(start);\n      job.end = fmtDT(end);\n      job.delivery = fmtMMDD(addWorkDays(end, 6));\n      job.isLate = end > cutoff;\n      prevEnd = end;\n      return job;\n    });\n  }\n\n  // === Section 4: Link Utilities ===\n  function loadLinks() {\n    try {\n      return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n    } catch {\n      return {};\n    }\n  }\n  function saveLinks(map) {\n    localStorage.setItem('jobLinks', JSON.stringify(map));\n  }\n  function getChain(jobs, id) {\n    const fwd = {},\n      rev = {};\n    jobs.forEach(j => {\n      if (j.linkedTo) {\n        fwd[j.id] = j.linkedTo;\n        rev[j.linkedTo] = j.id;\n      }\n    });\n\n    // find root of the chain\n    let root = id;\n    while (rev[root]) {\n      root = rev[root];\n    }\n\n    // build the chain array\n    const chain = [];\n    let cur = root;\n    while (cur) {\n      chain.push(cur);\n      cur = fwd[cur];\n    }\n    return chain;\n  }\n\n  // === Section 5: FETCH & MERGE (with Manual Assignment Persistence) ===\n  const fetchAll = async () => {\n    console.log('▶️ fetchAll: starting data load');\n    try {\n      // 1) Load manual assignments from localStorage\n      const manualAssign = JSON.parse(localStorage.getItem('manualAssign') || '{}');\n      console.log('  – manualAssign:', manualAssign);\n\n      // 2) Preserve any manual embroidery_start on existing cards\n      const prevEmb = {};\n      Object.values(columns).flatMap(col => col.jobs).forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n      console.log('  – prevEmb:', prevEmb);\n\n      // 3) Fetch orders + embroideryList in parallel\n      const [{\n        data: orders\n      }, {\n        data: embList\n      }] = await Promise.all([axios.get(`${API_ROOT}/orders`), axios.get(`${API_ROOT}/embroideryList`)]);\n      console.log('  – raw orders:', orders);\n      console.log('  – raw embroideryList:', embList);\n\n      // 4) Build embroidery-start map\n      const embMap = {};\n      embList.forEach(row => {\n        const id = String(row['Order #'] || '').trim();\n        if (id) embMap[id] = row['Embroidery Start Time'] || '';\n      });\n      console.log('  – embMap:', embMap);\n\n      // 5) Assemble lookup of all jobs by ID\n      const jobById = {};\n      orders.forEach(o => {\n        var _ref, _embMap$id, _ref2, _o$machineId;\n        if (o.id == null) return;\n        const id = String(o.id).trim();\n        const rawTs = (_ref = (_embMap$id = embMap[id]) !== null && _embMap$id !== void 0 ? _embMap$id : prevEmb[id]) !== null && _ref !== void 0 ? _ref : '';\n        jobById[id] = {\n          ...o,\n          id,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          embroidery_start: rawTs,\n          start_date: rawTs,\n          position: o.position != null ? o.position : null,\n          linkedTo: links[o.id] || null,\n          machineId: (_ref2 = (_o$machineId = o.machineId) !== null && _o$machineId !== void 0 ? _o$machineId : o.machine) !== null && _ref2 !== void 0 ? _ref2 : '' // server value\n        };\n      });\n\n      // 6) Override with any manual assignments\n      Object.entries(manualAssign).forEach(([id, mId]) => {\n        if (jobById[id]) jobById[id].machineId = mId;\n      });\n      console.log('  – jobById after override:', jobById);\n\n      // 7) Rebuild Machine 1 (preserving existing order + new arrivals)\n      const existing1 = columns.machine1.jobs.map(j => j.id);\n      const machine1Jobs = existing1.filter(id => jobById[id]).map(id => jobById[id]).concat(Object.values(jobById).filter(j => j.machineId === 'machine1' && !existing1.includes(j.id)));\n      console.log('  – machine1Jobs:', machine1Jobs);\n\n      // 8) Rebuild Machine 2\n      const existing2 = columns.machine2.jobs.map(j => j.id);\n      const machine2Jobs = existing2.filter(id => jobById[id]).map(id => jobById[id]).concat(Object.values(jobById).filter(j => j.machineId === 'machine2' && !existing2.includes(j.id)));\n      console.log('  – machine2Jobs:', machine2Jobs);\n\n      // 9) Build Queue: everything NOT on a machine\n      const queueJobs = Object.values(jobById).filter(j => !['machine1', 'machine2'].includes(j.machineId)).map(j => ({\n        ...j,\n        start_date: '',\n        _rawStart: null,\n        _rawEnd: null,\n        start: '',\n        end: '',\n        delivery: '',\n        isLate: false\n      })).sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n      console.log('  – queueJobs:', queueJobs);\n\n      // 10) Schedule runtimes and commit to state\n      const next = {\n        queue: {\n          ...columns.queue,\n          jobs: queueJobs\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(machine1Jobs)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(machine2Jobs)\n        }\n      };\n      console.log('▶️ fetchAll: setting columns →', next);\n      setColumns(next);\n    } catch (err) {\n      console.error('⚠️ fetchAll error:', err);\n    }\n  };\n\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: Drag & Drop Handler (with localStorage) ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const srcId = source.droppableId,\n      dstId = destination.droppableId;\n    if (srcId === dstId && source.index === destination.index) return;\n\n    // 1) Remove from source column\n    const srcJobs = Array.from(columns[srcId].jobs);\n    const [moved] = srcJobs.splice(source.index, 1);\n\n    // 2) Clear schedule if dropping into queue\n    const newJob = dstId === 'queue' ? {\n      ...moved,\n      start_date: '',\n      _rawStart: null,\n      _rawEnd: null,\n      start: '',\n      end: '',\n      delivery: '',\n      isLate: false\n    } : moved;\n\n    // 3) Insert into destination\n    const dstJobs = Array.from(columns[dstId].jobs);\n    dstJobs.splice(destination.index, 0, newJob);\n\n    // 4) Cleanup / re-sort or re-schedule\n    let finalDstJobs;\n    if (dstId === 'queue') {\n      finalDstJobs = dstJobs.sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n    } else {\n      finalDstJobs = scheduleMachineJobs(dstJobs);\n    }\n\n    // 5) Persist this manual move\n    const manualAssign = JSON.parse(localStorage.getItem('manualAssign') || '{}');\n    manualAssign[draggableId] = dstId;\n    localStorage.setItem('manualAssign', JSON.stringify(manualAssign));\n\n    // 6) Commit to state\n    setColumns({\n      ...columns,\n      [srcId]: {\n        ...columns[srcId],\n        jobs: srcJobs\n      },\n      [dstId]: {\n        ...columns[dstId],\n        jobs: finalDstJobs\n      }\n    });\n  };\n\n  // === Section 9: Render / Return ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 13\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8,\n        fontSize: 13\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      style: {\n        fontSize: 13\n      },\n      children: [\"Sync from Sheet\", ' ', syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green',\n          fontSize: 13\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 16,\n        margin: '12px 0',\n        flexWrap: 'wrap',\n        fontSize: 12\n      },\n      children: [[{\n        label: 'Placeholder',\n        bg: LIGHT_YELLOW,\n        border: DARK_YELLOW\n      }, {\n        label: 'Soft Date',\n        bg: LIGHT_GREY,\n        border: DARK_GREY\n      }, {\n        label: 'Hard Date',\n        bg: LIGHT_PURPLE,\n        border: DARK_PURPLE\n      }, {\n        label: 'Late',\n        bg: 'red',\n        border: 'red'\n      }].map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            width: 12,\n            height: 12,\n            background: item.bg,\n            border: `2px solid ${item.border}`,\n            borderRadius: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), item.label]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 14\n          },\n          children: \"\\uD83D\\uDD17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }, this), \" Link\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 14\n          },\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 9\n        }, this), \" Unlink\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 7\n      }, this), ['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n        const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: 12,\n              height: 12,\n              background: color,\n              borderRadius: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this), txt]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n          // build segments of linked chains\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({\n              start: i,\n              len\n            });\n            i += len;\n          }\n          const GAP = 6,\n            OUTLINE = 6;\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                position: 'relative',\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: colId === 'queue' ? 260 : 300,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0',\n                  fontSize: 13\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  marginBottom: GAP,\n                  zIndex: seg.len > 1 ? 3 : 1,\n                  outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                  outlineOffset: seg.len > 1 ? '0px' : undefined,\n                  borderRadius: 4\n                },\n                children: jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                  const idx = seg.start + jIdx;\n                  const isPh = job.id.startsWith('ph-');\n                  const isSoft = job.due_type === 'Soft Date';\n                  const base = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                  let bg = base;\n                  let bCol = isPh ? DARK_YELLOW : isSoft ? DARK_GREY : DARK_PURPLE;\n                  if (job.isLate) {\n                    bg = `repeating-linear-gradient(\n                            45deg,\n                            ${base}, ${base} 6px,\n                            rgba(255,0,0,0.5) 6px,\n                            rgba(255,0,0,0.5) 12px\n                          )`;\n                    bCol = 'red';\n                  }\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job.id,\n                    index: idx,\n                    children: prov => {\n                      var _job$design, _jobs;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: prov.innerRef,\n                        ...prov.draggableProps,\n                        ...prov.dragHandleProps,\n                        style: {\n                          position: 'relative',\n                          display: 'grid',\n                          gridTemplateColumns: '1fr auto',\n                          gridTemplateRows: 'auto auto auto auto',\n                          columnGap: 6,\n                          rowGap: 4,\n                          padding: '6px 28px 6px 6px',\n                          margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                          background: bg,\n                          border: `2px solid ${bCol}`,\n                          borderRadius: 4,\n                          zIndex: 2,\n                          ...prov.draggableProps.style\n                        },\n                        children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 4,\n                            height: '100%',\n                            background: '#0288d1',\n                            zIndex: 4\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 682,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 1,\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13,\n                            fontWeight: 'bold'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              display: 'inline-block',\n                              width: 20,\n                              height: 20,\n                              borderRadius: '50%',\n                              background: '#000',\n                              color: base,\n                              lineHeight: '20px',\n                              textAlign: 'center',\n                              fontSize: isPh ? 13 : 11,\n                              fontWeight: 'bold',\n                              marginRight: 4\n                            },\n                            children: isPh ? '*' : job.id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 710,\n                            columnNumber: 35\n                          }, this), job.company]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 696,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            fontSize: 15,\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis'\n                          },\n                          children: job.quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 731,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 1,\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: (_job$design = job.design) === null || _job$design === void 0 ? void 0 : _job$design.slice(0, 22)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 750,\n                          columnNumber: 33\n                        }, this), job.start && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_START,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.start\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 768,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 1,\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 785,\n                          columnNumber: 33\n                        }, this), job.end && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.end\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 803,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 1,\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: `IHD: ${fmtMMDD(job.due_date)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 820,\n                          columnNumber: 33\n                        }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.delivery\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 836,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: 28,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomLeftRadius: 4,\n                            zIndex: 4,\n                            fontSize: 11,\n                            fontWeight: 'bold'\n                          },\n                          children: (job.due_type || '')[0] || ''\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 853,\n                          columnNumber: 33\n                        }, this), jIdx < seg.len - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => toggleLink(colId, idx),\n                          style: {\n                            position: 'absolute',\n                            top: 28,\n                            right: 0,\n                            width: 28,\n                            height: `calc(100% - 28px)`,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer',\n                            background: base,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: job.linkedTo === ((_jobs = jobs[idx + 1]) === null || _jobs === void 0 ? void 0 : _jobs.id) ? '❌' : '🔗'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 876,\n                          columnNumber: 35\n                        }, this), isPh && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: '100%',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'flex-start',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => editPlaceholder(job),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u270E\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 917,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => removePlaceholder(job.id),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u2716\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 923,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 900,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 661,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, si, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"1MOxpzziTiesF5/xaIVkIVLP9Fw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","App","_s","columns","setColumns","queue","title","jobs","machine1","machine2","links","setLinks","loadLinks","syncStatus","setSyncStatus","showModal","setShowModal","ph","setPh","id","company","quantity","stitchCount","inHand","dueType","fetchAll","handleSync","setTimeout","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","prevEnd","map","job","idx","eedDay","cutoff","start_date","nowIso","put","catch","console","error","qty","Math","ceil","runMs","end","_rawStart","_rawEnd","delivery","isLate","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","fwd","rev","forEach","j","linkedTo","root","chain","cur","push","log","manualAssign","prevEmb","Object","values","flatMap","col","embroidery_start","data","orders","embList","Promise","all","get","embMap","row","trim","jobById","o","_ref","_embMap$id","_ref2","_o$machineId","rawTs","stitch_count","design","due_type","position","machineId","machine","entries","mId","existing1","machine1Jobs","filter","concat","existing2","machine2Jobs","queueJobs","next","err","submitPlaceholder","now","setPlaceholders","ps","p","c","removePlaceholder","editPlaceholder","toggleLink","colId","cols","below","l","onDragEnd","result","source","destination","draggableId","srcId","droppableId","dstId","index","srcJobs","Array","from","moved","splice","newJob","dstJobs","finalDstJobs","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","display","alignItems","gap","margin","flexWrap","label","bg","border","item","i","width","height","background","borderRadius","txt","marginTop","isArray","segments","len","GAP","OUTLINE","provided","ref","innerRef","droppableProps","minHeight","textAlign","seg","si","marginBottom","zIndex","outline","undefined","outlineOffset","jIdx","isPh","startsWith","isSoft","base","bCol","prov","_job$design","_jobs","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","top","right","gridRow","gridColumn","whiteSpace","overflow","textOverflow","fontWeight","lineHeight","justifySelf","justifyContent","borderTopRightRadius","borderBottomLeftRadius","flexDirection","cursor","borderBottomRightRadius","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === Section 1: Imports, Configuration & Component Setup ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\n// Start of your App component\nexport default function App() {\n  // State hooks\n  const [columns, setColumns]   = useState({\n    queue:    { title: 'Queue',     jobs: [] },\n    machine1: { title: 'Machine 1', jobs: [] },\n    machine2: { title: 'Machine 2', jobs: [] },\n  });\n  const [links, setLinks]       = useState(loadLinks());\n  const [syncStatus, setSyncStatus] = useState('');\n  const [showModal, setShowModal]   = useState(false);\n  const [ph, setPh]             = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchAll();\n  }, []);\n\n  // Manual sync handler\n  const handleSync = async () => {\n    setSyncStatus('');\n    await fetchAll();\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n// === Section 2: Helpers ===\n\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\n\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\n\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\n\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\n\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\n\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (persist embroidery_start)\n// —————————————————————————————\n\n// —————————————————————————————\n// Section 3: Scheduling & Late (using start_date)\n// —————————————————————————————\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n\n  return jobs.map((job, idx) => {\n    // 1) Calculate cutoff for lateness (6 work-days before due)\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // 2) Pick or stamp a start time (use start_date from your sheet)\n    let start;\n    if (idx === 0) {\n      if (job.start_date) {\n        // reuse stored start_date\n        start = clampToWorkHours(new Date(job.start_date));\n      } else {\n        // first-time at top: stamp “now” into start_date and persist\n        const nowIso = new Date().toISOString();\n        job.start_date = nowIso;\n        start = clampToWorkHours(new Date(nowIso));\n\n        // **Reformatted axios call below**:\n        axios.put(\n          `${API_ROOT}/orders/${job.id}`,\n          { start_date: nowIso }\n        ).catch(console.error);\n      }\n    } else {\n      // chain from previous job’s end + 30m\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // 3) Calculate run time → end\n    const qty   = job.quantity % 6 === 0\n      ? job.quantity\n      : Math.ceil(job.quantity / 6) * 6;\n    const runMs = (job.stitchCount / 30000) * (qty / 6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    // 4) Decorate for display\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\n\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\n\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]    = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n\n  // find root of the chain\n  let root = id;\n  while (rev[root]) {\n    root = rev[root];\n  }\n\n  // build the chain array\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// === Section 5: FETCH & MERGE (with Manual Assignment Persistence) ===\nconst fetchAll = async () => {\n  console.log('▶️ fetchAll: starting data load');\n\n  try {\n    // 1) Load manual assignments from localStorage\n    const manualAssign = JSON.parse(localStorage.getItem('manualAssign') || '{}');\n    console.log('  – manualAssign:', manualAssign);\n\n    // 2) Preserve any manual embroidery_start on existing cards\n    const prevEmb = {};\n    Object.values(columns)\n      .flatMap(col => col.jobs)\n      .forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n    console.log('  – prevEmb:', prevEmb);\n\n    // 3) Fetch orders + embroideryList in parallel\n    const [{ data: orders }, { data: embList }] = await Promise.all([\n      axios.get(`${API_ROOT}/orders`),\n      axios.get(`${API_ROOT}/embroideryList`),\n    ]);\n    console.log('  – raw orders:', orders);\n    console.log('  – raw embroideryList:', embList);\n\n    // 4) Build embroidery-start map\n    const embMap = {};\n    embList.forEach(row => {\n      const id = String(row['Order #'] || '').trim();\n      if (id) embMap[id] = row['Embroidery Start Time'] || '';\n    });\n    console.log('  – embMap:', embMap);\n\n    // 5) Assemble lookup of all jobs by ID\n    const jobById = {};\n    orders.forEach(o => {\n      if (o.id == null) return;\n      const id    = String(o.id).trim();\n      const rawTs = embMap[id] ?? prevEmb[id] ?? '';\n      jobById[id] = {\n        ...o,\n        id,\n        stitchCount: o.stitch_count,\n        quantity:    o.quantity,\n        company:     o.company,\n        design:      o.design,\n        due_date:    o.due_date,\n        due_type:    o.due_type,\n        embroidery_start: rawTs,\n        start_date:  rawTs,\n        position:    o.position != null ? o.position : null,\n        linkedTo:    links[o.id] || null,\n        machineId:   o.machineId ?? o.machine ?? '',  // server value\n      };\n    });\n\n    // 6) Override with any manual assignments\n    Object.entries(manualAssign).forEach(([id, mId]) => {\n      if (jobById[id]) jobById[id].machineId = mId;\n    });\n    console.log('  – jobById after override:', jobById);\n\n    // 7) Rebuild Machine 1 (preserving existing order + new arrivals)\n    const existing1 = columns.machine1.jobs.map(j => j.id);\n    const machine1Jobs = existing1\n      .filter(id => jobById[id])\n      .map(id => jobById[id])\n      .concat(\n        Object.values(jobById).filter(\n          j => j.machineId === 'machine1' && !existing1.includes(j.id)\n        )\n      );\n    console.log('  – machine1Jobs:', machine1Jobs);\n\n    // 8) Rebuild Machine 2\n    const existing2 = columns.machine2.jobs.map(j => j.id);\n    const machine2Jobs = existing2\n      .filter(id => jobById[id])\n      .map(id => jobById[id])\n      .concat(\n        Object.values(jobById).filter(\n          j => j.machineId === 'machine2' && !existing2.includes(j.id)\n        )\n      );\n    console.log('  – machine2Jobs:', machine2Jobs);\n\n    // 9) Build Queue: everything NOT on a machine\n    const queueJobs = Object.values(jobById)\n      .filter(j => !['machine1', 'machine2'].includes(j.machineId))\n      .map(j => ({\n        ...j,\n        start_date: '', _rawStart: null, _rawEnd: null,\n        start: '', end: '', delivery: '', isLate: false,\n      }))\n      .sort((a, b) => {\n        const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n    console.log('  – queueJobs:', queueJobs);\n\n    // 10) Schedule runtimes and commit to state\n    const next = {\n      queue:    { ...columns.queue,    jobs: queueJobs },\n      machine1: { ...columns.machine1, jobs: scheduleMachineJobs(machine1Jobs) },\n      machine2: { ...columns.machine2, jobs: scheduleMachineJobs(machine2Jobs) },\n    };\n    console.log('▶️ fetchAll: setting columns →', next);\n    setColumns(next);\n\n  } catch (err) {\n    console.error('⚠️ fetchAll error:', err);\n  }\n};\n\n\n// === Section 6: Placeholder CRUD ===\nconst submitPlaceholder = () => {\nconst job = {\nid:         ph.id || `ph-${Date.now()}`,\ncompany:    ph.company,\nquantity:   +ph.quantity || 1,\nstitchCount:+ph.stitchCount||30000,\ndue_date:   ph.inHand,\ndue_type:   ph.dueType,\nmachineId:  'queue',\nposition:   null\n};\nif (ph.id) {\nsetPlaceholders(ps => ps.map(p=>p.id===ph.id?job:p));\nsetColumns(c => ({\n...c,\nqueue:    {...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)},\nmachine1: {...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j)},\nmachine2: {...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j)},\n}));\n} else {\nsetPlaceholders(ps => [job, ...ps]);\nsetColumns(c => ({\n...c,\nqueue: {...c.queue, jobs: [job, ...c.queue.jobs]}\n}));\n}\nsetShowModal(false);\nsetPh({id:null,company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n};\nconst removePlaceholder = id => {\nsetPlaceholders(ps => ps.filter(p=>p.id!==id));\nsetColumns(c => ({\n...c,\nqueue:    {...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)},\nmachine1: {...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id)},\nmachine2: {...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id)},\n}));\n};\nconst editPlaceholder = job => {\nsetPh({\nid: job.id,\ncompany: job.company,\nquantity: job.quantity,\nstitchCount: job.stitchCount,\ninHand: job.due_date,\ndueType: job.due_type\n});\nsetShowModal(true);\n};\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: Drag & Drop Handler (with localStorage) ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const srcId = source.droppableId, dstId = destination.droppableId;\n  if (srcId === dstId && source.index === destination.index) return;\n\n  // 1) Remove from source column\n  const srcJobs = Array.from(columns[srcId].jobs);\n  const [moved] = srcJobs.splice(source.index, 1);\n\n  // 2) Clear schedule if dropping into queue\n  const newJob = dstId === 'queue' \n    ? { ...moved, start_date:'', _rawStart:null, _rawEnd:null, start:'', end:'', delivery:'', isLate:false } \n    : moved;\n\n  // 3) Insert into destination\n  const dstJobs = Array.from(columns[dstId].jobs);\n  dstJobs.splice(destination.index, 0, newJob);\n\n  // 4) Cleanup / re-sort or re-schedule\n  let finalDstJobs;\n  if (dstId === 'queue') {\n    finalDstJobs = dstJobs.sort((a, b) => {\n      const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    });\n  } else {\n    finalDstJobs = scheduleMachineJobs(dstJobs);\n  }\n\n  // 5) Persist this manual move\n  const manualAssign = JSON.parse(localStorage.getItem('manualAssign') || '{}');\n  manualAssign[draggableId] = dstId;\n  localStorage.setItem('manualAssign', JSON.stringify(manualAssign));\n\n  // 6) Commit to state\n  setColumns({\n    ...columns,\n    [srcId]: { ...columns[srcId], jobs: srcJobs },\n    [dstId]: { ...columns[dstId], jobs: finalDstJobs },\n  });\n};\n\n// === Section 9: Render / Return ===\nreturn (\n  <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 13 }}>\n\n    {/* Add / Sync Buttons */}\n    <button\n      onClick={() => setShowModal(true)}\n      style={{ marginRight: 8, fontSize: 13 }}\n    >\n      + Add Placeholder\n    </button>\n    <button onClick={handleSync} style={{ fontSize: 13 }}>\n      Sync from Sheet{' '}\n      {syncStatus === 'updated' && (\n        <span style={{ color: 'green', fontSize: 13 }}>✓ Updated</span>\n      )}\n    </button>\n\n    {/* Legend */}\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: 16,\n        margin: '12px 0',\n        flexWrap: 'wrap',\n        fontSize: 12,\n      }}\n    >\n      {[\n        { label: 'Placeholder', bg: LIGHT_YELLOW, border: DARK_YELLOW },\n        { label: 'Soft Date',    bg: LIGHT_GREY,   border: DARK_GREY   },\n        { label: 'Hard Date',    bg: LIGHT_PURPLE, border: DARK_PURPLE },\n        { label: 'Late',         bg: 'red',        border: 'red'       },\n      ].map((item, i) => (\n        <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n          <span\n            style={{\n              width: 12,\n              height: 12,\n              background: item.bg,\n              border: `2px solid ${item.border}`,\n              borderRadius: 2,\n            }}\n          />\n          {item.label}\n        </div>\n      ))}\n      <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n        <span style={{ fontSize: 14 }}>🔗</span> Link\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n        <span style={{ fontSize: 14 }}>❌</span> Unlink\n      </div>\n      {['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n        const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n        return (\n          <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n            <span\n              style={{\n                width: 12,\n                height: 12,\n                background: color,\n                borderRadius: 2,\n              }}\n            />\n            {txt}\n          </div>\n        );\n      })}\n    </div>\n\n    {/* Drag & Drop Columns */}\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n        {['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n          // build segments of linked chains\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({ start: i, len });\n            i += len;\n          }\n          const GAP = 6, OUTLINE = 6;\n\n          return (\n            <Droppable key={colId} droppableId={colId}>\n              {provided => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    position: 'relative',\n                    border: '1px solid #ccc',\n                    borderRadius: 4,\n                    width: colId === 'queue' ? 260 : 300,\n                    minHeight: 400,\n                    padding: 12,\n                    background: '#fafafa',\n                  }}\n                >\n                  <h4 style={{ textAlign: 'center', margin: '8px 0', fontSize: 13 }}>\n                    {col.title}\n                  </h4>\n\n                  {segments.map((seg, si) => (\n                    <div\n                      key={si}\n                      style={{\n                        position: 'relative',\n                        marginBottom: GAP,\n                        zIndex: seg.len > 1 ? 3 : 1,\n                        outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                        outlineOffset: seg.len > 1 ? '0px' : undefined,\n                        borderRadius: 4,\n                      }}\n                    >\n                      {jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                        const idx = seg.start + jIdx;\n                        const isPh = job.id.startsWith('ph-');\n                        const isSoft = job.due_type === 'Soft Date';\n                        const base = isPh\n                          ? LIGHT_YELLOW\n                          : isSoft\n                          ? LIGHT_GREY\n                          : LIGHT_PURPLE;\n                        let bg = base;\n                        let bCol = isPh\n                          ? DARK_YELLOW\n                          : isSoft\n                          ? DARK_GREY\n                          : DARK_PURPLE;\n                        if (job.isLate) {\n                          bg = `repeating-linear-gradient(\n                            45deg,\n                            ${base}, ${base} 6px,\n                            rgba(255,0,0,0.5) 6px,\n                            rgba(255,0,0,0.5) 12px\n                          )`;\n                          bCol = 'red';\n                        }\n\n                        return (\n                          <Draggable key={job.id} draggableId={job.id} index={idx}>\n                            {prov => (\n                              <div\n                                ref={prov.innerRef}\n                                {...prov.draggableProps}\n                                {...prov.dragHandleProps}\n                                style={{\n                                  position: 'relative',\n                                  display: 'grid',\n                                  gridTemplateColumns: '1fr auto',\n                                  gridTemplateRows: 'auto auto auto auto',\n                                  columnGap: 6,\n                                  rowGap: 4,\n                                  padding: '6px 28px 6px 6px',\n                                  margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                                  background: bg,\n                                  border: `2px solid ${bCol}`,\n                                  borderRadius: 4,\n                                  zIndex: 2,\n                                  ...prov.draggableProps.style,\n                                }}\n                              >\n                                {jIdx === 0 && seg.len > 1 && (\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      right: 0,\n                                      width: 4,\n                                      height: '100%',\n                                      background: '#0288d1',\n                                      zIndex: 4,\n                                    }}\n                                  />\n                                )}\n\n                                {/* Row1 Col1: ID + Company */}\n                                <span\n                                  style={{\n                                    gridRow: 1,\n                                    gridColumn: 1,\n                                    background: base,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    fontSize: 13,\n                                    fontWeight: 'bold',\n                                  }}\n                                >\n                                  <span\n                                    style={{\n                                      display: 'inline-block',\n                                      width: 20,\n                                      height: 20,\n                                      borderRadius: '50%',\n                                      background: '#000',\n                                      color: base,\n                                      lineHeight: '20px',\n                                      textAlign: 'center',\n                                      fontSize: isPh ? 13 : 11,\n                                      fontWeight: 'bold',\n                                      marginRight: 4,\n                                    }}\n                                  >\n                                    {isPh ? '*' : job.id}\n                                  </span>\n                                  {job.company}\n                                </span>\n\n                                {/* Row1 Col2: Quantity */}\n                                <span\n                                  style={{\n                                    gridRow: 1,\n                                    gridColumn: 2,\n                                    justifySelf: 'end',\n                                    background: base,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    fontSize: 15,\n                                    fontWeight: 'bold',\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                  }}\n                                >\n                                  {job.quantity}\n                                </span>\n\n                                {/* Row2 Col1: Design */}\n                                <span\n                                  style={{\n                                    gridRow: 2,\n                                    gridColumn: 1,\n                                    background: base,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    fontSize: 13,\n                                  }}\n                                >\n                                  {job.design?.slice(0, 22)}\n                                </span>\n\n                                {/* Row2 Col2: Start */}\n                                {job.start && (\n                                  <span\n                                    style={{\n                                      gridRow: 2,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      background: BUBBLE_START,\n                                      padding: '0 4px',\n                                      borderRadius: 10,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.start}\n                                  </span>\n                                )}\n\n                                {/* Row3 Col1: EED */}\n                                <span\n                                  style={{\n                                    gridRow: 3,\n                                    gridColumn: 1,\n                                    background: BUBBLE_END,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    fontSize: 13,\n                                  }}\n                                >\n                                  {`EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`}\n                                </span>\n\n                                {/* Row3 Col2: End */}\n                                {job.end && (\n                                  <span\n                                    style={{\n                                      gridRow: 3,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      background: BUBBLE_END,\n                                      padding: '0 4px',\n                                      borderRadius: 10,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.end}\n                                  </span>\n                                )}\n\n                                {/* Row4 Col1: IHD */}\n                                <span\n                                  style={{\n                                    gridRow: 4,\n                                    gridColumn: 1,\n                                    background: BUBBLE_DELIV,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    fontSize: 13,\n                                  }}\n                                >\n                                  {`IHD: ${fmtMMDD(job.due_date)}`}\n                                </span>\n\n                                {/* Row4 Col2: Delivery */}\n                                {job.delivery && (\n                                  <span\n                                    style={{\n                                      gridRow: 4,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      background: BUBBLE_DELIV,\n                                      padding: '0 4px',\n                                      borderRadius: 10,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.delivery}\n                                  </span>\n                                )}\n\n                                {/* Top-right tab: Due-Type */}\n                                <div\n                                  style={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    right: 0,\n                                    width: 28,\n                                    height: 28,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    background: base,\n                                    borderTopRightRadius: 4,\n                                    borderBottomLeftRadius: 4,\n                                    zIndex: 4,\n                                    fontSize: 11,\n                                    fontWeight: 'bold',\n                                  }}\n                                >\n                                  {(job.due_type || '')[0] || ''}\n                                </div>\n\n                                {/* Link / Unlink toggle */}\n                                {jIdx < seg.len - 1 && (\n                                  <div\n                                    onClick={() => toggleLink(colId, idx)}\n                                    style={{\n                                      position: 'absolute',\n                                      top: 28,\n                                      right: 0,\n                                      width: 28,\n                                      height: `calc(100% - 28px)`,\n                                      display: 'flex',\n                                      flexDirection: 'column',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      cursor: 'pointer',\n                                      background: base,\n                                      borderBottomRightRadius: 4,\n                                      zIndex: 4,\n                                    }}\n                                  >\n                                    {job.linkedTo === jobs[idx + 1]?.id ? '❌' : '🔗'}\n                                  </div>\n                                )}\n\n                                {/* Placeholder edit/delete */}\n                                {isPh && (\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      right: 0,\n                                      width: 28,\n                                      height: '100%',\n                                      display: 'flex',\n                                      flexDirection: 'column',\n                                      alignItems: 'center',\n                                      justifyContent: 'flex-start',\n                                      background: base,\n                                      borderTopRightRadius: 4,\n                                      borderBottomRightRadius: 4,\n                                      zIndex: 4,\n                                    }}\n                                  >\n                                    <span\n                                      onClick={() => editPlaceholder(job)}\n                                      style={{ cursor: 'pointer', fontSize: 12, margin: 4 }}\n                                    >\n                                      ✎\n                                    </span>\n                                    <span\n                                      onClick={() => removePlaceholder(job.id)}\n                                      style={{ cursor: 'pointer', fontSize: 12, margin: 4 }}\n                                    >\n                                      ✖\n                                    </span>\n                                  </div>\n                                )}\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                    </div>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n        })}\n      </div>\n    </DragDropContext>\n  </div>\n);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}