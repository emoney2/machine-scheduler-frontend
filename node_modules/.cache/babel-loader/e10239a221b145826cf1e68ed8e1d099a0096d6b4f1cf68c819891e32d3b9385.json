{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const month = pad(dt.getMonth() + 1);\n  const day = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0],\n      da = +parts[1],\n      yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start),\n    removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth() + 1).padStart(2, '0');\n  const da = String(dt.getDate()).padStart(2, '0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date),\n      db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start ? clampToWorkHours(new Date(job.embroidery_start)) : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = fmtDT(start);\n    job.end = fmtDT(end);\n    job.delivery = fmtMMDD(addWorkDays(end, 6));\n    job.isLate = end > cutoff;\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {},\n    rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id] = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState(() => JSON.parse(localStorage.getItem('placeholders') || '[]'));\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => {\n    saveLinks(links);\n  }, [links]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE (queue always date-sorted; machines manual position)\n  const fetchAll = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_ROOT}/orders`);\n      const real = {\n        queue: [],\n        machine1: [],\n        machine2: []\n      };\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = o.machineId === 'machine1' || o.machineId === 'machine2' ? o.machineId : 'queue';\n        real[col].push({\n          ...o,\n          id: o.id.toString(),\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date || '',\n          end: o.end_date || '',\n          delivery: o.delivery || '',\n          position: o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo: links[o.id] || null\n        });\n      });\n\n      // sort real machines by stored position\n      ['machine1', 'machine2'].forEach(c => {\n        real[c].sort((a, b) => {\n          var _a$position, _b$position;\n          return ((_a$position = a.position) !== null && _a$position !== void 0 ? _a$position : Infinity) - ((_b$position = b.position) !== null && _b$position !== void 0 ? _b$position : Infinity);\n        });\n      });\n\n      // merge placeholders + real\n      const merged = {};\n      ['queue', 'machine1', 'machine2'].forEach(col => {\n        merged[col] = [...placeholders.filter(p => p.machineId === col), ...real[col]];\n      });\n\n      // set state\n      setColumns({\n        queue: {\n          ...columns.queue,\n          jobs: sortQueue(merged.queue)\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(merged.machine1)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(merged.machine2)\n        }\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // on mount only\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols;\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: onDragEnd ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const sc = source.droppableId;\n    const dc = destination.droppableId;\n\n    // same-list reorder\n    if (sc === dc) {\n      const jobs = Array.from(columns[sc].jobs);\n      const [moved] = jobs.splice(source.index, 1);\n      jobs.splice(destination.index, 0, moved);\n      return setColumns(prev => ({\n        ...prev,\n        [sc]: {\n          ...prev[sc],\n          jobs\n        }\n      }));\n    }\n\n    // cross-list\n    const sourceJobs = Array.from(columns[sc].jobs);\n    const destJobs = Array.from(columns[dc].jobs);\n\n    // handle dropping between a linked pair\n    const before = destJobs[destination.index - 1];\n    const after = destJobs[destination.index];\n    if (before && after && before.linkedTo === after.id && draggableId !== before.id) {\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        delete m[before.id];\n        return m;\n      });\n      before.linkedTo = null;\n    }\n\n    // build chain\n    const chain = getChain(sourceJobs, draggableId);\n    const newSrc = sourceJobs.filter(j => !chain.includes(j.id));\n    const newDst = Array.from(destJobs);\n    newDst.splice(destination.index, 0, ...sourceJobs.filter(j => chain.includes(j.id)));\n\n    // if back to queue ⇒ unlink & clear timing\n    if (dc === 'queue') {\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        chain.forEach(id => delete m[id]);\n        return m;\n      });\n      newDst.forEach(job => {\n        if (chain.includes(job.id)) {\n          job.linkedTo = null;\n          job._rawStart = job._rawEnd = null;\n          job.start = job.end = job.delivery = '';\n          job.isLate = false;\n          job.embroidery_start = '';\n          job.position = null;\n        }\n      });\n    }\n\n    // update placeholders\n    setPlaceholders(ps => ps.map(p => chain.includes(p.id) ? {\n      ...p,\n      machineId: dc\n    } : p));\n\n    // persist & update API\n    chain.forEach((id, i) => {\n      const job = newDst.find(j => j.id === id);\n      job.machineId = dc === 'queue' ? null : dc;\n      job.position = dc === 'queue' ? null : destination.index + i;\n      axios.put(`${API_ROOT}/orders/${id}`, {\n        machineId: job.machineId,\n        start_date: job.start || '',\n        end_date: job.end || '',\n        delivery: job.delivery || '',\n        position: job.position,\n        embroidery_start: job.embroidery_start || ''\n      }).catch(console.error);\n    });\n\n    // rebuild columns\n    const updated = {\n      queue: {\n        ...columns.queue,\n        jobs: sortQueue(newSrc.concat(dc === 'queue' ? newDst : []))\n      },\n      machine1: {\n        ...columns.machine1,\n        jobs: scheduleMachineJobs(dc === 'machine1' ? newDst : newSrc)\n      },\n      machine2: {\n        ...columns.machine2,\n        jobs: scheduleMachineJobs(dc === 'machine2' ? newDst : newSrc)\n      }\n    };\n    setColumns(updated);\n  };\n\n  // === Section 9: Render / Return ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 13\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8,\n        fontSize: 13\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      style: {\n        fontSize: 13\n      },\n      children: [\"Sync from Sheet\", ' ', syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green',\n          fontSize: 13\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 5\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center',\n            fontSize: 13\n          },\n          children: \"Add/Edit Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8,\n              fontSize: 13\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitPlaceholder,\n            style: {\n              fontSize: 13\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n          // build linked segments\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({\n              start: i,\n              len\n            });\n            i += len;\n          }\n          const GAP = 6,\n            OUTLINE = 6;\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                position: 'relative',\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: colId === 'queue' ? 260 : 300,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0',\n                  fontSize: 13\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  marginBottom: GAP,\n                  zIndex: seg.len > 1 ? 3 : 1,\n                  outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                  outlineOffset: seg.len > 1 ? '0px' : undefined,\n                  borderRadius: 4\n                },\n                children: jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                  const idx = seg.start + jIdx;\n                  const isPh = job.id.startsWith('ph-');\n                  const isSoft = job.due_type === 'Soft Date';\n                  const base = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                  let bg = base,\n                    bCol = isPh ? DARK_YELLOW : isSoft ? DARK_GREY : DARK_PURPLE;\n                  if (job.isLate) {\n                    bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                    bCol = 'red';\n                  }\n                  const dt0 = (job.due_type || '')[0] || '';\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job.id,\n                    index: idx,\n                    children: prov => {\n                      var _job$design, _jobs;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: prov.innerRef,\n                        ...prov.draggableProps,\n                        ...prov.dragHandleProps,\n                        style: {\n                          position: 'relative',\n                          display: 'grid',\n                          gridTemplateColumns: '1fr auto',\n                          gridTemplateRows: 'auto auto auto auto',\n                          columnGap: 6,\n                          rowGap: 4,\n                          padding: '6px 28px 6px 6px',\n                          margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                          background: bg,\n                          border: `2px solid ${bCol}`,\n                          borderRadius: 4,\n                          zIndex: 2,\n                          ...prov.draggableProps.style\n                        },\n                        children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 4,\n                            height: '100%',\n                            background: '#0288d1',\n                            zIndex: 4\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 647,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13,\n                            fontWeight: 'bold'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              display: 'inline-block',\n                              width: 20,\n                              height: 20,\n                              borderRadius: '50%',\n                              background: '#000',\n                              color: base,\n                              lineHeight: '20px',\n                              textAlign: 'center',\n                              fontSize: isPh ? 13 : 11,\n                              fontWeight: 'bold',\n                              marginRight: 4\n                            },\n                            children: isPh ? '*' : job.id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 676,\n                            columnNumber: 37\n                          }, this), job.company]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 661,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            fontSize: 15,\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis'\n                          },\n                          children: job.quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 697,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: (_job$design = job.design) === null || _job$design === void 0 ? void 0 : _job$design.slice(0, 22)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 717,\n                          columnNumber: 35\n                        }, this), job.start && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_START,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.start\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 736,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 754,\n                          columnNumber: 35\n                        }, this), job.end && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.end\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 775,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: `IHD: ${fmtMMDD(job.due_date)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 793,\n                          columnNumber: 35\n                        }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.delivery\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 810,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: 28,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomLeftRadius: 4,\n                            zIndex: 4,\n                            fontSize: 11,\n                            fontWeight: 'bold'\n                          },\n                          children: dt0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 828,\n                          columnNumber: 35\n                        }, this), idx < jobs.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => toggleLink(colId, idx),\n                          style: {\n                            position: 'absolute',\n                            top: 28,\n                            right: 0,\n                            width: 28,\n                            height: `calc(100% - 28px)`,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer',\n                            background: base,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: job.linkedTo === ((_jobs = jobs[idx + 1]) === null || _jobs === void 0 ? void 0 : _jobs.id) ? '❌' : '🔗'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 851,\n                          columnNumber: 37\n                        }, this), job.id.startsWith('ph-') && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: '100%',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'start',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => editPlaceholder(job),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u270E\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 894,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => removePlaceholder(job.id),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u2716\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 904,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 877,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 624,\n                        columnNumber: 33\n                      }, this);\n                    }\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, si, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 3\n  }, this);\n\n  // ← end of App component\n}\n_s(App, \"Q0PNfIQDk38Ggd9P0AIYaHfZJG0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","jobs","prevEnd","map","job","idx","embroidery_start","qty","quantity","Math","ceil","runMs","stitchCount","end","eedDay","cutoff","_rawStart","_rawEnd","delivery","isLate","loadLinks","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","id","fwd","rev","forEach","j","linkedTo","root","chain","cur","push","App","_s","columns","setColumns","queue","title","machine1","machine2","placeholders","setPlaceholders","links","setLinks","showModal","setShowModal","ph","setPh","company","inHand","dueType","syncStatus","setSyncStatus","fetchAll","data","get","real","o","col","machineId","toString","stitch_count","design","due_type","start_date","end_date","position","c","_a$position","_b$position","Infinity","merged","filter","p","err","console","error","catch","handleSync","setTimeout","submitPlaceholder","now","ps","removePlaceholder","editPlaceholder","toggleLink","colId","cols","below","l","onDragEnd","result","source","destination","draggableId","sc","droppableId","dc","Array","from","moved","splice","index","prev","sourceJobs","destJobs","before","after","newSrc","newDst","i","find","put","updated","concat","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","gap","isArray","segments","len","GAP","OUTLINE","provided","ref","innerRef","droppableProps","border","width","minHeight","margin","seg","si","marginBottom","outline","undefined","outlineOffset","jIdx","isPh","startsWith","isSoft","base","bg","bCol","dt0","prov","_job$design","_jobs","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","height","gridRow","gridColumn","whiteSpace","overflow","textOverflow","fontWeight","lineHeight","justifySelf","borderTopRightRadius","borderBottomLeftRadius","flexDirection","cursor","borderBottomRightRadius","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo)&&!isNaN(da)&&!isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start\n        ? clampToWorkHours(new Date(job.embroidery_start))\n        : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30*60000));\n    }\n    const qty   = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity/6)*6;\n    const runMs = (job.stitchCount/30000) * (qty/6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks')||'{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]       = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n    machine1: { id: 'machine1', title: 'Machine 1',   jobs: [] },\n    machine2: { id: 'machine2', title: 'Machine 2',   jobs: [] },\n  });\n\n  const [placeholders, setPlaceholders] = useState(() =>\n    JSON.parse(localStorage.getItem('placeholders') || '[]')\n  );\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => { saveLinks(links); }, [links]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE (queue always date-sorted; machines manual position)\n  const fetchAll = async () => {\n    try {\n      const { data } = await axios.get(`${API_ROOT}/orders`);\n      const real = { queue: [], machine1: [], machine2: [] };\n\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = (o.machineId === 'machine1' || o.machineId === 'machine2')\n          ? o.machineId : 'queue';\n        real[col].push({\n          ...o,\n          id:               o.id.toString(),\n          stitchCount:      o.stitch_count,\n          quantity:         o.quantity,\n          company:          o.company,\n          design:           o.design,\n          due_date:         o.due_date,\n          due_type:         o.due_type,\n          start:            o.start_date || '',\n          end:              o.end_date   || '',\n          delivery:         o.delivery   || '',\n          position:         o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo:         links[o.id] || null\n        });\n      });\n\n      // sort real machines by stored position\n      ['machine1','machine2'].forEach(c => {\n        real[c].sort((a,b) => (a.position ?? Infinity) - (b.position ?? Infinity));\n      });\n\n      // merge placeholders + real\n      const merged = {};\n      ['queue','machine1','machine2'].forEach(col => {\n        merged[col] = [\n          ...placeholders.filter(p => p.machineId === col),\n          ...real[col]\n        ];\n      });\n\n      // set state\n      setColumns({\n        queue: {\n          ...columns.queue,\n          jobs: sortQueue(merged.queue)\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(merged.machine1)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(merged.machine2)\n        }\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // on mount only\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n// === Section 6: Placeholder CRUD ===\nconst submitPlaceholder = () => {\n  const job = {\n    id:         ph.id || `ph-${Date.now()}`,\n    company:    ph.company,\n    quantity:   +ph.quantity || 1,\n    stitchCount:+ph.stitchCount||30000,\n    due_date:   ph.inHand,\n    due_type:   ph.dueType,\n    machineId:  'queue',\n    position:   null\n  };\n  if (ph.id) {\n    setPlaceholders(ps => ps.map(p => p.id===ph.id ? job : p));\n    setColumns(c => ({\n      ...c,\n      queue:    {...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)},\n      machine1: {...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j)},\n      machine2: {...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j)},\n    }));\n  } else {\n    setPlaceholders(ps => [job, ...ps]);\n    setColumns(c => ({\n      ...c,\n      queue: { ...c.queue, jobs: [job, ...c.queue.jobs] }\n    }));\n  }\n  setShowModal(false);\n  setPh({ id:null, company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date' });\n};\n\nconst removePlaceholder = id => {\n  setPlaceholders(ps => ps.filter(p=>p.id!==id));\n  setColumns(c => ({\n    ...c,\n    queue:    {...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)},\n    machine1: {...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id)},\n    machine2: {...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id)},\n  }));\n};\n\nconst editPlaceholder = job => {\n  setPh({\n    id: job.id,\n    company: job.company,\n    quantity: job.quantity,\n    stitchCount: job.stitchCount,\n    inHand: job.due_date,\n    dueType: job.due_type\n  });\n  setShowModal(true);\n};\n\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx+1];\n    if (!below) return cols;\n\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    job.linkedTo = job.linkedTo===below.id ? null : below.id;\n    jobs[idx] = job;\n\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: onDragEnd ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const sc = source.droppableId;\n  const dc = destination.droppableId;\n\n  // same-list reorder\n  if (sc === dc) {\n    const jobs = Array.from(columns[sc].jobs);\n    const [moved] = jobs.splice(source.index,1);\n    jobs.splice(destination.index,0,moved);\n    return setColumns(prev => ({\n      ...prev,\n      [sc]: { ...prev[sc], jobs }\n    }));\n  }\n\n  // cross-list\n  const sourceJobs = Array.from(columns[sc].jobs);\n  const destJobs   = Array.from(columns[dc].jobs);\n\n  // handle dropping between a linked pair\n  const before = destJobs[destination.index-1];\n  const after  = destJobs[destination.index];\n  if (before && after && before.linkedTo===after.id && draggableId!==before.id) {\n    setLinks(l => { const m={...l}; delete m[before.id]; return m; });\n    before.linkedTo = null;\n  }\n\n  // build chain\n  const chain = getChain(sourceJobs, draggableId);\n  const newSrc = sourceJobs.filter(j=>!chain.includes(j.id));\n  const newDst = Array.from(destJobs);\n  newDst.splice(destination.index,0,...sourceJobs.filter(j=>chain.includes(j.id)));\n\n  // if back to queue ⇒ unlink & clear timing\n  if (dc === 'queue') {\n    setLinks(l => { const m={...l}; chain.forEach(id=>delete m[id]); return m; });\n    newDst.forEach(job => {\n      if (chain.includes(job.id)) {\n        job.linkedTo = null;\n        job._rawStart = job._rawEnd = null;\n        job.start = job.end = job.delivery = '';\n        job.isLate = false;\n        job.embroidery_start = '';\n        job.position = null;\n      }\n    });\n  }\n\n  // update placeholders\n  setPlaceholders(ps =>\n    ps.map(p => chain.includes(p.id) ? { ...p, machineId: dc } : p)\n  );\n\n  // persist & update API\n  chain.forEach((id,i) => {\n    const job = newDst.find(j=>j.id===id);\n    job.machineId = dc==='queue'?null:dc;\n    job.position  = dc==='queue'?null:destination.index+i;\n    axios.put(`${API_ROOT}/orders/${id}`, {\n      machineId: job.machineId,\n      start_date: job.start||'',\n      end_date:   job.end  ||'',\n      delivery:   job.delivery||'',\n      position:   job.position,\n      embroidery_start: job.embroidery_start||''\n    }).catch(console.error);\n  });\n\n  // rebuild columns\n  const updated = {\n    queue:    { ...columns.queue,    jobs: sortQueue(newSrc.concat(dc==='queue'?newDst:[])) },\n    machine1: { ...columns.machine1, jobs: scheduleMachineJobs(dc==='machine1'?newDst:newSrc) },\n    machine2: { ...columns.machine2, jobs: scheduleMachineJobs(dc==='machine2'?newDst:newSrc) },\n  };\n\n  setColumns(updated);\n};\n\n// === Section 9: Render / Return ===\nreturn (\n  <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 13 }}>\n    {/* Add / Sync Buttons */}\n    <button\n      onClick={() => setShowModal(true)}\n      style={{ marginRight: 8, fontSize: 13 }}\n    >\n      + Add Placeholder\n    </button>\n    <button onClick={handleSync} style={{ fontSize: 13 }}>\n      Sync from Sheet{' '}\n      {syncStatus === 'updated' && (\n        <span style={{ color: 'green', fontSize: 13 }}>✓ Updated</span>\n      )}\n    </button>\n\n    {/* Modal */}\n    {showModal && (\n      <div\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'rgba(0,0,0,0.3)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000\n        }}\n      >\n        <div\n          style={{\n            background: '#fff',\n            padding: 20,\n            borderRadius: 4,\n            minWidth: 300\n          }}\n        >\n          <h3\n            style={{\n              marginTop: 0,\n              textAlign: 'center',\n              fontSize: 13\n            }}\n          >\n            Add/Edit Placeholder\n          </h3>\n          {/* …modal inputs here… */}\n          <div style={{ textAlign: 'right' }}>\n            <button\n              onClick={() => setShowModal(false)}\n              style={{ marginRight: 8, fontSize: 13 }}\n            >\n              Cancel\n            </button>\n            <button onClick={submitPlaceholder} style={{ fontSize: 13 }}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n\n    {/* Drag & Drop Columns */}\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n        {['queue', 'machine1', 'machine2'].map((colId) => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n          // build linked segments\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({ start: i, len });\n            i += len;\n          }\n\n          const GAP = 6,\n            OUTLINE = 6;\n\n          return (\n            <Droppable key={colId} droppableId={colId}>\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    position: 'relative',\n                    border: '1px solid #ccc',\n                    borderRadius: 4,\n                    width: colId === 'queue' ? 260 : 300,\n                    minHeight: 400,\n                    padding: 12,\n                    background: '#fafafa'\n                  }}\n                >\n                  <h4\n                    style={{\n                      textAlign: 'center',\n                      margin: '8px 0',\n                      fontSize: 13\n                    }}\n                  >\n                    {col.title}\n                  </h4>\n\n                  {segments.map((seg, si) => (\n                    <div\n                      key={si}\n                      style={{\n                        position: 'relative',\n                        marginBottom: GAP,\n                        zIndex: seg.len > 1 ? 3 : 1,\n                        outline:\n                          seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                        outlineOffset: seg.len > 1 ? '0px' : undefined,\n                        borderRadius: 4\n                      }}\n                    >\n                      {jobs\n                        .slice(seg.start, seg.start + seg.len)\n                        .map((job, jIdx) => {\n                          const idx = seg.start + jIdx;\n                          const isPh = job.id.startsWith('ph-');\n                          const isSoft = job.due_type === 'Soft Date';\n                          const base = isPh\n                            ? LIGHT_YELLOW\n                            : isSoft\n                            ? LIGHT_GREY\n                            : LIGHT_PURPLE;\n                          let bg = base,\n                            bCol = isPh\n                              ? DARK_YELLOW\n                              : isSoft\n                              ? DARK_GREY\n                              : DARK_PURPLE;\n                          if (job.isLate) {\n                            bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                            bCol = 'red';\n                          }\n                          const dt0 = (job.due_type || '')[0] || '';\n\n                          return (\n                            <Draggable\n                              key={job.id}\n                              draggableId={job.id}\n                              index={idx}\n                            >\n                              {(prov) => (\n                                <div\n                                  ref={prov.innerRef}\n                                  {...prov.draggableProps}\n                                  {...prov.dragHandleProps}\n                                  style={{\n                                    position: 'relative',\n                                    display: 'grid',\n                                    gridTemplateColumns: '1fr auto',\n                                    gridTemplateRows: 'auto auto auto auto',\n                                    columnGap: 6,\n                                    rowGap: 4,\n                                    padding: '6px 28px 6px 6px',\n                                    margin: `0 0 ${\n                                      jIdx < seg.len - 1 ? GAP : 0\n                                    }px 0`,\n                                    background: bg,\n                                    border: `2px solid ${bCol}`,\n                                    borderRadius: 4,\n                                    zIndex: 2,\n                                    ...prov.draggableProps.style\n                                  }}\n                                >\n                                  {jIdx === 0 && seg.len > 1 && (\n                                    <div\n                                      style={{\n                                        position: 'absolute',\n                                        top: 0,\n                                        right: 0,\n                                        width: 4,\n                                        height: '100%',\n                                        background: '#0288d1',\n                                        zIndex: 4\n                                      }}\n                                    />\n                                  )}\n\n                                  {/* Row1 Col1: ID + Company */}\n                                  <span\n                                    style={{\n                                      gridRow: 1,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                      fontWeight: 'bold'\n                                    }}\n                                  >\n                                    <span\n                                      style={{\n                                        display: 'inline-block',\n                                        width: 20,\n                                        height: 20,\n                                        borderRadius: '50%',\n                                        background: '#000',\n                                        color: base,\n                                        lineHeight: '20px',\n                                        textAlign: 'center',\n                                        fontSize: isPh ? 13 : 11,\n                                        fontWeight: 'bold',\n                                        marginRight: 4\n                                      }}\n                                    >\n                                      {isPh ? '*' : job.id}\n                                    </span>\n                                    {job.company}\n                                  </span>\n\n                                  {/* Row1 Col2: Quantity */}\n                                  <span\n                                    style={{\n                                      gridRow: 1,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      display: 'inline-block',\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      fontSize: 15,\n                                      fontWeight: 'bold',\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis'\n                                    }}\n                                  >\n                                    {job.quantity}\n                                  </span>\n\n                                  {/* Row2 Col1: Design */}\n                                  <span\n                                    style={{\n                                      gridRow: 2,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13\n                                    }}\n                                  >\n                                    {job.design?.slice(0, 22)}\n                                  </span>\n\n                                  {/* Row2 Col2: Start */}\n                                  {job.start && (\n                                    <span\n                                      style={{\n                                        gridRow: 2,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        display: 'inline-block',\n                                        background: BUBBLE_START,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13\n                                      }}\n                                    >\n                                      {job.start}\n                                    </span>\n                                  )}\n\n                                  {/* Row3 Col1: EED */}\n                                  <span\n                                    style={{\n                                      gridRow: 3,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: BUBBLE_END,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13\n                                    }}\n                                  >\n                                    {`EED: ${fmtMMDD(\n                                      subWorkDays(parseDueDate(job.due_date), 6)\n                                    )}`}\n                                  </span>\n\n                                  {/* Row3 Col2: End */}\n                                  {job.end && (\n                                    <span\n                                      style={{\n                                        gridRow: 3,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        display: 'inline-block',\n                                        background: BUBBLE_END,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13\n                                      }}\n                                    >\n                                      {job.end}\n                                    </span>\n                                  )}\n\n                                  {/* Row4 Col1: IHD */}\n                                  <span\n                                    style={{\n                                      gridRow: 4,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: BUBBLE_DELIV,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13\n                                    }}\n                                  >\n                                    {`IHD: ${fmtMMDD(job.due_date)}`}\n                                  </span>\n\n                                  {/* Row4 Col2: Delivery */}\n                                  {job.delivery && (\n                                    <span\n                                      style={{\n                                        gridRow: 4,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        display: 'inline-block',\n                                        background: BUBBLE_DELIV,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13\n                                      }}\n                                    >\n                                      {job.delivery}\n                                    </span>\n                                  )}\n\n                                  {/* Top-right tab: Due Type initial */}\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      right: 0,\n                                      width: 28,\n                                      height: 28,\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      background: base,\n                                      borderTopRightRadius: 4,\n                                      borderBottomLeftRadius: 4,\n                                      zIndex: 4,\n                                      fontSize: 11,\n                                      fontWeight: 'bold'\n                                    }}\n                                  >\n                                    {dt0}\n                                  </div>\n\n                                  {/* 🔗 / ❌ Toggle */}\n                                  {idx < jobs.length - 1 && (\n                                    <div\n                                      onClick={() => toggleLink(colId, idx)}\n                                      style={{\n                                        position: 'absolute',\n                                        top: 28,\n                                        right: 0,\n                                        width: 28,\n                                        height: `calc(100% - 28px)`,\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        cursor: 'pointer',\n                                        background: base,\n                                        borderBottomRightRadius: 4,\n                                        zIndex: 4\n                                      }}\n                                    >\n                                      {job.linkedTo === jobs[idx + 1]?.id\n                                        ? '❌'\n                                        : '🔗'}\n                                    </div>\n                                  )}\n\n                                  {/* Placeholder edit/delete */}\n                                  {job.id.startsWith('ph-') && (\n                                    <div\n                                      style={{\n                                        position: 'absolute',\n                                        top: 0,\n                                        right: 0,\n                                        width: 28,\n                                        height: '100%',\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        alignItems: 'center',\n                                        justifyContent: 'start',\n                                        background: base,\n                                        borderTopRightRadius: 4,\n                                        borderBottomRightRadius: 4,\n                                        zIndex: 4\n                                      }}\n                                    >\n                                      <span\n                                        onClick={() => editPlaceholder(job)}\n                                        style={{\n                                          cursor: 'pointer',\n                                          fontSize: 12,\n                                          margin: 4\n                                        }}\n                                      >\n                                        ✎\n                                      </span>\n                                      <span\n                                        onClick={() => removePlaceholder(job.id)}\n                                        style={{\n                                          cursor: 'pointer',\n                                          fontSize: 12,\n                                          margin: 4\n                                        }}\n                                      >\n                                        ✖\n                                      </span>\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                            </Draggable>\n                          );\n                        })}\n                    </div>\n                  ))}\n\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n        })}\n      </div>\n    </DragDropContext>\n  </div>\n);\n\n// ← end of App component\n}\n"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAS,2BAA2B;AAClD,MAAMC,aAAa,GAAI,CAAC;EAAGC,cAAc,GAAG,EAAE;AAC9C,MAAMC,WAAW,GAAM,EAAE;EAAEC,YAAY,GAAK,EAAE;AAC9C,MAAMC,QAAQ,GAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,MAAMC,QAAQ,GAAS,CAAC,YAAY,EAAC,YAAY,CAAC;;AAElD;AACA,MAAMC,YAAY,GAAI,SAAS;EAAEC,WAAW,GAAI,SAAS;AACzD,MAAMC,UAAU,GAAM,SAAS;EAAEC,SAAS,GAAM,SAAS;AACzD,MAAMC,YAAY,GAAI,SAAS;EAAEC,WAAW,GAAI,SAAS;AACzD,MAAMC,YAAY,GAAI,SAAS;AAC/B,MAAMC,UAAU,GAAM,SAAS;AAC/B,MAAMC,YAAY,GAAI,SAAS;;AAE/B;AACA;AACA;;AAEA;AACA,SAASC,SAASA,CAACC,EAAE,EAAE;EACrB,OAAOA,EAAE,YAAYC,IAAI,IAClB,CAACC,KAAK,CAACF,EAAE,CAAC,IACVX,QAAQ,CAACc,QAAQ,CAACH,EAAE,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;AACxD;AACA,SAASC,SAASA,CAACN,EAAE,EAAE;EACrB,OAAOA,EAAE,YAAYC,IAAI,IAClB,CAACC,KAAK,CAACF,EAAE,CAAC,IACV,CAACZ,QAAQ,CAACe,QAAQ,CAACH,EAAE,CAACO,MAAM,CAAC,CAAC,CAAC,IAC/B,CAACR,SAAS,CAACC,EAAE,CAAC;AACvB;AACA,SAASQ,gBAAgBA,CAACR,EAAE,EAAE;EAC5B,IAAIS,CAAC,GAAG,IAAIR,IAAI,CAACD,EAAE,CAAC;EACpB,OACE,CAACM,SAAS,CAACG,CAAC,CAAC,IACbA,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG1B,aAAa,IAC3ByB,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAK1B,aAAa,IAAIyB,CAAC,CAACE,UAAU,CAAC,CAAC,GAAG1B,cAAe,EACnE;IACAwB,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1BJ,CAAC,CAACK,QAAQ,CAAC9B,aAAa,EAAEC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;EACjD;EACA,IACEwB,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAGxB,WAAW,IACzBuB,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKxB,WAAW,IAAIuB,CAAC,CAACE,UAAU,CAAC,CAAC,IAAIxB,YAAa,EAChE;IACAsB,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1BJ,CAAC,CAACK,QAAQ,CAAC9B,aAAa,EAAEC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,OAAOuB,gBAAgB,CAACC,CAAC,CAAC;EAC5B;EACA,OAAOA,CAAC;AACV;AACA,SAASM,WAAWA,CAACC,KAAK,EAAEC,EAAE,EAAE;EAC9B,IAAIC,SAAS,GAAGD,EAAE;EAClB,IAAIE,OAAO,GAAGX,gBAAgB,CAACQ,KAAK,CAAC;EACrC,OAAOE,SAAS,GAAG,CAAC,EAAE;IACpB,MAAME,QAAQ,GAAG,IAAInB,IAAI,CAACkB,OAAO,CAAC;IAClCC,QAAQ,CAACN,QAAQ,CAAC5B,WAAW,EAAEC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,MAAMkC,IAAI,GAAGD,QAAQ,CAACE,OAAO,CAAC,CAAC,GAAGH,OAAO,CAACG,OAAO,CAAC,CAAC;IACnD,IAAID,IAAI,IAAI,CAAC,EAAE;MACbF,OAAO,GAAGX,gBAAgB,CAAC,IAAIP,IAAI,CAACkB,OAAO,CAACP,OAAO,CAACO,OAAO,CAACN,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC,MAAM,IAAIK,SAAS,IAAIG,IAAI,EAAE;MAC5BF,OAAO,GAAG,IAAIlB,IAAI,CAACkB,OAAO,CAACG,OAAO,CAAC,CAAC,GAAGJ,SAAS,CAAC;MACjDA,SAAS,GAAG,CAAC;IACf,CAAC,MAAM;MACLA,SAAS,IAAIG,IAAI;MACjBF,OAAO,GAAG,IAAIlB,IAAI,CAACmB,QAAQ,CAAC;IAC9B;EACF;EACA,OAAOD,OAAO;AAChB;AACA,SAASI,KAAKA,CAACvB,EAAE,EAAE;EACjB,MAAMwB,GAAG,GAAGC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;EAC1C,MAAMC,KAAK,GAAGJ,GAAG,CAACxB,EAAE,CAAC6B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACpC,MAAMC,GAAG,GAAKN,GAAG,CAACxB,EAAE,CAACa,OAAO,CAAC,CAAC,CAAC;EAC/B,IAAIkB,CAAC,GAAG/B,EAAE,CAACU,QAAQ,CAAC,CAAC;IAAEsB,CAAC,GAAGR,GAAG,CAACxB,EAAE,CAACW,UAAU,CAAC,CAAC,CAAC;IAAEsB,EAAE,GAAGF,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;EAC3EA,CAAC,GAAGA,CAAC,GAAG,EAAE,IAAI,EAAE;EAChB,OAAO,GAAGH,KAAK,IAAIE,GAAG,IAAIN,GAAG,CAACO,CAAC,CAAC,IAAIC,CAAC,IAAIC,EAAE,EAAE;AAC/C;AACA,SAASC,YAAYA,CAACzB,CAAC,EAAE;EACvB,IAAI,CAACA,CAAC,EAAE,OAAO,IAAI;EACnB,IAAI,qBAAqB,CAAC0B,IAAI,CAAC1B,CAAC,CAAC,EAAE,OAAO,IAAIR,IAAI,CAACQ,CAAC,CAAC;EACrD,MAAM2B,KAAK,GAAG3B,CAAC,CAAC4B,KAAK,CAAC,GAAG,CAAC;EAC1B,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;IACrB,MAAMC,EAAE,GAAG,CAACH,KAAK,CAAC,CAAC,CAAC;MAAEI,EAAE,GAAG,CAACJ,KAAK,CAAC,CAAC,CAAC;MAC9BK,EAAE,GAAGL,KAAK,CAACE,MAAM,KAAK,CAAC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,GAAG,IAAInC,IAAI,CAAC,CAAC,CAACyC,WAAW,CAAC,CAAC;IACpE,IAAI,CAACxC,KAAK,CAACqC,EAAE,CAAC,IAAE,CAACrC,KAAK,CAACsC,EAAE,CAAC,IAAE,CAACtC,KAAK,CAACuC,EAAE,CAAC,EAAE,OAAO,IAAIxC,IAAI,CAACwC,EAAE,EAACF,EAAE,GAAC,CAAC,EAACC,EAAE,CAAC;EACrE;EACA,MAAMxC,EAAE,GAAG,IAAIC,IAAI,CAACQ,CAAC,CAAC;EACtB,OAAOP,KAAK,CAACF,EAAE,CAAC,GAAG,IAAI,GAAGA,EAAE;AAC9B;AACA,SAAS2C,WAAWA,CAAC3B,KAAK,EAAE4B,IAAI,EAAE;EAChC,IAAInC,CAAC,GAAG,IAAIR,IAAI,CAACe,KAAK,CAAC;IAAE6B,KAAK,GAAG,CAAC;EAClC,OAAOA,KAAK,GAAGD,IAAI,EAAE;IACnBnC,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,IAAIP,SAAS,CAACG,CAAC,CAAC,EAAEoC,KAAK,EAAE;EAC3B;EACA,OAAOpC,CAAC;AACV;AACA,SAASqC,WAAWA,CAAC9B,KAAK,EAAE4B,IAAI,EAAE;EAChC,IAAInC,CAAC,GAAG,IAAIR,IAAI,CAACe,KAAK,CAAC;IAAE+B,OAAO,GAAG,CAAC;EACpC,OAAOA,OAAO,GAAGH,IAAI,EAAE;IACrBnC,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,IAAIP,SAAS,CAACG,CAAC,CAAC,EAAEsC,OAAO,EAAE;EAC7B;EACA,OAAOtC,CAAC;AACV;AACA,SAASuC,OAAOA,CAACvC,CAAC,EAAE;EAClB,MAAMT,EAAE,GAAG,IAAIC,IAAI,CAACQ,CAAC,CAAC;EACtB,MAAM8B,EAAE,GAAGb,MAAM,CAAC1B,EAAE,CAAC6B,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;EAClD,MAAMa,EAAE,GAAGd,MAAM,CAAC1B,EAAE,CAACa,OAAO,CAAC,CAAC,CAAC,CAACc,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;EAC/C,OAAO,GAAGY,EAAE,IAAIC,EAAE,EAAE;AACtB;AACA,SAASS,SAASA,CAACC,GAAG,EAAE;EACtB,OAAO,CAAC,GAAGA,GAAG,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;IAC5B,MAAMb,EAAE,GAAGN,YAAY,CAACkB,CAAC,CAACE,QAAQ,CAAC;MAAEC,EAAE,GAAGrB,YAAY,CAACmB,CAAC,CAACC,QAAQ,CAAC;IAClE,IAAId,EAAE,IAAIe,EAAE,EAAE,OAAOf,EAAE,GAAGe,EAAE;IAC5B,IAAIf,EAAE,EAAE,OAAO,CAAC,CAAC;IACjB,IAAIe,EAAE,EAAE,OAAO,CAAC;IAChB,OAAO,CAAC;EACV,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,SAASC,mBAAmBA,CAACC,IAAI,EAAE;EACjC,IAAIC,OAAO,GAAG,IAAI;EAClB,OAAOD,IAAI,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC5B,IAAI7C,KAAK;IACT,IAAI6C,GAAG,KAAK,CAAC,EAAE;MACb7C,KAAK,GAAG4C,GAAG,CAACE,gBAAgB,GACxBtD,gBAAgB,CAAC,IAAIP,IAAI,CAAC2D,GAAG,CAACE,gBAAgB,CAAC,CAAC,GAChDtD,gBAAgB,CAAC,IAAIP,IAAI,CAAC,CAAC,CAAC;MAChC,IAAI,CAAC2D,GAAG,CAACE,gBAAgB,EAAEF,GAAG,CAACE,gBAAgB,GAAG,IAAI7D,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;IAC5E,CAAC,MAAM;MACLY,KAAK,GAAGR,gBAAgB,CAAC,IAAIP,IAAI,CAACyD,OAAO,CAACpC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAC,KAAK,CAAC,CAAC;IAClE;IACA,MAAMyC,GAAG,GAAKH,GAAG,CAACI,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAGJ,GAAG,CAACI,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACN,GAAG,CAACI,QAAQ,GAAC,CAAC,CAAC,GAAC,CAAC;IACjF,MAAMG,KAAK,GAAIP,GAAG,CAACQ,WAAW,GAAC,KAAK,IAAKL,GAAG,GAAC,CAAC,CAAC,GAAG,OAAO;IACzD,MAAMM,GAAG,GAAKtD,WAAW,CAACC,KAAK,EAAEmD,KAAK,CAAC;IAEvC,MAAMG,MAAM,GAAGxB,WAAW,CAACZ,YAAY,CAAC0B,GAAG,CAACN,QAAQ,CAAC,EAAE,CAAC,CAAC;IACzD,MAAMiB,MAAM,GAAG,IAAItE,IAAI,CAACqE,MAAM,CAAC;IAC/BC,MAAM,CAACzD,QAAQ,CAAC5B,WAAW,EAAEC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;IAEhDyE,GAAG,CAACY,SAAS,GAAGxD,KAAK;IACrB4C,GAAG,CAACa,OAAO,GAAKJ,GAAG;IACnBT,GAAG,CAAC5C,KAAK,GAAOO,KAAK,CAACP,KAAK,CAAC;IAC5B4C,GAAG,CAACS,GAAG,GAAS9C,KAAK,CAAC8C,GAAG,CAAC;IAC1BT,GAAG,CAACc,QAAQ,GAAI1B,OAAO,CAACL,WAAW,CAAC0B,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5CT,GAAG,CAACe,MAAM,GAAMN,GAAG,GAAGE,MAAM;IAE5Bb,OAAO,GAAGW,GAAG;IACb,OAAOT,GAAG;EACZ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,SAASgB,SAASA,CAAA,EAAG;EACnB,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAE,IAAI,CAAC;EAC3D,CAAC,CAAC,MAAM;IACN,OAAO,CAAC,CAAC;EACX;AACF;AACA,SAASC,SAASA,CAACtB,GAAG,EAAE;EACtBoB,YAAY,CAACG,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACM,SAAS,CAACxB,GAAG,CAAC,CAAC;AACvD;AACA,SAASyB,QAAQA,CAAC3B,IAAI,EAAE4B,EAAE,EAAE;EAC1B,MAAMC,GAAG,GAAG,CAAC,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC;EACxB9B,IAAI,CAAC+B,OAAO,CAACC,CAAC,IAAI;IAChB,IAAIA,CAAC,CAACC,QAAQ,EAAE;MACdJ,GAAG,CAACG,CAAC,CAACJ,EAAE,CAAC,GAASI,CAAC,CAACC,QAAQ;MAC5BH,GAAG,CAACE,CAAC,CAACC,QAAQ,CAAC,GAAGD,CAAC,CAACJ,EAAE;IACxB;EACF,CAAC,CAAC;EACF,IAAIM,IAAI,GAAGN,EAAE;EACb,OAAOE,GAAG,CAACI,IAAI,CAAC,EAAEA,IAAI,GAAGJ,GAAG,CAACI,IAAI,CAAC;EAClC,MAAMC,KAAK,GAAG,EAAE;EAChB,IAAIC,GAAG,GAAGF,IAAI;EACd,OAAOE,GAAG,EAAE;IACVD,KAAK,CAACE,IAAI,CAACD,GAAG,CAAC;IACfA,GAAG,GAAGP,GAAG,CAACO,GAAG,CAAC;EAChB;EACA,OAAOD,KAAK;AACd;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG3H,QAAQ,CAAC;IACrC4H,KAAK,EAAK;MAAEd,EAAE,EAAE,OAAO;MAAKe,KAAK,EAAE,aAAa;MAAE3C,IAAI,EAAE;IAAG,CAAC;IAC5D4C,QAAQ,EAAE;MAAEhB,EAAE,EAAE,UAAU;MAAEe,KAAK,EAAE,WAAW;MAAI3C,IAAI,EAAE;IAAG,CAAC;IAC5D6C,QAAQ,EAAE;MAAEjB,EAAE,EAAE,UAAU;MAAEe,KAAK,EAAE,WAAW;MAAI3C,IAAI,EAAE;IAAG;EAC7D,CAAC,CAAC;EAEF,MAAM,CAAC8C,YAAY,EAAEC,eAAe,CAAC,GAAGjI,QAAQ,CAAC,MAC/CsG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CACzD,CAAC;EACD1G,SAAS,CAAC,MAAM;IACdyG,YAAY,CAACG,OAAO,CAAC,cAAc,EAAEL,IAAI,CAACM,SAAS,CAACoB,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGnI,QAAQ,CAACqG,SAAS,CAAC;EAC7CtG,SAAS,CAAC,MAAM;IAAE2G,SAAS,CAACwB,KAAK,CAAC;EAAE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAE/C,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGrI,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsI,EAAE,EAAEC,KAAK,CAAC,GAAGvI,QAAQ,CAAC;IAC3B8G,EAAE,EAAE,IAAI;IACR0B,OAAO,EAAE,EAAE;IACX/C,QAAQ,EAAE,EAAE;IACZI,WAAW,EAAE,EAAE;IACf4C,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG5I,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM6I,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMzI,KAAK,CAAC0I,GAAG,CAAC,GAAGvI,QAAQ,SAAS,CAAC;MACtD,MAAMwI,IAAI,GAAG;QAAEpB,KAAK,EAAE,EAAE;QAAEE,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;MAEtDe,IAAI,CAAC7B,OAAO,CAACgC,CAAC,IAAI;QAChB,IAAI,CAACA,CAAC,CAACpB,KAAK,EAAE;QACd,MAAMqB,GAAG,GAAID,CAAC,CAACE,SAAS,KAAK,UAAU,IAAIF,CAAC,CAACE,SAAS,KAAK,UAAU,GACjEF,CAAC,CAACE,SAAS,GAAG,OAAO;QACzBH,IAAI,CAACE,GAAG,CAAC,CAAC3B,IAAI,CAAC;UACb,GAAG0B,CAAC;UACJnC,EAAE,EAAgBmC,CAAC,CAACnC,EAAE,CAACsC,QAAQ,CAAC,CAAC;UACjCvD,WAAW,EAAOoD,CAAC,CAACI,YAAY;UAChC5D,QAAQ,EAAUwD,CAAC,CAACxD,QAAQ;UAC5B+C,OAAO,EAAWS,CAAC,CAACT,OAAO;UAC3Bc,MAAM,EAAYL,CAAC,CAACK,MAAM;UAC1BvE,QAAQ,EAAUkE,CAAC,CAAClE,QAAQ;UAC5BwE,QAAQ,EAAUN,CAAC,CAACM,QAAQ;UAC5B9G,KAAK,EAAawG,CAAC,CAACO,UAAU,IAAI,EAAE;UACpC1D,GAAG,EAAemD,CAAC,CAACQ,QAAQ,IAAM,EAAE;UACpCtD,QAAQ,EAAU8C,CAAC,CAAC9C,QAAQ,IAAM,EAAE;UACpCuD,QAAQ,EAAUT,CAAC,CAACS,QAAQ,IAAI,IAAI,GAAGT,CAAC,CAACS,QAAQ,GAAG,IAAI;UACxDnE,gBAAgB,EAAE0D,CAAC,CAAC1D,gBAAgB,IAAI,EAAE;UAC1C4B,QAAQ,EAAUe,KAAK,CAACe,CAAC,CAACnC,EAAE,CAAC,IAAI;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,CAAC,UAAU,EAAC,UAAU,CAAC,CAACG,OAAO,CAAC0C,CAAC,IAAI;QACnCX,IAAI,CAACW,CAAC,CAAC,CAAC/E,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC;UAAA,IAAA8E,WAAA,EAAAC,WAAA;UAAA,OAAK,EAAAD,WAAA,GAAC/E,CAAC,CAAC6E,QAAQ,cAAAE,WAAA,cAAAA,WAAA,GAAIE,QAAQ,MAAAD,WAAA,GAAK/E,CAAC,CAAC4E,QAAQ,cAAAG,WAAA,cAAAA,WAAA,GAAIC,QAAQ,CAAC;QAAA,EAAC;MAC5E,CAAC,CAAC;;MAEF;MACA,MAAMC,MAAM,GAAG,CAAC,CAAC;MACjB,CAAC,OAAO,EAAC,UAAU,EAAC,UAAU,CAAC,CAAC9C,OAAO,CAACiC,GAAG,IAAI;QAC7Ca,MAAM,CAACb,GAAG,CAAC,GAAG,CACZ,GAAGlB,YAAY,CAACgC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACd,SAAS,KAAKD,GAAG,CAAC,EAChD,GAAGF,IAAI,CAACE,GAAG,CAAC,CACb;MACH,CAAC,CAAC;;MAEF;MACAvB,UAAU,CAAC;QACTC,KAAK,EAAE;UACL,GAAGF,OAAO,CAACE,KAAK;UAChB1C,IAAI,EAAER,SAAS,CAACqF,MAAM,CAACnC,KAAK;QAC9B,CAAC;QACDE,QAAQ,EAAE;UACR,GAAGJ,OAAO,CAACI,QAAQ;UACnB5C,IAAI,EAAED,mBAAmB,CAAC8E,MAAM,CAACjC,QAAQ;QAC3C,CAAC;QACDC,QAAQ,EAAE;UACR,GAAGL,OAAO,CAACK,QAAQ;UACnB7C,IAAI,EAAED,mBAAmB,CAAC8E,MAAM,CAAChC,QAAQ;QAC3C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOmC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IACtC;EACF,CAAC;;EAED;EACAnK,SAAS,CAAC,MAAM;IACd8I,QAAQ,CAAC,CAAC,CAACwB,KAAK,CAACF,OAAO,CAACC,KAAK,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBzB,QAAQ,CAAC,CAAC,CAACwB,KAAK,CAACF,OAAO,CAACC,KAAK,CAAC;IAC/BxB,aAAa,CAAC,SAAS,CAAC;IACxB2B,UAAU,CAAC,MAAM3B,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAC3C,CAAC;;EAEH;EACA,MAAM4B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMnF,GAAG,GAAG;MACVyB,EAAE,EAAUwB,EAAE,CAACxB,EAAE,IAAI,MAAMpF,IAAI,CAAC+I,GAAG,CAAC,CAAC,EAAE;MACvCjC,OAAO,EAAKF,EAAE,CAACE,OAAO;MACtB/C,QAAQ,EAAI,CAAC6C,EAAE,CAAC7C,QAAQ,IAAI,CAAC;MAC7BI,WAAW,EAAC,CAACyC,EAAE,CAACzC,WAAW,IAAE,KAAK;MAClCd,QAAQ,EAAIuD,EAAE,CAACG,MAAM;MACrBc,QAAQ,EAAIjB,EAAE,CAACI,OAAO;MACtBS,SAAS,EAAG,OAAO;MACnBO,QAAQ,EAAI;IACd,CAAC;IACD,IAAIpB,EAAE,CAACxB,EAAE,EAAE;MACTmB,eAAe,CAACyC,EAAE,IAAIA,EAAE,CAACtF,GAAG,CAAC6E,CAAC,IAAIA,CAAC,CAACnD,EAAE,KAAGwB,EAAE,CAACxB,EAAE,GAAGzB,GAAG,GAAG4E,CAAC,CAAC,CAAC;MAC1DtC,UAAU,CAACgC,CAAC,KAAK;QACf,GAAGA,CAAC;QACJ/B,KAAK,EAAK;UAAC,GAAG+B,CAAC,CAAC/B,KAAK;UAAK1C,IAAI,EAAEyE,CAAC,CAAC/B,KAAK,CAAC1C,IAAI,CAACE,GAAG,CAAC8B,CAAC,IAAEA,CAAC,CAACJ,EAAE,KAAGwB,EAAE,CAACxB,EAAE,GAACzB,GAAG,GAAC6B,CAAC;QAAC,CAAC;QACxEY,QAAQ,EAAE;UAAC,GAAG6B,CAAC,CAAC7B,QAAQ;UAAE5C,IAAI,EAAEyE,CAAC,CAAC7B,QAAQ,CAAC5C,IAAI,CAACE,GAAG,CAAC8B,CAAC,IAAEA,CAAC,CAACJ,EAAE,KAAGwB,EAAE,CAACxB,EAAE,GAACzB,GAAG,GAAC6B,CAAC;QAAC,CAAC;QAC3Ea,QAAQ,EAAE;UAAC,GAAG4B,CAAC,CAAC5B,QAAQ;UAAE7C,IAAI,EAAEyE,CAAC,CAAC5B,QAAQ,CAAC7C,IAAI,CAACE,GAAG,CAAC8B,CAAC,IAAEA,CAAC,CAACJ,EAAE,KAAGwB,EAAE,CAACxB,EAAE,GAACzB,GAAG,GAAC6B,CAAC;QAAC;MAC5E,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACLe,eAAe,CAACyC,EAAE,IAAI,CAACrF,GAAG,EAAE,GAAGqF,EAAE,CAAC,CAAC;MACnC/C,UAAU,CAACgC,CAAC,KAAK;QACf,GAAGA,CAAC;QACJ/B,KAAK,EAAE;UAAE,GAAG+B,CAAC,CAAC/B,KAAK;UAAE1C,IAAI,EAAE,CAACG,GAAG,EAAE,GAAGsE,CAAC,CAAC/B,KAAK,CAAC1C,IAAI;QAAE;MACpD,CAAC,CAAC,CAAC;IACL;IACAmD,YAAY,CAAC,KAAK,CAAC;IACnBE,KAAK,CAAC;MAAEzB,EAAE,EAAC,IAAI;MAAE0B,OAAO,EAAC,EAAE;MAAE/C,QAAQ,EAAC,EAAE;MAAEI,WAAW,EAAC,EAAE;MAAE4C,MAAM,EAAC,EAAE;MAAEC,OAAO,EAAC;IAAY,CAAC,CAAC;EAC7F,CAAC;EAED,MAAMiC,iBAAiB,GAAG7D,EAAE,IAAI;IAC9BmB,eAAe,CAACyC,EAAE,IAAIA,EAAE,CAACV,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACnD,EAAE,KAAGA,EAAE,CAAC,CAAC;IAC9Ca,UAAU,CAACgC,CAAC,KAAK;MACf,GAAGA,CAAC;MACJ/B,KAAK,EAAK;QAAC,GAAG+B,CAAC,CAAC/B,KAAK;QAAK1C,IAAI,EAAEyE,CAAC,CAAC/B,KAAK,CAAC1C,IAAI,CAAC8E,MAAM,CAAC9C,CAAC,IAAEA,CAAC,CAACJ,EAAE,KAAGA,EAAE;MAAC,CAAC;MAClEgB,QAAQ,EAAE;QAAC,GAAG6B,CAAC,CAAC7B,QAAQ;QAAE5C,IAAI,EAAEyE,CAAC,CAAC7B,QAAQ,CAAC5C,IAAI,CAAC8E,MAAM,CAAC9C,CAAC,IAAEA,CAAC,CAACJ,EAAE,KAAGA,EAAE;MAAC,CAAC;MACrEiB,QAAQ,EAAE;QAAC,GAAG4B,CAAC,CAAC5B,QAAQ;QAAE7C,IAAI,EAAEyE,CAAC,CAAC5B,QAAQ,CAAC7C,IAAI,CAAC8E,MAAM,CAAC9C,CAAC,IAAEA,CAAC,CAACJ,EAAE,KAAGA,EAAE;MAAC;IACtE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM8D,eAAe,GAAGvF,GAAG,IAAI;IAC7BkD,KAAK,CAAC;MACJzB,EAAE,EAAEzB,GAAG,CAACyB,EAAE;MACV0B,OAAO,EAAEnD,GAAG,CAACmD,OAAO;MACpB/C,QAAQ,EAAEJ,GAAG,CAACI,QAAQ;MACtBI,WAAW,EAAER,GAAG,CAACQ,WAAW;MAC5B4C,MAAM,EAAEpD,GAAG,CAACN,QAAQ;MACpB2D,OAAO,EAAErD,GAAG,CAACkE;IACf,CAAC,CAAC;IACFlB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAGD;EACA,MAAMwC,UAAU,GAAGA,CAACC,KAAK,EAAExF,GAAG,KAAK;IACjCqC,UAAU,CAACoD,IAAI,IAAI;MACjB,MAAM7F,IAAI,GAAG,CAAC,GAAG6F,IAAI,CAACD,KAAK,CAAC,CAAC5F,IAAI,CAAC;MAClC,MAAMG,GAAG,GAAIH,IAAI,CAACI,GAAG,CAAC;MACtB,MAAM0F,KAAK,GAAG9F,IAAI,CAACI,GAAG,GAAC,CAAC,CAAC;MACzB,IAAI,CAAC0F,KAAK,EAAE,OAAOD,IAAI;MAEvB5C,QAAQ,CAAC8C,CAAC,IAAI;QACZ,MAAMxH,CAAC,GAAG;UAAE,GAAGwH;QAAE,CAAC;QAClB,IAAIxH,CAAC,CAAC4B,GAAG,CAACyB,EAAE,CAAC,KAAKkE,KAAK,CAAClE,EAAE,EAAE,OAAOrD,CAAC,CAAC4B,GAAG,CAACyB,EAAE,CAAC,CAAC,KACxCrD,CAAC,CAAC4B,GAAG,CAACyB,EAAE,CAAC,GAAGkE,KAAK,CAAClE,EAAE;QACzB,OAAOrD,CAAC;MACV,CAAC,CAAC;MAEF4B,GAAG,CAAC8B,QAAQ,GAAG9B,GAAG,CAAC8B,QAAQ,KAAG6D,KAAK,CAAClE,EAAE,GAAG,IAAI,GAAGkE,KAAK,CAAClE,EAAE;MACxD5B,IAAI,CAACI,GAAG,CAAC,GAAGD,GAAG;MAEf,OAAO;QACL,GAAG0F,IAAI;QACP,CAACD,KAAK,GAAG;UAAE,GAAGC,IAAI,CAACD,KAAK,CAAC;UAAE5F;QAAK;MAClC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMgG,SAAS,GAAGC,MAAM,IAAI;IAC1B,MAAM;MAAEC,MAAM;MAAEC,WAAW;MAAEC;IAAY,CAAC,GAAGH,MAAM;IACnD,IAAI,CAACE,WAAW,EAAE;IAElB,MAAME,EAAE,GAAGH,MAAM,CAACI,WAAW;IAC7B,MAAMC,EAAE,GAAGJ,WAAW,CAACG,WAAW;;IAElC;IACA,IAAID,EAAE,KAAKE,EAAE,EAAE;MACb,MAAMvG,IAAI,GAAGwG,KAAK,CAACC,IAAI,CAACjE,OAAO,CAAC6D,EAAE,CAAC,CAACrG,IAAI,CAAC;MACzC,MAAM,CAAC0G,KAAK,CAAC,GAAG1G,IAAI,CAAC2G,MAAM,CAACT,MAAM,CAACU,KAAK,EAAC,CAAC,CAAC;MAC3C5G,IAAI,CAAC2G,MAAM,CAACR,WAAW,CAACS,KAAK,EAAC,CAAC,EAACF,KAAK,CAAC;MACtC,OAAOjE,UAAU,CAACoE,IAAI,KAAK;QACzB,GAAGA,IAAI;QACP,CAACR,EAAE,GAAG;UAAE,GAAGQ,IAAI,CAACR,EAAE,CAAC;UAAErG;QAAK;MAC5B,CAAC,CAAC,CAAC;IACL;;IAEA;IACA,MAAM8G,UAAU,GAAGN,KAAK,CAACC,IAAI,CAACjE,OAAO,CAAC6D,EAAE,CAAC,CAACrG,IAAI,CAAC;IAC/C,MAAM+G,QAAQ,GAAKP,KAAK,CAACC,IAAI,CAACjE,OAAO,CAAC+D,EAAE,CAAC,CAACvG,IAAI,CAAC;;IAE/C;IACA,MAAMgH,MAAM,GAAGD,QAAQ,CAACZ,WAAW,CAACS,KAAK,GAAC,CAAC,CAAC;IAC5C,MAAMK,KAAK,GAAIF,QAAQ,CAACZ,WAAW,CAACS,KAAK,CAAC;IAC1C,IAAII,MAAM,IAAIC,KAAK,IAAID,MAAM,CAAC/E,QAAQ,KAAGgF,KAAK,CAACrF,EAAE,IAAIwE,WAAW,KAAGY,MAAM,CAACpF,EAAE,EAAE;MAC5EqB,QAAQ,CAAC8C,CAAC,IAAI;QAAE,MAAMxH,CAAC,GAAC;UAAC,GAAGwH;QAAC,CAAC;QAAE,OAAOxH,CAAC,CAACyI,MAAM,CAACpF,EAAE,CAAC;QAAE,OAAOrD,CAAC;MAAE,CAAC,CAAC;MACjEyI,MAAM,CAAC/E,QAAQ,GAAG,IAAI;IACxB;;IAEA;IACA,MAAME,KAAK,GAAGR,QAAQ,CAACmF,UAAU,EAAEV,WAAW,CAAC;IAC/C,MAAMc,MAAM,GAAGJ,UAAU,CAAChC,MAAM,CAAC9C,CAAC,IAAE,CAACG,KAAK,CAACzF,QAAQ,CAACsF,CAAC,CAACJ,EAAE,CAAC,CAAC;IAC1D,MAAMuF,MAAM,GAAGX,KAAK,CAACC,IAAI,CAACM,QAAQ,CAAC;IACnCI,MAAM,CAACR,MAAM,CAACR,WAAW,CAACS,KAAK,EAAC,CAAC,EAAC,GAAGE,UAAU,CAAChC,MAAM,CAAC9C,CAAC,IAAEG,KAAK,CAACzF,QAAQ,CAACsF,CAAC,CAACJ,EAAE,CAAC,CAAC,CAAC;;IAEhF;IACA,IAAI2E,EAAE,KAAK,OAAO,EAAE;MAClBtD,QAAQ,CAAC8C,CAAC,IAAI;QAAE,MAAMxH,CAAC,GAAC;UAAC,GAAGwH;QAAC,CAAC;QAAE5D,KAAK,CAACJ,OAAO,CAACH,EAAE,IAAE,OAAOrD,CAAC,CAACqD,EAAE,CAAC,CAAC;QAAE,OAAOrD,CAAC;MAAE,CAAC,CAAC;MAC7E4I,MAAM,CAACpF,OAAO,CAAC5B,GAAG,IAAI;QACpB,IAAIgC,KAAK,CAACzF,QAAQ,CAACyD,GAAG,CAACyB,EAAE,CAAC,EAAE;UAC1BzB,GAAG,CAAC8B,QAAQ,GAAG,IAAI;UACnB9B,GAAG,CAACY,SAAS,GAAGZ,GAAG,CAACa,OAAO,GAAG,IAAI;UAClCb,GAAG,CAAC5C,KAAK,GAAG4C,GAAG,CAACS,GAAG,GAAGT,GAAG,CAACc,QAAQ,GAAG,EAAE;UACvCd,GAAG,CAACe,MAAM,GAAG,KAAK;UAClBf,GAAG,CAACE,gBAAgB,GAAG,EAAE;UACzBF,GAAG,CAACqE,QAAQ,GAAG,IAAI;QACrB;MACF,CAAC,CAAC;IACJ;;IAEA;IACAzB,eAAe,CAACyC,EAAE,IAChBA,EAAE,CAACtF,GAAG,CAAC6E,CAAC,IAAI5C,KAAK,CAACzF,QAAQ,CAACqI,CAAC,CAACnD,EAAE,CAAC,GAAG;MAAE,GAAGmD,CAAC;MAAEd,SAAS,EAAEsC;IAAG,CAAC,GAAGxB,CAAC,CAChE,CAAC;;IAED;IACA5C,KAAK,CAACJ,OAAO,CAAC,CAACH,EAAE,EAACwF,CAAC,KAAK;MACtB,MAAMjH,GAAG,GAAGgH,MAAM,CAACE,IAAI,CAACrF,CAAC,IAAEA,CAAC,CAACJ,EAAE,KAAGA,EAAE,CAAC;MACrCzB,GAAG,CAAC8D,SAAS,GAAGsC,EAAE,KAAG,OAAO,GAAC,IAAI,GAACA,EAAE;MACpCpG,GAAG,CAACqE,QAAQ,GAAI+B,EAAE,KAAG,OAAO,GAAC,IAAI,GAACJ,WAAW,CAACS,KAAK,GAACQ,CAAC;MACrDjM,KAAK,CAACmM,GAAG,CAAC,GAAGhM,QAAQ,WAAWsG,EAAE,EAAE,EAAE;QACpCqC,SAAS,EAAE9D,GAAG,CAAC8D,SAAS;QACxBK,UAAU,EAAEnE,GAAG,CAAC5C,KAAK,IAAE,EAAE;QACzBgH,QAAQ,EAAIpE,GAAG,CAACS,GAAG,IAAI,EAAE;QACzBK,QAAQ,EAAId,GAAG,CAACc,QAAQ,IAAE,EAAE;QAC5BuD,QAAQ,EAAIrE,GAAG,CAACqE,QAAQ;QACxBnE,gBAAgB,EAAEF,GAAG,CAACE,gBAAgB,IAAE;MAC1C,CAAC,CAAC,CAAC8E,KAAK,CAACF,OAAO,CAACC,KAAK,CAAC;IACzB,CAAC,CAAC;;IAEF;IACA,MAAMqC,OAAO,GAAG;MACd7E,KAAK,EAAK;QAAE,GAAGF,OAAO,CAACE,KAAK;QAAK1C,IAAI,EAAER,SAAS,CAAC0H,MAAM,CAACM,MAAM,CAACjB,EAAE,KAAG,OAAO,GAACY,MAAM,GAAC,EAAE,CAAC;MAAE,CAAC;MACzFvE,QAAQ,EAAE;QAAE,GAAGJ,OAAO,CAACI,QAAQ;QAAE5C,IAAI,EAAED,mBAAmB,CAACwG,EAAE,KAAG,UAAU,GAACY,MAAM,GAACD,MAAM;MAAE,CAAC;MAC3FrE,QAAQ,EAAE;QAAE,GAAGL,OAAO,CAACK,QAAQ;QAAE7C,IAAI,EAAED,mBAAmB,CAACwG,EAAE,KAAG,UAAU,GAACY,MAAM,GAACD,MAAM;MAAE;IAC5F,CAAC;IAEDzE,UAAU,CAAC8E,OAAO,CAAC;EACrB,CAAC;;EAED;EACA,oBACElM,OAAA;IAAKoM,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,UAAU,EAAE,YAAY;MAAEC,QAAQ,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAElExM,OAAA;MACEyM,OAAO,EAAEA,CAAA,KAAM3E,YAAY,CAAC,IAAI,CAAE;MAClCsE,KAAK,EAAE;QAAEM,WAAW,EAAE,CAAC;QAAEH,QAAQ,EAAE;MAAG,CAAE;MAAAC,QAAA,EACzC;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT9M,OAAA;MAAQyM,OAAO,EAAE1C,UAAW;MAACqC,KAAK,EAAE;QAAEG,QAAQ,EAAE;MAAG,CAAE;MAAAC,QAAA,GAAC,iBACrC,EAAC,GAAG,EAClBpE,UAAU,KAAK,SAAS,iBACvBpI,OAAA;QAAMoM,KAAK,EAAE;UAAEW,KAAK,EAAE,OAAO;UAAER,QAAQ,EAAE;QAAG,CAAE;QAAAC,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAC/D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,EAGRjF,SAAS,iBACR7H,OAAA;MACEoM,KAAK,EAAE;QACLjD,QAAQ,EAAE,OAAO;QACjB6D,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;QACTC,UAAU,EAAE,iBAAiB;QAC7BC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,MAAM,EAAE;MACV,CAAE;MAAAhB,QAAA,eAEFxM,OAAA;QACEoM,KAAK,EAAE;UACLgB,UAAU,EAAE,MAAM;UAClBf,OAAO,EAAE,EAAE;UACXoB,YAAY,EAAE,CAAC;UACfC,QAAQ,EAAE;QACZ,CAAE;QAAAlB,QAAA,gBAEFxM,OAAA;UACEoM,KAAK,EAAE;YACLuB,SAAS,EAAE,CAAC;YACZC,SAAS,EAAE,QAAQ;YACnBrB,QAAQ,EAAE;UACZ,CAAE;UAAAC,QAAA,EACH;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEL9M,OAAA;UAAKoM,KAAK,EAAE;YAAEwB,SAAS,EAAE;UAAQ,CAAE;UAAApB,QAAA,gBACjCxM,OAAA;YACEyM,OAAO,EAAEA,CAAA,KAAM3E,YAAY,CAAC,KAAK,CAAE;YACnCsE,KAAK,EAAE;cAAEM,WAAW,EAAE,CAAC;cAAEH,QAAQ,EAAE;YAAG,CAAE;YAAAC,QAAA,EACzC;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT9M,OAAA;YAAQyM,OAAO,EAAExC,iBAAkB;YAACmC,KAAK,EAAE;cAAEG,QAAQ,EAAE;YAAG,CAAE;YAAAC,QAAA,EAAC;UAE7D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD9M,OAAA,CAACL,eAAe;MAACgL,SAAS,EAAEA,SAAU;MAAA6B,QAAA,eACpCxM,OAAA;QAAKoM,KAAK,EAAE;UAAEiB,OAAO,EAAE,MAAM;UAAEQ,GAAG,EAAE,EAAE;UAAEF,SAAS,EAAE;QAAG,CAAE;QAAAnB,QAAA,EACrD,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC3H,GAAG,CAAE0F,KAAK,IAAK;UAChD,MAAM5B,GAAG,GAAGxB,OAAO,CAACoD,KAAK,CAAC,IAAI,CAAC,CAAC;UAChC,MAAM5F,IAAI,GAAGwG,KAAK,CAAC2C,OAAO,CAACnF,GAAG,CAAChE,IAAI,CAAC,GAAGgE,GAAG,CAAChE,IAAI,GAAG,EAAE;;UAEpD;UACA,MAAMoJ,QAAQ,GAAG,EAAE;UACnB,IAAIhC,CAAC,GAAG,CAAC;UACT,OAAOA,CAAC,GAAGpH,IAAI,CAACnB,MAAM,EAAE;YACtB,MAAMsD,KAAK,GAAGR,QAAQ,CAAC3B,IAAI,EAAEA,IAAI,CAACoH,CAAC,CAAC,CAACxF,EAAE,CAAC;YACxC,MAAMyH,GAAG,GAAGlH,KAAK,CAACtD,MAAM,GAAG,CAAC,GAAGsD,KAAK,CAACtD,MAAM,GAAG,CAAC;YAC/CuK,QAAQ,CAAC/G,IAAI,CAAC;cAAE9E,KAAK,EAAE6J,CAAC;cAAEiC;YAAI,CAAC,CAAC;YAChCjC,CAAC,IAAIiC,GAAG;UACV;UAEA,MAAMC,GAAG,GAAG,CAAC;YACXC,OAAO,GAAG,CAAC;UAEb,oBACElO,OAAA,CAACJ,SAAS;YAAaqL,WAAW,EAAEV,KAAM;YAAAiC,QAAA,EACtC2B,QAAQ,iBACRnO,OAAA;cACEoO,GAAG,EAAED,QAAQ,CAACE,QAAS;cAAA,GACnBF,QAAQ,CAACG,cAAc;cAC3BlC,KAAK,EAAE;gBACLjD,QAAQ,EAAE,UAAU;gBACpBoF,MAAM,EAAE,gBAAgB;gBACxBd,YAAY,EAAE,CAAC;gBACfe,KAAK,EAAEjE,KAAK,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG;gBACpCkE,SAAS,EAAE,GAAG;gBACdpC,OAAO,EAAE,EAAE;gBACXe,UAAU,EAAE;cACd,CAAE;cAAAZ,QAAA,gBAEFxM,OAAA;gBACEoM,KAAK,EAAE;kBACLwB,SAAS,EAAE,QAAQ;kBACnBc,MAAM,EAAE,OAAO;kBACfnC,QAAQ,EAAE;gBACZ,CAAE;gBAAAC,QAAA,EAED7D,GAAG,CAACrB;cAAK;gBAAAqF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,EAEJiB,QAAQ,CAAClJ,GAAG,CAAC,CAAC8J,GAAG,EAAEC,EAAE,kBACpB5O,OAAA;gBAEEoM,KAAK,EAAE;kBACLjD,QAAQ,EAAE,UAAU;kBACpB0F,YAAY,EAAEZ,GAAG;kBACjBT,MAAM,EAAEmB,GAAG,CAACX,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;kBAC3Bc,OAAO,EACLH,GAAG,CAACX,GAAG,GAAG,CAAC,GAAG,GAAGE,OAAO,kBAAkB,GAAGa,SAAS;kBACxDC,aAAa,EAAEL,GAAG,CAACX,GAAG,GAAG,CAAC,GAAG,KAAK,GAAGe,SAAS;kBAC9CtB,YAAY,EAAE;gBAChB,CAAE;gBAAAjB,QAAA,EAED7H,IAAI,CACFpD,KAAK,CAACoN,GAAG,CAACzM,KAAK,EAAEyM,GAAG,CAACzM,KAAK,GAAGyM,GAAG,CAACX,GAAG,CAAC,CACrCnJ,GAAG,CAAC,CAACC,GAAG,EAAEmK,IAAI,KAAK;kBAClB,MAAMlK,GAAG,GAAG4J,GAAG,CAACzM,KAAK,GAAG+M,IAAI;kBAC5B,MAAMC,IAAI,GAAGpK,GAAG,CAACyB,EAAE,CAAC4I,UAAU,CAAC,KAAK,CAAC;kBACrC,MAAMC,MAAM,GAAGtK,GAAG,CAACkE,QAAQ,KAAK,WAAW;kBAC3C,MAAMqG,IAAI,GAAGH,IAAI,GACb1O,YAAY,GACZ4O,MAAM,GACN1O,UAAU,GACVE,YAAY;kBAChB,IAAI0O,EAAE,GAAGD,IAAI;oBACXE,IAAI,GAAGL,IAAI,GACPzO,WAAW,GACX2O,MAAM,GACNzO,SAAS,GACTE,WAAW;kBACjB,IAAIiE,GAAG,CAACe,MAAM,EAAE;oBACdyJ,EAAE,GAAG,oCAAoCD,IAAI,KAAKA,IAAI,sDAAsD;oBAC5GE,IAAI,GAAG,KAAK;kBACd;kBACA,MAAMC,GAAG,GAAG,CAAC1K,GAAG,CAACkE,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE;kBAEzC,oBACEhJ,OAAA,CAACH,SAAS;oBAERkL,WAAW,EAAEjG,GAAG,CAACyB,EAAG;oBACpBgF,KAAK,EAAExG,GAAI;oBAAAyH,QAAA,EAETiD,IAAI;sBAAA,IAAAC,WAAA,EAAAC,KAAA;sBAAA,oBACJ3P,OAAA;wBACEoO,GAAG,EAAEqB,IAAI,CAACpB,QAAS;wBAAA,GACfoB,IAAI,CAACG,cAAc;wBAAA,GACnBH,IAAI,CAACI,eAAe;wBACxBzD,KAAK,EAAE;0BACLjD,QAAQ,EAAE,UAAU;0BACpBkE,OAAO,EAAE,MAAM;0BACfyC,mBAAmB,EAAE,UAAU;0BAC/BC,gBAAgB,EAAE,qBAAqB;0BACvCC,SAAS,EAAE,CAAC;0BACZC,MAAM,EAAE,CAAC;0BACT5D,OAAO,EAAE,kBAAkB;0BAC3BqC,MAAM,EAAE,OACNO,IAAI,GAAGN,GAAG,CAACX,GAAG,GAAG,CAAC,GAAGC,GAAG,GAAG,CAAC,MACxB;0BACNb,UAAU,EAAEkC,EAAE;0BACdf,MAAM,EAAE,aAAagB,IAAI,EAAE;0BAC3B9B,YAAY,EAAE,CAAC;0BACfD,MAAM,EAAE,CAAC;0BACT,GAAGiC,IAAI,CAACG,cAAc,CAACxD;wBACzB,CAAE;wBAAAI,QAAA,GAEDyC,IAAI,KAAK,CAAC,IAAIN,GAAG,CAACX,GAAG,GAAG,CAAC,iBACxBhO,OAAA;0BACEoM,KAAK,EAAE;4BACLjD,QAAQ,EAAE,UAAU;4BACpB6D,GAAG,EAAE,CAAC;4BACNE,KAAK,EAAE,CAAC;4BACRsB,KAAK,EAAE,CAAC;4BACR0B,MAAM,EAAE,MAAM;4BACd9C,UAAU,EAAE,SAAS;4BACrBI,MAAM,EAAE;0BACV;wBAAE;0BAAAb,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACH,CACF,eAGD9M,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACb/C,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAEiC,IAAI;4BAChBhD,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,CAAC;4BACf4C,UAAU,EAAE,QAAQ;4BACpBC,QAAQ,EAAE,QAAQ;4BAClBC,YAAY,EAAE,UAAU;4BACxBhE,QAAQ,EAAE,EAAE;4BACZiE,UAAU,EAAE;0BACd,CAAE;0BAAAhE,QAAA,gBAEFxM,OAAA;4BACEoM,KAAK,EAAE;8BACLiB,OAAO,EAAE,cAAc;8BACvBmB,KAAK,EAAE,EAAE;8BACT0B,MAAM,EAAE,EAAE;8BACVzC,YAAY,EAAE,KAAK;8BACnBL,UAAU,EAAE,MAAM;8BAClBL,KAAK,EAAEsC,IAAI;8BACXoB,UAAU,EAAE,MAAM;8BAClB7C,SAAS,EAAE,QAAQ;8BACnBrB,QAAQ,EAAE2C,IAAI,GAAG,EAAE,GAAG,EAAE;8BACxBsB,UAAU,EAAE,MAAM;8BAClB9D,WAAW,EAAE;4BACf,CAAE;4BAAAF,QAAA,EAED0C,IAAI,GAAG,GAAG,GAAGpK,GAAG,CAACyB;0BAAE;4BAAAoG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAChB,CAAC,EACNhI,GAAG,CAACmD,OAAO;wBAAA;0BAAA0E,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACR,CAAC,eAGP9M,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACbM,WAAW,EAAE,KAAK;4BAClBrD,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAEiC,IAAI;4BAChBhD,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,CAAC;4BACflB,QAAQ,EAAE,EAAE;4BACZiE,UAAU,EAAE,MAAM;4BAClBH,UAAU,EAAE,QAAQ;4BACpBC,QAAQ,EAAE,QAAQ;4BAClBC,YAAY,EAAE;0BAChB,CAAE;0BAAA/D,QAAA,EAED1H,GAAG,CAACI;wBAAQ;0BAAAyH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACT,CAAC,eAGP9M,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACb/C,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAEiC,IAAI;4BAChBhD,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,CAAC;4BACf4C,UAAU,EAAE,QAAQ;4BACpBC,QAAQ,EAAE,QAAQ;4BAClBC,YAAY,EAAE,UAAU;4BACxBhE,QAAQ,EAAE;0BACZ,CAAE;0BAAAC,QAAA,GAAAkD,WAAA,GAED5K,GAAG,CAACiE,MAAM,cAAA2G,WAAA,uBAAVA,WAAA,CAAYnO,KAAK,CAAC,CAAC,EAAE,EAAE;wBAAC;0BAAAoL,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACrB,CAAC,EAGNhI,GAAG,CAAC5C,KAAK,iBACRlC,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACbM,WAAW,EAAE,KAAK;4BAClBrD,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAEtM,YAAY;4BACxBuL,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,EAAE;4BAChB4C,UAAU,EAAE,QAAQ;4BACpB9D,QAAQ,EAAE;0BACZ,CAAE;0BAAAC,QAAA,EAED1H,GAAG,CAAC5C;wBAAK;0BAAAyK,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACN,CACP,eAGD9M,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACb/C,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAErM,UAAU;4BACtBsL,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,CAAC;4BACf4C,UAAU,EAAE,QAAQ;4BACpBC,QAAQ,EAAE,QAAQ;4BAClBC,YAAY,EAAE,UAAU;4BACxBhE,QAAQ,EAAE;0BACZ,CAAE;0BAAAC,QAAA,EAED,QAAQtI,OAAO,CACdF,WAAW,CAACZ,YAAY,CAAC0B,GAAG,CAACN,QAAQ,CAAC,EAAE,CAAC,CAC3C,CAAC;wBAAE;0BAAAmI,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACC,CAAC,EAGNhI,GAAG,CAACS,GAAG,iBACNvF,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACbM,WAAW,EAAE,KAAK;4BAClBrD,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAErM,UAAU;4BACtBsL,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,EAAE;4BAChB4C,UAAU,EAAE,QAAQ;4BACpB9D,QAAQ,EAAE;0BACZ,CAAE;0BAAAC,QAAA,EAED1H,GAAG,CAACS;wBAAG;0BAAAoH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACJ,CACP,eAGD9M,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACb/C,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAEpM,YAAY;4BACxBqL,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,CAAC;4BACf4C,UAAU,EAAE,QAAQ;4BACpB9D,QAAQ,EAAE;0BACZ,CAAE;0BAAAC,QAAA,EAED,QAAQtI,OAAO,CAACY,GAAG,CAACN,QAAQ,CAAC;wBAAE;0BAAAmI,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC5B,CAAC,EAGNhI,GAAG,CAACc,QAAQ,iBACX5F,OAAA;0BACEoM,KAAK,EAAE;4BACL+D,OAAO,EAAE,CAAC;4BACVC,UAAU,EAAE,CAAC;4BACbM,WAAW,EAAE,KAAK;4BAClBrD,OAAO,EAAE,cAAc;4BACvBD,UAAU,EAAEpM,YAAY;4BACxBqL,OAAO,EAAE,OAAO;4BAChBoB,YAAY,EAAE,EAAE;4BAChB4C,UAAU,EAAE,QAAQ;4BACpB9D,QAAQ,EAAE;0BACZ,CAAE;0BAAAC,QAAA,EAED1H,GAAG,CAACc;wBAAQ;0BAAA+G,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACT,CACP,eAGD9M,OAAA;0BACEoM,KAAK,EAAE;4BACLjD,QAAQ,EAAE,UAAU;4BACpB6D,GAAG,EAAE,CAAC;4BACNE,KAAK,EAAE,CAAC;4BACRsB,KAAK,EAAE,EAAE;4BACT0B,MAAM,EAAE,EAAE;4BACV7C,OAAO,EAAE,MAAM;4BACfC,UAAU,EAAE,QAAQ;4BACpBC,cAAc,EAAE,QAAQ;4BACxBH,UAAU,EAAEiC,IAAI;4BAChBsB,oBAAoB,EAAE,CAAC;4BACvBC,sBAAsB,EAAE,CAAC;4BACzBpD,MAAM,EAAE,CAAC;4BACTjB,QAAQ,EAAE,EAAE;4BACZiE,UAAU,EAAE;0BACd,CAAE;0BAAAhE,QAAA,EAEDgD;wBAAG;0BAAA7C,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACD,CAAC,EAGL/H,GAAG,GAAGJ,IAAI,CAACnB,MAAM,GAAG,CAAC,iBACpBxD,OAAA;0BACEyM,OAAO,EAAEA,CAAA,KAAMnC,UAAU,CAACC,KAAK,EAAExF,GAAG,CAAE;0BACtCqH,KAAK,EAAE;4BACLjD,QAAQ,EAAE,UAAU;4BACpB6D,GAAG,EAAE,EAAE;4BACPE,KAAK,EAAE,CAAC;4BACRsB,KAAK,EAAE,EAAE;4BACT0B,MAAM,EAAE,mBAAmB;4BAC3B7C,OAAO,EAAE,MAAM;4BACfwD,aAAa,EAAE,QAAQ;4BACvBvD,UAAU,EAAE,QAAQ;4BACpBC,cAAc,EAAE,QAAQ;4BACxBuD,MAAM,EAAE,SAAS;4BACjB1D,UAAU,EAAEiC,IAAI;4BAChB0B,uBAAuB,EAAE,CAAC;4BAC1BvD,MAAM,EAAE;0BACV,CAAE;0BAAAhB,QAAA,EAED1H,GAAG,CAAC8B,QAAQ,OAAA+I,KAAA,GAAKhL,IAAI,CAACI,GAAG,GAAG,CAAC,CAAC,cAAA4K,KAAA,uBAAbA,KAAA,CAAepJ,EAAE,IAC/B,GAAG,GACH;wBAAI;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACL,CACN,EAGAhI,GAAG,CAACyB,EAAE,CAAC4I,UAAU,CAAC,KAAK,CAAC,iBACvBnP,OAAA;0BACEoM,KAAK,EAAE;4BACLjD,QAAQ,EAAE,UAAU;4BACpB6D,GAAG,EAAE,CAAC;4BACNE,KAAK,EAAE,CAAC;4BACRsB,KAAK,EAAE,EAAE;4BACT0B,MAAM,EAAE,MAAM;4BACd7C,OAAO,EAAE,MAAM;4BACfwD,aAAa,EAAE,QAAQ;4BACvBvD,UAAU,EAAE,QAAQ;4BACpBC,cAAc,EAAE,OAAO;4BACvBH,UAAU,EAAEiC,IAAI;4BAChBsB,oBAAoB,EAAE,CAAC;4BACvBI,uBAAuB,EAAE,CAAC;4BAC1BvD,MAAM,EAAE;0BACV,CAAE;0BAAAhB,QAAA,gBAEFxM,OAAA;4BACEyM,OAAO,EAAEA,CAAA,KAAMpC,eAAe,CAACvF,GAAG,CAAE;4BACpCsH,KAAK,EAAE;8BACL0E,MAAM,EAAE,SAAS;8BACjBvE,QAAQ,EAAE,EAAE;8BACZmC,MAAM,EAAE;4BACV,CAAE;4BAAAlC,QAAA,EACH;0BAED;4BAAAG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACP9M,OAAA;4BACEyM,OAAO,EAAEA,CAAA,KAAMrC,iBAAiB,CAACtF,GAAG,CAACyB,EAAE,CAAE;4BACzC6F,KAAK,EAAE;8BACL0E,MAAM,EAAE,SAAS;8BACjBvE,QAAQ,EAAE,EAAE;8BACZmC,MAAM,EAAE;4BACV,CAAE;4BAAAlC,QAAA,EACH;0BAED;4BAAAG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACJ,CACN;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACE,CAAC;oBAAA;kBACP,GA1SIhI,GAAG,CAACyB,EAAE;oBAAAoG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OA2SF,CAAC;gBAEhB,CAAC;cAAC,GAjVC8B,EAAE;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkVJ,CACN,CAAC,EAEDqB,QAAQ,CAAC6C,WAAW;YAAA;cAAArE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UACN,GAlXavC,KAAK;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmXV,CAAC;QAEhB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;;EAGR;AACA;AAAC5F,EAAA,CA1tBuBD,GAAG;AAAAgK,EAAA,GAAHhK,GAAG;AAAA,IAAAgK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}