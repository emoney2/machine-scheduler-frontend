{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// —————————————————————————————\n// CONFIGURATION\n// —————————————————————————————\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// —————————————————————————————\n// COLOR CONSTANTS\n// —————————————————————————————\nconst LIGHT_YELLOW = '#FFF9C4';\nconst DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1';\nconst DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7';\nconst DARK_PURPLE = '#6A1B9A';\n\n// —————————————————————————————\n// HELPER FUNCTIONS\n// —————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay - current;\n    if (free <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const mo = pad(dt.getMonth() + 1),\n    da = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ap}`;\n}\nfunction fmtDate(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${pad(dt.getMonth() + 1)}/${pad(dt.getDate())}/${dt.getFullYear()}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  const parts = d.split('/');\n  if (parts.length === 2) {\n    const [mo, da] = parts.map(x => parseInt(x, 10));\n    if (!isNaN(mo) && !isNaN(da)) {\n      const now = new Date();\n      now.setFullYear(now.getFullYear(), mo - 1, da, 0, 0, 0, 0);\n      return now;\n    }\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start),\n    removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\n// —————————————————————————————\n// SCHEDULING HELPER\n// —————————————————————————————\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0 && job.embroidery_start) {\n      start = clampToWorkHours(new Date(job.embroidery_start));\n    } else {\n      const base = prevEnd ? new Date(prevEnd.getTime() + 30 * 60000) : new Date();\n      start = clampToWorkHours(base);\n    }\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n    const delivery = fmtDate(addWorkDays(end, 6));\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = fmtDT(start);\n    job.end = fmtDT(end);\n    job.delivery = delivery;\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n\n  // placeholders persisted in localStorage\n  const [placeholders, setPlaceholders] = useState(() => {\n    const raw = localStorage.getItem('placeholders');\n    return raw ? JSON.parse(raw) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  // modal/form state\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // Add new placeholder\n  const addPlaceholder = () => {\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${('0' + (new Date(ph.inHand).getMonth() + 1)).slice(-2)}` + `/${('0' + new Date(ph.inHand).getDate()).slice(-2)} - ${ph.dueType}`;\n    const job = {\n      id,\n      title,\n      company: ph.company,\n      quantity: Number(ph.quantity) || 1,\n      stitchCount: Number(ph.stitchCount) || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: Infinity\n    };\n    setPlaceholders(ps => [job, ...ps]);\n    setShowModal(false);\n    setPh({\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n\n  // Remove placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(j => j.id !== id));\n  };\n\n  // Prefill form to edit\n  const editPlaceholder = job => {\n    setPh({\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setPlaceholders(ps => ps.filter(j => j.id !== job.id));\n    setShowModal(true);\n  };\n\n  // Fetch from server + merge with placeholders\n  const fetchAll = () => {\n    axios.get(`${API_ROOT}/orders`).then(({\n      data\n    }) => {\n      // 1) group real jobs by column\n      const real = {\n        queue: [],\n        machine1: [],\n        machine2: []\n      };\n      data.forEach(o => {\n        if (!o.title) return;\n        const job = {\n          ...o,\n          id: o.id.toString(),\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date || '',\n          end: o.end_date || '',\n          delivery: o.delivery || '',\n          position: o.position != null ? o.position : Infinity,\n          embroidery_start: o.embroidery_start || ''\n        };\n        const col = o.machineId || 'queue';\n        real[col].push(job);\n      });\n\n      // 2) build combined columns\n      const colsData = {};\n      ['queue', 'machine1', 'machine2'].forEach(colId => {\n        // filter placeholders for this col\n        const phFor = placeholders.filter(p => p.machineId === colId);\n        const phJobs = phFor.map(p => ({\n          ...p,\n          title: p.title,\n          stitchCount: p.stitchCount,\n          quantity: p.quantity,\n          due_date: p.due_date,\n          due_type: p.due_type,\n          start: '',\n          end: '',\n          delivery: ''\n        }));\n        const realJobs = real[colId] || [];\n        const combined = [...phJobs, ...realJobs].sort((a, b) => {\n          const pa = a.position != null ? a.position : Infinity;\n          const pb = b.position != null ? b.position : Infinity;\n          return pa - pb;\n        });\n        colsData[colId] = combined;\n      });\n\n      // 3) schedule machines\n      colsData.machine1 = scheduleMachineJobs(colsData.machine1);\n      colsData.machine2 = scheduleMachineJobs(colsData.machine2);\n\n      // 4) set state\n      setColumns({\n        queue: {\n          id: 'queue',\n          title: 'Unscheduled',\n          jobs: colsData.queue\n        },\n        machine1: {\n          id: 'machine1',\n          title: 'Machine 1',\n          jobs: colsData.machine1\n        },\n        machine2: {\n          id: 'machine2',\n          title: 'Machine 2',\n          jobs: colsData.machine2\n        }\n      });\n    }).catch(console.error);\n  };\n  useEffect(fetchAll, []);\n\n  // Drag & Drop handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n    // deep clone\n    const cols = JSON.parse(JSON.stringify(columns));\n\n    // 1) move the job in our local cols\n    const [moved] = cols[source.droppableId].jobs.splice(source.index, 1);\n    cols[destination.droppableId].jobs.splice(destination.index, 0, moved);\n\n    // 2) clear dates if dropped to queue\n    if (destination.droppableId === 'queue') {\n      moved.start = moved.end = moved.delivery = '';\n      moved.machineId = 'queue';\n      moved.position = destination.index;\n    }\n\n    // 3) rebuild placeholder-state from cols\n    const updatedPh = [];\n    ['queue', 'machine1', 'machine2'].forEach(colId => {\n      cols[colId].jobs.forEach((job, idx) => {\n        if (job.id.startsWith('ph-')) {\n          updatedPh.push({\n            id: job.id,\n            title: job.title,\n            company: job.company,\n            quantity: job.quantity,\n            stitchCount: job.stitchCount,\n            due_date: job.due_date,\n            due_type: job.due_type,\n            machineId: colId,\n            position: idx\n          });\n        }\n      });\n    });\n    setPlaceholders(updatedPh);\n\n    // 4) schedule both machines\n    cols.machine1.jobs = scheduleMachineJobs(cols.machine1.jobs);\n    cols.machine2.jobs = scheduleMachineJobs(cols.machine2.jobs);\n\n    // 5) persist real jobs to server\n    ['machine1', 'machine2'].forEach(colId => {\n      cols[colId].jobs.forEach((job, idx) => {\n        if (!job.id.startsWith('ph-')) {\n          axios.put(`${API_ROOT}/orders/${job.id}`, {\n            machineId: colId,\n            start_date: job.start,\n            end_date: job.end,\n            delivery: job.delivery,\n            position: idx\n          }).catch(console.error);\n        }\n      });\n    });\n    // also handle the one moved to queue if real\n    if (!moved.id.startsWith('ph-') && destination.droppableId === 'queue') {\n      axios.put(`${API_ROOT}/orders/${moved.id}`, {\n        machineId: null,\n        start_date: '',\n        end_date: '',\n        delivery: '',\n        position: null\n      }).catch(console.error);\n    }\n\n    // 6) update UI\n    setColumns(cols);\n  };\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 14\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAll,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: \"Add Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Stitch Count\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"In Hand Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Due Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addPlaceholder,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                textAlign: 'center',\n                margin: '8px 0'\n              },\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const dueDt = parseDueDate(job.due_date);\n              const dueMinus6 = dueDt ? subWorkDays(dueDt, 6) : null;\n              const endDt = job._rawEnd || null;\n              const isLate = endDt && dueMinus6 && endDt > dueMinus6;\n              const isHard = job.due_type === 'Hard Date';\n              const isSoft = job.due_type === 'Soft Date';\n              const isPh = job.id.startsWith('ph-');\n\n              // outline & fill base\n              let bg, bdr;\n              if (isPh) {\n                bg = LIGHT_YELLOW;\n                bdr = `2px solid ${DARK_YELLOW}`;\n              } else if (isSoft) {\n                bg = LIGHT_GREY;\n                bdr = `2px solid ${DARK_GREY}`;\n              } else if (isHard) {\n                bg = LIGHT_PURPLE;\n                bdr = `2px solid ${DARK_PURPLE}`;\n              } else {\n                bg = '#fff';\n                bdr = '1px solid #ccc';\n              }\n\n              // override fill with diagonal stripes if late\n              if (isLate) {\n                const c1 = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : isHard ? LIGHT_PURPLE : '#fff';\n                const c2 = 'rgba(255,0,0,0.5)';\n                bg = `repeating-linear-gradient(\n                        45deg,\n                        ${c1},\n                        ${c1} 6px,\n                        ${c2} 6px,\n                        ${c2} 12px\n                      )`;\n              }\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    position: 'relative',\n                    userSelect: 'none',\n                    padding: 8,\n                    margin: '0 0 8px 0',\n                    background: bg,\n                    border: bdr,\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: 14,\n                    ...p.draggableProps.style\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 6\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontWeight: 'bold'\n                      },\n                      children: job.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 2,\n                      fontSize: 12\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#e0f7fa',\n                        borderRadius: 10\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 48\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#ffe0b2',\n                        borderRadius: 10\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 48\n                    }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#c8e6c9',\n                        borderRadius: 10\n                      },\n                      children: job.delivery\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 29\n                  }, this), isPh && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: 4,\n                      marginLeft: 8\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => removePlaceholder(job.id),\n                      children: \"\\u2715\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 535,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => editPlaceholder(job),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 23\n              }, this);\n            }), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v/szSjHkhrsXWGdFtP4FcAZQJmY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","mo","getMonth","da","h","m","ap","fmtDate","getFullYear","parseDueDate","parts","split","length","map","x","parseInt","now","setFullYear","addWorkDays","days","added","subWorkDays","removed","scheduleMachineJobs","jobs","prevEnd","job","idx","embroidery_start","base","qty","quantity","Math","ceil","runMs","stitchCount","end","delivery","_rawStart","_rawEnd","App","_s","columns","setColumns","queue","id","title","machine1","machine2","placeholders","setPlaceholders","raw","localStorage","getItem","JSON","parse","setItem","stringify","showModal","setShowModal","ph","setPh","company","inHand","dueType","addPlaceholder","Number","due_date","due_type","machineId","position","Infinity","ps","removePlaceholder","filter","j","editPlaceholder","fetchAll","get","then","data","real","forEach","o","toString","stitch_count","start_date","end_date","col","push","colsData","colId","phFor","p","phJobs","realJobs","combined","sort","a","b","pa","pb","catch","console","error","onDragEnd","result","source","destination","draggableId","droppableId","index","cols","moved","splice","updatedPh","startsWith","put","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","value","onChange","e","target","width","type","gap","Object","values","provided","ref","innerRef","droppableProps","border","minHeight","margin","dueDt","dueMinus6","endDt","isLate","isHard","isSoft","isPh","bg","bdr","c1","c2","draggableProps","dragHandleProps","userSelect","boxShadow","flex","paddingRight","fontWeight","flexDirection","marginLeft","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// —————————————————————————————\n// CONFIGURATION\n// —————————————————————————————\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// —————————————————————————————\n// COLOR CONSTANTS\n// —————————————————————————————\nconst LIGHT_YELLOW = '#FFF9C4';\nconst DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY   = '#ECEFF1';\nconst DARK_GREY    = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7';\nconst DARK_PURPLE  = '#6A1B9A';\n\n// —————————————————————————————\n// HELPER FUNCTIONS\n// —————————————————————————————\nfunction isHoliday(dt){\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt){\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt){\n  let d = new Date(dt);\n  while(\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ){\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms){\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay - current;\n    if (free <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt){\n  const pad = n => String(n).padStart(2,'0');\n  const mo = pad(dt.getMonth()+1),\n        da = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ap}`;\n}\nfunction fmtDate(dt){\n  const pad = n => String(n).padStart(2,'0');\n  return `${pad(dt.getMonth()+1)}/${pad(dt.getDate())}/${dt.getFullYear()}`;\n}\nfunction parseDueDate(d){\n  if (!d) return null;\n  const parts = d.split('/');\n  if (parts.length === 2) {\n    const [mo, da] = parts.map(x=>parseInt(x,10));\n    if (!isNaN(mo)&&!isNaN(da)) {\n      const now = new Date();\n      now.setFullYear(now.getFullYear(), mo-1, da, 0,0,0,0);\n      return now;\n    }\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days){\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate()+1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days){\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate()-1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\n// —————————————————————————————\n// SCHEDULING HELPER\n// —————————————————————————————\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0 && job.embroidery_start) {\n      start = clampToWorkHours(new Date(job.embroidery_start));\n    } else {\n      const base = prevEnd \n        ? new Date(prevEnd.getTime() + 30*60000) \n        : new Date();\n      start = clampToWorkHours(base);\n    }\n    const qty   = job.quantity % 6 === 0 \n                ? job.quantity \n                : Math.ceil(job.quantity/6)*6;\n    const runMs = (job.stitchCount/30000)*(qty/6)*3600000;\n    const end   = addWorkTime(start, runMs);\n    const delivery = fmtDate(addWorkDays(end,6));\n\n    job._rawStart  = start;\n    job._rawEnd    = end;\n    job.start      = fmtDT(start);\n    job.end        = fmtDT(end);\n    job.delivery   = delivery;\n    prevEnd        = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App(){\n  const [columns, setColumns] = useState({\n    queue:     { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1:  { id:'machine1', title:'Machine 1',   jobs:[] },\n    machine2:  { id:'machine2', title:'Machine 2',   jobs:[] },\n  });\n\n  // placeholders persisted in localStorage\n  const [placeholders, setPlaceholders] = useState(()=>{\n    const raw = localStorage.getItem('placeholders');\n    return raw ? JSON.parse(raw) : [];\n  });\n  useEffect(()=>{\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  // modal/form state\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n\n  // Add new placeholder\n  const addPlaceholder = ()=>{\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${('0'+(new Date(ph.inHand).getMonth()+1)).slice(-2)}` +\n                  `/${('0'+new Date(ph.inHand).getDate()).slice(-2)} - ${ph.dueType}`;\n    const job = {\n      id,\n      title,\n      company:     ph.company,\n      quantity:    Number(ph.quantity)||1,\n      stitchCount: Number(ph.stitchCount)||30000,\n      due_date:    ph.inHand,\n      due_type:    ph.dueType,\n      machineId:   'queue',\n      position:    Infinity\n    };\n    setPlaceholders(ps=>[job, ...ps]);\n    setShowModal(false);\n    setPh({company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n  };\n\n  // Remove placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(j=>j.id!==id));\n  };\n\n  // Prefill form to edit\n  const editPlaceholder = job => {\n    setPh({\n      company:     job.company,\n      quantity:    job.quantity,\n      stitchCount: job.stitchCount,\n      inHand:      job.due_date,\n      dueType:     job.due_type\n    });\n    setPlaceholders(ps=>ps.filter(j=>j.id!==job.id));\n    setShowModal(true);\n  };\n\n  // Fetch from server + merge with placeholders\n  const fetchAll = () => {\n    axios.get(`${API_ROOT}/orders`)\n      .then(({data})=>{\n        // 1) group real jobs by column\n        const real = { queue:[], machine1:[], machine2:[] };\n        data.forEach(o=>{\n          if (!o.title) return;\n          const job = {\n            ...o,\n            id:           o.id.toString(),\n            stitchCount:  o.stitch_count,\n            quantity:     o.quantity,\n            due_date:     o.due_date,\n            due_type:     o.due_type,\n            start:        o.start_date  || '',\n            end:          o.end_date    || '',\n            delivery:     o.delivery    || '',\n            position:     (o.position!=null?o.position:Infinity),\n            embroidery_start: o.embroidery_start || ''\n          };\n          const col = o.machineId || 'queue';\n          real[col].push(job);\n        });\n\n        // 2) build combined columns\n        const colsData = {};\n        ['queue','machine1','machine2'].forEach(colId=>{\n          // filter placeholders for this col\n          const phFor = placeholders.filter(p=>p.machineId===colId);\n          const phJobs = phFor.map(p=>({\n            ...p,\n            title:       p.title,\n            stitchCount: p.stitchCount,\n            quantity:    p.quantity,\n            due_date:    p.due_date,\n            due_type:    p.due_type,\n            start:'', end:'', delivery:''\n          }));\n          const realJobs = real[colId]||[];\n          const combined = [...phJobs, ...realJobs].sort((a,b)=>{\n            const pa = a.position!=null ? a.position : Infinity;\n            const pb = b.position!=null ? b.position : Infinity;\n            return pa - pb;\n          });\n          colsData[colId] = combined;\n        });\n\n        // 3) schedule machines\n        colsData.machine1 = scheduleMachineJobs(colsData.machine1);\n        colsData.machine2 = scheduleMachineJobs(colsData.machine2);\n\n        // 4) set state\n        setColumns({\n          queue:    { id:'queue',    title:'Unscheduled', jobs: colsData.queue    },\n          machine1: { id:'machine1', title:'Machine 1',   jobs: colsData.machine1 },\n          machine2: { id:'machine2', title:'Machine 2',   jobs: colsData.machine2 },\n        });\n      })\n      .catch(console.error);\n  };\n  useEffect(fetchAll, []);\n\n  // Drag & Drop handler\n  const onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (!destination) return;\n    if (\n      source.droppableId===destination.droppableId &&\n      source.index===destination.index\n    ) return;\n\n    // deep clone\n    const cols = JSON.parse(JSON.stringify(columns));\n\n    // 1) move the job in our local cols\n    const [moved] = cols[source.droppableId].jobs.splice(source.index,1);\n    cols[destination.droppableId].jobs.splice(destination.index,0,moved);\n\n    // 2) clear dates if dropped to queue\n    if (destination.droppableId==='queue') {\n      moved.start = moved.end = moved.delivery = '';\n      moved.machineId = 'queue';\n      moved.position  = destination.index;\n    }\n\n    // 3) rebuild placeholder-state from cols\n    const updatedPh = [];\n    ['queue','machine1','machine2'].forEach(colId=>{\n      cols[colId].jobs.forEach((job, idx)=>{\n        if (job.id.startsWith('ph-')) {\n          updatedPh.push({\n            id:           job.id,\n            title:        job.title,\n            company:      job.company,\n            quantity:     job.quantity,\n            stitchCount:  job.stitchCount,\n            due_date:     job.due_date,\n            due_type:     job.due_type,\n            machineId:    colId,\n            position:     idx\n          });\n        }\n      });\n    });\n    setPlaceholders(updatedPh);\n\n    // 4) schedule both machines\n    cols.machine1.jobs = scheduleMachineJobs(cols.machine1.jobs);\n    cols.machine2.jobs = scheduleMachineJobs(cols.machine2.jobs);\n\n    // 5) persist real jobs to server\n    ['machine1','machine2'].forEach(colId=>{\n      cols[colId].jobs.forEach((job, idx)=>{\n        if (!job.id.startsWith('ph-')) {\n          axios.put(`${API_ROOT}/orders/${job.id}`, {\n            machineId:   colId,\n            start_date:  job.start,\n            end_date:    job.end,\n            delivery:    job.delivery,\n            position:    idx\n          }).catch(console.error);\n        }\n      });\n    });\n    // also handle the one moved to queue if real\n    if (!moved.id.startsWith('ph-') && destination.droppableId==='queue') {\n      axios.put(`${API_ROOT}/orders/${moved.id}`, {\n        machineId: null,\n        start_date:'', end_date:'', delivery:'',\n        position:  null\n      }).catch(console.error);\n    }\n\n    // 6) update UI\n    setColumns(cols);\n  };\n\n  // Render\n  return (\n    <div style={{padding:16,fontFamily:'sans-serif',fontSize:14}}>\n      <button onClick={()=>setShowModal(true)} style={{marginRight:8}}>\n        + Add Placeholder\n      </button>\n      <button onClick={fetchAll}>Refresh Data</button>\n\n      {showModal && (\n        <div style={{\n          position:'fixed', top:0,left:0,right:0,bottom:0,\n          background:'rgba(0,0,0,0.3)',\n          display:'flex', alignItems:'center', justifyContent:'center',\n          zIndex:1000\n        }}>\n          <div style={{background:'#fff',padding:20,borderRadius:4,minWidth:300}}>\n            <h3 style={{marginTop:0,textAlign:'center'}}>Add Placeholder</h3>\n\n            <label>Company Name<br/>\n              <input\n                value={ph.company}\n                onChange={e=>setPh({...ph,company:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label>\n            <br/><br/>\n\n            <label>Quantity<br/>\n              <input\n                type=\"number\"\n                value={ph.quantity}\n                onChange={e=>setPh({...ph,quantity:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label>\n            <br/><br/>\n\n            <label>Stitch Count<br/>\n              <input\n                type=\"number\"\n                value={ph.stitchCount}\n                onChange={e=>setPh({...ph,stitchCount:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label>\n            <br/><br/>\n\n            <label>In Hand Date<br/>\n              <input\n                type=\"date\"\n                value={ph.inHand}\n                onChange={e=>setPh({...ph,inHand:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label>\n            <br/><br/>\n\n            <label>Due Type<br/>\n              <select\n                value={ph.dueType}\n                onChange={e=>setPh({...ph,dueType:e.target.value})}\n                style={{width:'100%'}}\n              >\n                <option>Hard Date</option>\n                <option>Soft Date</option>\n              </select>\n            </label>\n            <br/><br/>\n\n            <div style={{textAlign:'right'}}>\n              <button onClick={()=>setShowModal(false)} style={{marginRight:8}}>\n                Cancel\n              </button>\n              <button onClick={addPlaceholder}>Submit</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{display:'flex',gap:16,marginTop:16}}>\n          {Object.values(columns).map(col=>(\n            <Droppable key={col.id} droppableId={col.id}>\n              {(provided)=>(\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4 style={{textAlign:'center',margin:'8px 0'}}>{col.title}</h4>\n\n                  {col.jobs.map((job, idx)=> {\n                    const dueDt     = parseDueDate(job.due_date);\n                    const dueMinus6 = dueDt ? subWorkDays(dueDt,6) : null;\n                    const endDt     = job._rawEnd || null;\n                    const isLate    = endDt && dueMinus6 && endDt > dueMinus6;\n                    const isHard    = job.due_type === 'Hard Date';\n                    const isSoft    = job.due_type === 'Soft Date';\n                    const isPh      = job.id.startsWith('ph-');\n\n                    // outline & fill base\n                    let bg, bdr;\n                    if (isPh) {\n                      bg  = LIGHT_YELLOW;\n                      bdr = `2px solid ${DARK_YELLOW}`;\n                    } else if (isSoft) {\n                      bg  = LIGHT_GREY;\n                      bdr = `2px solid ${DARK_GREY}`;\n                    } else if (isHard) {\n                      bg  = LIGHT_PURPLE;\n                      bdr = `2px solid ${DARK_PURPLE}`;\n                    } else {\n                      bg  = '#fff';\n                      bdr = '1px solid #ccc';\n                    }\n\n                    // override fill with diagonal stripes if late\n                    if (isLate) {\n                      const c1 = isPh ? LIGHT_YELLOW\n                               : isSoft ? LIGHT_GREY\n                               : isHard ? LIGHT_PURPLE\n                               : '#fff';\n                      const c2 = 'rgba(255,0,0,0.5)';\n                      bg = `repeating-linear-gradient(\n                        45deg,\n                        ${c1},\n                        ${c1} 6px,\n                        ${c2} 6px,\n                        ${c2} 12px\n                      )`;\n                    }\n\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {(p)=>(\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              position:'relative',\n                              userSelect:'none',\n                              padding:8,\n                              margin:'0 0 8px 0',\n                              background:bg,\n                              border:bdr,\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              alignItems:'center',\n                              fontSize:14,\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            <div style={{flex:1,paddingRight:6}}>\n                              <div style={{fontWeight:'bold'}}>{job.title}</div>\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:2,\n                              fontSize:12\n                            }}>\n                              {job.start    && <div style={{padding:'2px 4px',background:'#e0f7fa',borderRadius:10}}>{job.start}</div>}\n                              {job.end      && <div style={{padding:'2px 4px',background:'#ffe0b2',borderRadius:10}}>{job.end}</div>}\n                              {job.delivery && <div style={{padding:'2px 4px',background:'#c8e6c9',borderRadius:10}}>{job.delivery}</div>}\n                            </div>\n                            {isPh && (\n                              <div style={{display:'flex',flexDirection:'column',gap:4,marginLeft:8}}>\n                                <button onClick={()=>removePlaceholder(job.id)}>✕</button>\n                                <button onClick={()=>editPlaceholder(job)}>Edit</button>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}