{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\n\n// —————————————————————————————\n// HELPER FUNCTIONS\n// —————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // push forward to a valid work start\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  // if past work end, move to next day start\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay - current;\n    if (free <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  let h = dt.getHours();\n  const m = pad(dt.getMinutes());\n  const ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${pad(dt.getMonth() + 1)}/${pad(dt.getDate())} ${pad(h)}:${m} ${ap}`;\n}\nfunction fmtDate(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${pad(dt.getMonth() + 1)}/${pad(dt.getDate())}/${dt.getFullYear()}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  // ISO YYYY-MM-DD\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) {\n    return new Date(d);\n  }\n  // MM/DD or MM/DD/YYYY\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = parseInt(parts[0], 10);\n    const da = parseInt(parts[1], 10);\n    const yr = parts.length === 3 ? parseInt(parts[2], 10) : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) {\n      return new Date(yr, mo - 1, da);\n    }\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start);\n  let added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start);\n  let removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  return `${String(dt.getMonth() + 1).padStart(2, '0')}/${String(dt.getDate()).padStart(2, '0')}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date),\n      db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING HELPER\n// —————————————————————————————\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      if (job.embroidery_start) {\n        // use stored start\n        start = clampToWorkHours(new Date(job.embroidery_start));\n      } else {\n        // record first-start\n        start = clampToWorkHours(new Date());\n        job.embroidery_start = new Date().toISOString();\n      }\n    } else {\n      // 30 minutes after previous end\n      const base = new Date(prevEnd.getTime() + 30 * 60000);\n      start = clampToWorkHours(base);\n    }\n\n    // calculate end\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n\n    // EED cutoff = IHD -6 business days at closing time\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = fmtDT(start);\n    job.end = fmtDT(end);\n    job.delivery = fmtDate(addWorkDays(end, 6));\n    job.isLate = end > cutoff;\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState(() => {\n    const raw = localStorage.getItem('placeholders');\n    return raw ? JSON.parse(raw) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // — FETCH & MERGE REAL + PLACEHOLDERS —\n  const fetchAll = async () => {\n    const {\n      data\n    } = await axios.get(`${API_ROOT}/orders`);\n\n    // group real jobs\n    const real = {\n      queue: [],\n      machine1: [],\n      machine2: []\n    };\n    data.forEach(o => {\n      if (!o.title) return;\n      const job = {\n        ...o,\n        id: o.id.toString(),\n        stitchCount: o.stitch_count,\n        quantity: o.quantity,\n        start: o.start_date || '',\n        end: o.end_date || '',\n        delivery: o.delivery || '',\n        position: o.position != null ? o.position : null,\n        embroidery_start: o.embroidery_start || ''\n      };\n      // only machine1/machine2 or queue\n      const col = o.machineId === 'machine1' || o.machineId === 'machine2' ? o.machineId : 'queue';\n      real[col].push(job);\n    });\n\n    // sort machines by position\n    ['machine1', 'machine2'].forEach(colId => {\n      real[colId].sort((a, b) => {\n        const pa = a.position != null ? a.position : Infinity;\n        const pb = b.position != null ? b.position : Infinity;\n        return pa - pb;\n      });\n    });\n\n    // merge placeholders\n    const merged = {};\n    ['queue', 'machine1', 'machine2'].forEach(colId => {\n      const phFor = placeholders.filter(p => p.machineId === colId).sort((a, b) => {\n        const pa = a.position != null ? a.position : Infinity;\n        const pb = b.position != null ? b.position : Infinity;\n        return pa - pb;\n      }).map(p => ({\n        ...p,\n        titleLines: [`${p.company} - ${p.quantity}`, `${p.stitchCount} - ${p.dueType}`, `EED: ${fmtMMDD(subWorkDays(parseDueDate(p.due_date), 6))}`, `IHD: ${fmtMMDD(p.due_date)}`]\n      }));\n      merged[colId] = [...phFor, ...real[colId]];\n    });\n\n    // sort queue by due date\n    const queueJobs = sortQueue(merged.queue);\n    // schedule machines in manual order\n    const m1 = scheduleMachineJobs(merged.machine1);\n    const m2 = scheduleMachineJobs(merged.machine2);\n    setColumns({\n      queue: {\n        id: 'queue',\n        title: 'Unscheduled',\n        jobs: queueJobs\n      },\n      machine1: {\n        id: 'machine1',\n        title: 'Machine 1',\n        jobs: m1\n      },\n      machine2: {\n        id: 'machine2',\n        title: 'Machine 2',\n        jobs: m2\n      }\n    });\n  };\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // — PLACEHOLDER CRUD (instant update) —\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      dueType: ph.dueType,\n      machineId: 'queue',\n      position: null,\n      titleLines: [`${ph.company} - ${ph.quantity}`, `${ph.stitchCount} - ${ph.dueType}`, `EED: ${fmtMMDD(subWorkDays(parseDueDate(ph.inHand), 6))}`, `IHD: ${fmtMMDD(ph.inHand)}`]\n    };\n    if (ph.id) {\n      // edit\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      // add\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.dueType\n    });\n    setShowModal(true);\n  };\n\n  // — DRAG & DROP —\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    const c = {\n      ...columns\n    };\n    const [moved] = c[source.droppableId].jobs.splice(source.index, 1);\n    c[destination.droppableId].jobs.splice(destination.index, 0, moved);\n\n    // clear stripe on unschedule\n    if (destination.droppableId === 'queue') moved.isLate = false;\n\n    // update placement\n    moved.machineId = destination.droppableId === 'queue' ? 'queue' : destination.droppableId;\n    moved.position = destination.droppableId === 'queue' ? null : destination.index;\n\n    // record embroidery_start if first on machine\n    if (moved.machineId !== 'queue' && destination.index === 0 && !moved.embroidery_start) {\n      moved.embroidery_start = new Date().toISOString();\n    }\n\n    // clear schedule if unscheduled\n    if (moved.machineId === 'queue') {\n      delete moved.start;\n      delete moved.end;\n      delete moved.delivery;\n    }\n\n    // placeholder move\n    if (draggableId.startsWith('ph-')) {\n      setPlaceholders(ps => ps.map(p => p.id === draggableId ? {\n        ...p,\n        machineId: moved.machineId,\n        position: moved.position\n      } : p));\n      setColumns({\n        queue: {\n          ...c.queue,\n          jobs: sortQueue(c.queue.jobs)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: scheduleMachineJobs(c.machine1.jobs)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: scheduleMachineJobs(c.machine2.jobs)\n        }\n      });\n      return;\n    }\n\n    // persist real job\n    axios.put(`${API_ROOT}/orders/${draggableId}`, {\n      machineId: moved.machineId === 'queue' ? null : moved.machineId,\n      start_date: moved.start || '',\n      end_date: moved.end || '',\n      delivery: moved.delivery || '',\n      position: moved.position,\n      embroidery_start: moved.embroidery_start || ''\n    }).catch(console.error);\n    setColumns({\n      queue: {\n        ...c.queue,\n        jobs: sortQueue(c.queue.jobs)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: scheduleMachineJobs(c.machine1.jobs)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: scheduleMachineJobs(c.machine2.jobs)\n      }\n    });\n  };\n\n  // — RENDER —\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 14\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      children: [\"Sync from Sheet\", syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green',\n          marginLeft: 8\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: \"Add/Edit Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"In Hand Date (IHD)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Stitch Count\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Due Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitPlaceholder,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId];\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: 260,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0'\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this), col.jobs.map((job, idx) => {\n                const isHard = job.due_type === 'Hard Date';\n                const isSoft = job.due_type === 'Soft Date';\n                const isPh = job.id.startsWith('ph-');\n                const isLate = job.isLate;\n                let bg, bdr;\n                if (isPh) {\n                  bg = LIGHT_YELLOW;\n                  bdr = `2px solid ${DARK_YELLOW}`;\n                } else if (isSoft) {\n                  bg = LIGHT_GREY;\n                  bdr = `2px solid ${DARK_GREY}`;\n                } else if (isHard) {\n                  bg = LIGHT_PURPLE;\n                  bdr = `2px solid ${DARK_PURPLE}`;\n                } else {\n                  bg = '#fff';\n                  bdr = '1px solid #ccc';\n                }\n                if (isLate) {\n                  const c1 = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                  const c2 = 'rgba(255,0,0,0.5)';\n                  bg = `repeating-linear-gradient(45deg, ${c1}, ${c1} 6px, ${c2} 6px, ${c2} 12px)`;\n                }\n\n                // multi-line title\n                const titleElem = isPh ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    lineHeight: 1.2\n                  },\n                  children: job.titleLines.map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: l\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 58\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    lineHeight: 1.2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `${job.id} - ${job.company}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `${job.design} - ${job.quantity}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))} - IHD: ${fmtMMDD(job.due_date)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: job.due_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 27\n                }, this);\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job.id,\n                  index: idx,\n                  children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: p.innerRef,\n                    ...p.draggableProps,\n                    ...p.dragHandleProps,\n                    style: {\n                      position: 'relative',\n                      userSelect: 'none',\n                      padding: 8,\n                      margin: '0 0 8px 0',\n                      background: bg,\n                      border: bdr,\n                      borderRadius: 4,\n                      boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                      ...p.draggableProps.style\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        flex: 1,\n                        paddingRight: 6\n                      },\n                      children: titleElem\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-end',\n                        gap: 2,\n                        fontSize: 12\n                      },\n                      children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          padding: '2px 4px',\n                          background: '#e0f7fa',\n                          borderRadius: 10\n                        },\n                        children: job.start\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 50\n                      }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          padding: '2px 4px',\n                          background: '#ffe0b2',\n                          borderRadius: 10\n                        },\n                        children: job.end\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 578,\n                        columnNumber: 50\n                      }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          padding: '2px 4px',\n                          background: '#c8e6c9',\n                          borderRadius: 10\n                        },\n                        children: job.delivery\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 579,\n                        columnNumber: 50\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 31\n                    }, this), isPh && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: 4,\n                        marginLeft: 8\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => removePlaceholder(job.id),\n                        children: \"\\u2715\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => editPlaceholder(job),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 584,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 29\n                  }, this)\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 25\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ayqRUHtv+SDAMEZyEB0Pr2ReWS8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","h","m","ap","getMonth","fmtDate","getFullYear","parseDueDate","test","parts","split","length","mo","parseInt","da","yr","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","jobs","prevEnd","map","job","idx","embroidery_start","base","qty","quantity","Math","ceil","runMs","stitchCount","end","eedDay","cutoff","_rawStart","_rawEnd","delivery","isLate","App","_s","columns","setColumns","queue","id","title","machine1","machine2","placeholders","setPlaceholders","raw","localStorage","getItem","JSON","parse","setItem","stringify","showModal","setShowModal","ph","setPh","company","inHand","dueType","syncStatus","setSyncStatus","fetchAll","data","get","real","forEach","o","toString","stitch_count","start_date","end_date","position","col","machineId","push","colId","pa","Infinity","pb","merged","phFor","filter","p","titleLines","queueJobs","m1","m2","catch","console","error","handleSync","setTimeout","submitPlaceholder","now","ps","c","j","removePlaceholder","editPlaceholder","onDragEnd","result","source","destination","draggableId","droppableId","index","moved","splice","startsWith","put","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","marginLeft","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","value","onChange","e","target","width","type","gap","provided","ref","innerRef","droppableProps","border","minHeight","margin","isHard","due_type","isSoft","isPh","bg","bdr","c1","c2","titleElem","lineHeight","l","i","design","draggableProps","dragHandleProps","userSelect","boxShadow","flex","paddingRight","flexDirection","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\n\n// —————————————————————————————\n// HELPER FUNCTIONS\n// —————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\n\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\n\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // push forward to a valid work start\n  while (!isWorkday(d) ||\n         d.getHours() < WORK_START_HR ||\n         (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  // if past work end, move to next day start\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay - current;\n    if (free <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  let h = dt.getHours();\n  const m = pad(dt.getMinutes());\n  const ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${pad(dt.getMonth()+1)}/${pad(dt.getDate())} ${pad(h)}:${m} ${ap}`;\n}\n\nfunction fmtDate(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  return `${pad(dt.getMonth()+1)}/${pad(dt.getDate())}/${dt.getFullYear()}`;\n}\n\nfunction parseDueDate(d) {\n  if (!d) return null;\n  // ISO YYYY-MM-DD\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) {\n    return new Date(d);\n  }\n  // MM/DD or MM/DD/YYYY\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = parseInt(parts[0],10);\n    const da = parseInt(parts[1],10);\n    const yr = parts.length === 3 ? parseInt(parts[2],10) : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) {\n      return new Date(yr, mo-1, da);\n    }\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\n\nfunction addWorkDays(start, days) {\n  let d = new Date(start);\n  let added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\nfunction subWorkDays(start, days) {\n  let d = new Date(start);\n  let removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  return `${String(dt.getMonth()+1).padStart(2,'0')}/${String(dt.getDate()).padStart(2,'0')}`;\n}\n\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING HELPER\n// —————————————————————————————\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      if (job.embroidery_start) {\n        // use stored start\n        start = clampToWorkHours(new Date(job.embroidery_start));\n      } else {\n        // record first-start\n        start = clampToWorkHours(new Date());\n        job.embroidery_start = new Date().toISOString();\n      }\n    } else {\n      // 30 minutes after previous end\n      const base = new Date(prevEnd.getTime() + 30 * 60000);\n      start = clampToWorkHours(base);\n    }\n\n    // calculate end\n    const qty = job.quantity % 6 === 0\n      ? job.quantity\n      : Math.ceil(job.quantity/6) * 6;\n    const runMs = (job.stitchCount / 30000) * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n\n    // EED cutoff = IHD -6 business days at closing time\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtDate(addWorkDays(end,6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',   jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',   jobs:[] },\n  });\n\n  const [placeholders, setPlaceholders] = useState(() => {\n    const raw = localStorage.getItem('placeholders');\n    return raw ? JSON.parse(raw) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null, company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // — FETCH & MERGE REAL + PLACEHOLDERS —\n  const fetchAll = async () => {\n    const { data } = await axios.get(`${API_ROOT}/orders`);\n\n    // group real jobs\n    const real = { queue:[], machine1:[], machine2:[] };\n    data.forEach(o => {\n      if (!o.title) return;\n      const job = {\n        ...o,\n        id: o.id.toString(),\n        stitchCount: o.stitch_count,\n        quantity:    o.quantity,\n        start:       o.start_date||'',\n        end:         o.end_date||'',\n        delivery:    o.delivery||'',\n        position:    o.position!=null ? o.position : null,\n        embroidery_start: o.embroidery_start||''\n      };\n      // only machine1/machine2 or queue\n      const col = (o.machineId==='machine1' || o.machineId==='machine2')\n        ? o.machineId\n        : 'queue';\n      real[col].push(job);\n    });\n\n    // sort machines by position\n    ['machine1','machine2'].forEach(colId => {\n      real[colId].sort((a,b) => {\n        const pa = a.position!=null ? a.position : Infinity;\n        const pb = b.position!=null ? b.position : Infinity;\n        return pa - pb;\n      });\n    });\n\n    // merge placeholders\n    const merged = {};\n    ['queue','machine1','machine2'].forEach(colId => {\n      const phFor = placeholders\n        .filter(p => p.machineId===colId)\n        .sort((a,b) => {\n          const pa = a.position!=null ? a.position : Infinity;\n          const pb = b.position!=null ? b.position : Infinity;\n          return pa - pb;\n        })\n        .map(p => ({\n          ...p,\n          titleLines: [\n            `${p.company} - ${p.quantity}`,\n            `${p.stitchCount} - ${p.dueType}`,\n            `EED: ${fmtMMDD(subWorkDays(parseDueDate(p.due_date),6))}`,\n            `IHD: ${fmtMMDD(p.due_date)}`\n          ]\n        }));\n      merged[colId] = [...phFor, ...real[colId]];\n    });\n\n    // sort queue by due date\n    const queueJobs = sortQueue(merged.queue);\n    // schedule machines in manual order\n    const m1 = scheduleMachineJobs(merged.machine1);\n    const m2 = scheduleMachineJobs(merged.machine2);\n\n    setColumns({\n      queue:    { id:'queue',    title:'Unscheduled', jobs: queueJobs },\n      machine1: { id:'machine1', title:'Machine 1',   jobs: m1        },\n      machine2: { id:'machine2', title:'Machine 2',   jobs: m2        },\n    });\n  };\n\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(()=>setSyncStatus(''), 2000);\n  };\n\n  // — PLACEHOLDER CRUD (instant update) —\n  const submitPlaceholder = () => {\n    const job = {\n      id:             ph.id || `ph-${Date.now()}`,\n      company:        ph.company,\n      quantity:       +ph.quantity || 1,\n      stitchCount:    +ph.stitchCount || 30000,\n      due_date:       ph.inHand,\n      dueType:        ph.dueType,\n      machineId:      'queue',\n      position:       null,\n      titleLines: [\n        `${ph.company} - ${ph.quantity}`,\n        `${ph.stitchCount} - ${ph.dueType}`,\n        `EED: ${fmtMMDD(subWorkDays(parseDueDate(ph.inHand),6))}`,\n        `IHD: ${fmtMMDD(ph.inHand)}`\n      ]\n    };\n\n    if (ph.id) {\n      // edit\n      setPlaceholders(ps => ps.map(p => p.id===ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue:    { ...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)    },\n        machine1: { ...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j) },\n        machine2: { ...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j) },\n      }));\n    } else {\n      // add\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: { ...c.queue, jobs: [job, ...c.queue.jobs] }\n      }));\n    }\n\n    setShowModal(false);\n    setPh({ id:null, company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date' });\n  };\n\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p=>p.id!==id));\n    setColumns(c => ({\n      ...c,\n      queue:    { ...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)    },\n      machine1: { ...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id) },\n      machine2: { ...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id) },\n    }));\n  };\n\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.dueType\n    });\n    setShowModal(true);\n  };\n\n  // — DRAG & DROP —\n  const onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (!destination) return;\n    if (source.droppableId===destination.droppableId && source.index===destination.index) return;\n\n    const c = {...columns};\n    const [moved] = c[source.droppableId].jobs.splice(source.index,1);\n    c[destination.droppableId].jobs.splice(destination.index,0,moved);\n\n    // clear stripe on unschedule\n    if (destination.droppableId==='queue') moved.isLate = false;\n\n    // update placement\n    moved.machineId = destination.droppableId==='queue' ? 'queue' : destination.droppableId;\n    moved.position  = destination.droppableId==='queue' ? null : destination.index;\n\n    // record embroidery_start if first on machine\n    if (moved.machineId!=='queue' && destination.index===0 && !moved.embroidery_start) {\n      moved.embroidery_start = new Date().toISOString();\n    }\n\n    // clear schedule if unscheduled\n    if (moved.machineId==='queue') {\n      delete moved.start;\n      delete moved.end;\n      delete moved.delivery;\n    }\n\n    // placeholder move\n    if (draggableId.startsWith('ph-')) {\n      setPlaceholders(ps => ps.map(p=>\n        p.id===draggableId\n          ? {...p, machineId:moved.machineId, position:moved.position}\n          : p\n      ));\n      setColumns({\n        queue:    {...c.queue,    jobs: sortQueue(c.queue.jobs)},\n        machine1: {...c.machine1, jobs: scheduleMachineJobs(c.machine1.jobs)},\n        machine2: {...c.machine2, jobs: scheduleMachineJobs(c.machine2.jobs)},\n      });\n      return;\n    }\n\n    // persist real job\n    axios.put(`${API_ROOT}/orders/${draggableId}`, {\n      machineId: moved.machineId==='queue'?null:moved.machineId,\n      start_date: moved.start||'',\n      end_date:   moved.end||'',\n      delivery:   moved.delivery||'',\n      position:   moved.position,\n      embroidery_start: moved.embroidery_start||''\n    }).catch(console.error);\n\n    setColumns({\n      queue:    {...c.queue,    jobs: sortQueue(c.queue.jobs)},\n      machine1: {...c.machine1, jobs: scheduleMachineJobs(c.machine1.jobs)},\n      machine2: {...c.machine2, jobs: scheduleMachineJobs(c.machine2.jobs)},\n    });\n  };\n\n  // — RENDER —\n  return (\n    <div style={{padding:16,fontFamily:'sans-serif',fontSize:14}}>\n      <button onClick={()=>setShowModal(true)} style={{marginRight:8}}>\n        + Add Placeholder\n      </button>\n      <button onClick={handleSync}>\n        Sync from Sheet\n        {syncStatus==='updated' && (\n          <span style={{color:'green',marginLeft:8}}>✓ Updated</span>\n        )}\n      </button>\n\n      {showModal && (\n        <div style={{\n          position:'fixed',top:0,left:0,right:0,bottom:0,\n          background:'rgba(0,0,0,0.3)',\n          display:'flex',alignItems:'center',justifyContent:'center',\n          zIndex:1000\n        }}>\n          <div style={{background:'#fff',padding:20,borderRadius:4,minWidth:300}}>\n            <h3 style={{marginTop:0,textAlign:'center'}}>Add/Edit Placeholder</h3>\n\n            <label>Company Name<br/>\n              <input\n                value={ph.company}\n                onChange={e=>setPh({...ph,company:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label><br/><br/>\n\n            <label>In Hand Date (IHD)<br/>\n              <input\n                type=\"date\"\n                value={ph.inHand}\n                onChange={e=>setPh({...ph,inHand:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label><br/><br/>\n\n            <label>Quantity<br/>\n              <input\n                type=\"number\"\n                value={ph.quantity}\n                onChange={e=>setPh({...ph,quantity:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label><br/><br/>\n\n            <label>Stitch Count<br/>\n              <input\n                type=\"number\"\n                value={ph.stitchCount}\n                onChange={e=>setPh({...ph,stitchCount:e.target.value})}\n                style={{width:'100%'}}\n              />\n            </label><br/><br/>\n\n            <label>Due Type<br/>\n              <select\n                value={ph.dueType}\n                onChange={e=>setPh({...ph,dueType:e.target.value})}\n                style={{width:'100%'}}\n              >\n                <option>Hard Date</option>\n                <option>Soft Date</option>\n              </select>\n            </label><br/><br/>\n\n            <div style={{textAlign:'right'}}>\n              <button onClick={()=>setShowModal(false)} style={{marginRight:8}}>Cancel</button>\n              <button onClick={submitPlaceholder}>Submit</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{display:'flex',gap:16,marginTop:16}}>\n          {['queue','machine1','machine2'].map(colId => {\n            const col = columns[colId];\n            return (\n              <Droppable key={colId} droppableId={colId}>\n                {provided => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      border:'1px solid #ccc',\n                      borderRadius:4,\n                      width:260,\n                      minHeight:400,\n                      padding:12,\n                      background:'#fafafa'\n                    }}\n                  >\n                    <h4 style={{textAlign:'center',margin:'8px 0'}}>{col.title}</h4>\n                    {col.jobs.map((job, idx) => {\n                      const isHard = job.due_type==='Hard Date';\n                      const isSoft = job.due_type==='Soft Date';\n                      const isPh   = job.id.startsWith('ph-');\n                      const isLate = job.isLate;\n\n                      let bg, bdr;\n                      if (isPh)       { bg=LIGHT_YELLOW;  bdr=`2px solid ${DARK_YELLOW}`; }\n                      else if (isSoft) { bg=LIGHT_GREY;    bdr=`2px solid ${DARK_GREY}`;   }\n                      else if (isHard) { bg=LIGHT_PURPLE;  bdr=`2px solid ${DARK_PURPLE}`; }\n                      else              { bg='#fff';        bdr='1px solid #ccc';          }\n\n                      if (isLate) {\n                        const c1 = isPh ? LIGHT_YELLOW : (isSoft ? LIGHT_GREY : LIGHT_PURPLE);\n                        const c2 = 'rgba(255,0,0,0.5)';\n                        bg = `repeating-linear-gradient(45deg, ${c1}, ${c1} 6px, ${c2} 6px, ${c2} 12px)`;\n                      }\n\n                      // multi-line title\n                      const titleElem = isPh\n                        ? <div style={{lineHeight:1.2}}>\n                            {job.titleLines.map((l,i) => <div key={i}>{l}</div>)}\n                          </div>\n                        : <div style={{lineHeight:1.2}}>\n                            <div>{`${job.id} - ${job.company}`}</div>\n                            <div>{`${job.design} - ${job.quantity}`}</div>\n                            <div>{`EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date),6))} - IHD: ${fmtMMDD(job.due_date)}`}</div>\n                            <div>{job.due_type}</div>\n                          </div>;\n\n                      return (\n                        <Draggable key={job.id} draggableId={job.id} index={idx}>\n                          {p => (\n                            <div\n                              ref={p.innerRef}\n                              {...p.draggableProps}\n                              {...p.dragHandleProps}\n                              style={{\n                                position:'relative',\n                                userSelect:'none',\n                                padding:8,\n                                margin:'0 0 8px 0',\n                                background:bg,\n                                border:bdr,\n                                borderRadius:4,\n                                boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                                ...p.draggableProps.style\n                              }}\n                            >\n                              <div style={{flex:1,paddingRight:6}}>\n                                {titleElem}\n                              </div>\n                              <div style={{\n                                display:'flex',\n                                flexDirection:'column',\n                                alignItems:'flex-end',\n                                gap:2,\n                                fontSize:12\n                              }}>\n                                {job.start    && <div style={{padding:'2px 4px',background:'#e0f7fa',borderRadius:10}}>{job.start}</div>}\n                                {job.end      && <div style={{padding:'2px 4px',background:'#ffe0b2',borderRadius:10}}>{job.end}</div>}\n                                {job.delivery && <div style={{padding:'2px 4px',background:'#c8e6c9',borderRadius:10}}>{job.delivery}</div>}\n                              </div>\n                              {isPh && (\n                                <div style={{display:'flex',flexDirection:'column',gap:4,marginLeft:8}}>\n                                  <button onClick={()=>removePlaceholder(job.id)}>✕</button>\n                                  <button onClick={()=>editPlaceholder(job)}>Edit</button>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            );\n          })}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}