{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({});\n  useEffect(() => {\n    const fetchOrders = () => axios.get('http://localhost:5000/api/orders').then(res => {\n      const data = res.data;\n      const cols = {\n        queue: {\n          id: 'queue',\n          title: 'Unscheduled',\n          jobs: []\n        },\n        machine1: {\n          id: 'machine1',\n          title: 'Machine 1',\n          jobs: []\n        },\n        machine2: {\n          id: 'machine2',\n          title: 'Machine 2',\n          jobs: []\n        }\n      };\n      data.forEach(order => {\n        const colId = order.machineId || 'queue';\n        if (!cols[colId]) cols[colId] = {\n          id: colId,\n          title: colId,\n          jobs: []\n        };\n        cols[colId].jobs.push({\n          id: order.id.toString(),\n          title: order.title,\n          start: order.start_date,\n          end: order.end_date\n        });\n      });\n      setColumns(cols);\n    });\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination || source.droppableId === destination.droppableId && source.index === destination.index) return;\n    const sourceCol = columns[source.droppableId];\n    const destCol = columns[destination.droppableId];\n    const sourceJobs = Array.from(sourceCol.jobs);\n    const [moved] = sourceJobs.splice(source.index, 1);\n    const destJobs = Array.from(destCol.jobs);\n    destJobs.splice(destination.index, 0, moved);\n    const updated = {\n      ...columns,\n      [sourceCol.id]: {\n        ...sourceCol,\n        jobs: sourceJobs\n      },\n      [destCol.id]: {\n        ...destCol,\n        jobs: destJobs\n      }\n    };\n    setColumns(updated);\n\n    // Persist just the machine assignment;\n    // start/end already come from your sheet\n    axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n      machineId: destCol.id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 16,\n        padding: 16\n      },\n      children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: col.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          style: {\n            border: '1px solid #ccc',\n            borderRadius: 4,\n            width: 220,\n            minHeight: 400,\n            padding: 10,\n            background: '#fafafa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: col.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), col.jobs.map((job, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: job.id,\n            index: idx,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                userSelect: 'none',\n                padding: '8px',\n                margin: '0 0 8px 0',\n                background: '#fff',\n                borderRadius: 4,\n                boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                ...provided.draggableProps.style\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"#\", job.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this), \" \", job.title, /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.85em',\n                  color: '#555'\n                },\n                children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Start: \", job.start]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"End: \", job.end]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this)\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, col.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9hsVabetJn4SdlqWOd41pD0I99g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","App","_s","columns","setColumns","fetchOrders","get","then","res","data","cols","queue","id","title","jobs","machine1","machine2","forEach","order","colId","machineId","push","toString","start","start_date","end","end_date","interval","setInterval","clearInterval","onDragEnd","result","source","destination","draggableId","droppableId","index","sourceCol","destCol","sourceJobs","Array","from","moved","splice","destJobs","updated","put","children","style","display","gap","padding","Object","values","map","col","provided","droppableProps","ref","innerRef","border","borderRadius","width","minHeight","background","fileName","_jsxFileName","lineNumber","columnNumber","job","idx","draggableProps","dragHandleProps","userSelect","margin","boxShadow","fontSize","color","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\nexport default function App() {\n  const [columns, setColumns] = useState({});\n\n  useEffect(() => {\n    const fetchOrders = () =>\n      axios.get('http://localhost:5000/api/orders').then(res => {\n        const data = res.data;\n        const cols = {\n          queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n          machine1: { id: 'machine1', title: 'Machine 1',    jobs: [] },\n          machine2: { id: 'machine2', title: 'Machine 2',    jobs: [] }\n        };\n        data.forEach(order => {\n          const colId = order.machineId || 'queue';\n          if (!cols[colId]) cols[colId] = { id: colId, title: colId, jobs: [] };\n          cols[colId].jobs.push({\n            id:      order.id.toString(),\n            title:   order.title,\n            start:   order.start_date,\n            end:     order.end_date\n          });\n        });\n        setColumns(cols);\n      });\n\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (\n      !destination ||\n      (source.droppableId === destination.droppableId && source.index === destination.index)\n    ) return;\n\n    const sourceCol = columns[source.droppableId];\n    const destCol   = columns[destination.droppableId];\n    const sourceJobs = Array.from(sourceCol.jobs);\n    const [moved]    = sourceJobs.splice(source.index, 1);\n    const destJobs   = Array.from(destCol.jobs);\n    destJobs.splice(destination.index, 0, moved);\n\n    const updated = {\n      ...columns,\n      [sourceCol.id]: { ...sourceCol, jobs: sourceJobs },\n      [destCol.id]:   { ...destCol,   jobs: destJobs }\n    };\n    setColumns(updated);\n\n    // Persist just the machine assignment;\n    // start/end already come from your sheet\n    axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n      machineId: destCol.id\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, padding: 16 }}>\n        {Object.values(columns).map(col => (\n          <Droppable droppableId={col.id} key={col.id}>\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{\n                  border: '1px solid #ccc',\n                  borderRadius: 4,\n                  width: 220,\n                  minHeight: 400,\n                  padding: 10,\n                  background: '#fafafa'\n                }}\n              >\n                <h4>{col.title}</h4>\n                {col.jobs.map((job, idx) => (\n                  <Draggable key={job.id} draggableId={job.id} index={idx}>\n                    {provided => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          userSelect: 'none',\n                          padding: '8px',\n                          margin: '0 0 8px 0',\n                          background: '#fff',\n                          borderRadius: 4,\n                          boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                          ...provided.draggableProps.style\n                        }}\n                      >\n                        <strong>#{job.id}</strong> {job.title}\n                        <div style={{ fontSize: '0.85em', color: '#555' }}>\n                          {job.start && <div>Start: {job.start}</div>}\n                          {job.end   && <div>End: {job.end}</div>}\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGA,CAAA,KAClBP,KAAK,CAACQ,GAAG,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;MACxD,MAAMC,IAAI,GAAGD,GAAG,CAACC,IAAI;MACrB,MAAMC,IAAI,GAAG;QACXC,KAAK,EAAK;UAAEC,EAAE,EAAE,OAAO;UAAKC,KAAK,EAAE,aAAa;UAAEC,IAAI,EAAE;QAAG,CAAC;QAC5DC,QAAQ,EAAE;UAAEH,EAAE,EAAE,UAAU;UAAEC,KAAK,EAAE,WAAW;UAAKC,IAAI,EAAE;QAAG,CAAC;QAC7DE,QAAQ,EAAE;UAAEJ,EAAE,EAAE,UAAU;UAAEC,KAAK,EAAE,WAAW;UAAKC,IAAI,EAAE;QAAG;MAC9D,CAAC;MACDL,IAAI,CAACQ,OAAO,CAACC,KAAK,IAAI;QACpB,MAAMC,KAAK,GAAGD,KAAK,CAACE,SAAS,IAAI,OAAO;QACxC,IAAI,CAACV,IAAI,CAACS,KAAK,CAAC,EAAET,IAAI,CAACS,KAAK,CAAC,GAAG;UAAEP,EAAE,EAAEO,KAAK;UAAEN,KAAK,EAAEM,KAAK;UAAEL,IAAI,EAAE;QAAG,CAAC;QACrEJ,IAAI,CAACS,KAAK,CAAC,CAACL,IAAI,CAACO,IAAI,CAAC;UACpBT,EAAE,EAAOM,KAAK,CAACN,EAAE,CAACU,QAAQ,CAAC,CAAC;UAC5BT,KAAK,EAAIK,KAAK,CAACL,KAAK;UACpBU,KAAK,EAAIL,KAAK,CAACM,UAAU;UACzBC,GAAG,EAAMP,KAAK,CAACQ;QACjB,CAAC,CAAC;MACJ,CAAC,CAAC;MACFtB,UAAU,CAACM,IAAI,CAAC;IAClB,CAAC,CAAC;IAEJL,WAAW,CAAC,CAAC;IACb,MAAMsB,QAAQ,GAAGC,WAAW,CAACvB,WAAW,EAAE,KAAK,CAAC;IAChD,OAAO,MAAMwB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAGC,MAAM,IAAI;IAC1B,MAAM;MAAEC,MAAM;MAAEC,WAAW;MAAEC;IAAY,CAAC,GAAGH,MAAM;IACnD,IACE,CAACE,WAAW,IACXD,MAAM,CAACG,WAAW,KAAKF,WAAW,CAACE,WAAW,IAAIH,MAAM,CAACI,KAAK,KAAKH,WAAW,CAACG,KAAM,EACtF;IAEF,MAAMC,SAAS,GAAGlC,OAAO,CAAC6B,MAAM,CAACG,WAAW,CAAC;IAC7C,MAAMG,OAAO,GAAKnC,OAAO,CAAC8B,WAAW,CAACE,WAAW,CAAC;IAClD,MAAMI,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACJ,SAAS,CAACvB,IAAI,CAAC;IAC7C,MAAM,CAAC4B,KAAK,CAAC,GAAMH,UAAU,CAACI,MAAM,CAACX,MAAM,CAACI,KAAK,EAAE,CAAC,CAAC;IACrD,MAAMQ,QAAQ,GAAKJ,KAAK,CAACC,IAAI,CAACH,OAAO,CAACxB,IAAI,CAAC;IAC3C8B,QAAQ,CAACD,MAAM,CAACV,WAAW,CAACG,KAAK,EAAE,CAAC,EAAEM,KAAK,CAAC;IAE5C,MAAMG,OAAO,GAAG;MACd,GAAG1C,OAAO;MACV,CAACkC,SAAS,CAACzB,EAAE,GAAG;QAAE,GAAGyB,SAAS;QAAEvB,IAAI,EAAEyB;MAAW,CAAC;MAClD,CAACD,OAAO,CAAC1B,EAAE,GAAK;QAAE,GAAG0B,OAAO;QAAIxB,IAAI,EAAE8B;MAAS;IACjD,CAAC;IACDxC,UAAU,CAACyC,OAAO,CAAC;;IAEnB;IACA;IACA/C,KAAK,CAACgD,GAAG,CAAC,oCAAoCZ,WAAW,EAAE,EAAE;MAC3Dd,SAAS,EAAEkB,OAAO,CAAC1B;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEZ,OAAA,CAACL,eAAe;IAACmC,SAAS,EAAEA,SAAU;IAAAiB,QAAA,eACpC/C,OAAA;MAAKgD,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAJ,QAAA,EACnDK,MAAM,CAACC,MAAM,CAAClD,OAAO,CAAC,CAACmD,GAAG,CAACC,GAAG,iBAC7BvD,OAAA,CAACJ,SAAS;QAACuC,WAAW,EAAEoB,GAAG,CAAC3C,EAAG;QAAAmC,QAAA,EAC5BS,QAAQ,iBACPxD,OAAA;UAAA,GACMwD,QAAQ,CAACC,cAAc;UAC3BC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UACvBX,KAAK,EAAE;YACLY,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE,CAAC;YACfC,KAAK,EAAE,GAAG;YACVC,SAAS,EAAE,GAAG;YACdZ,OAAO,EAAE,EAAE;YACXa,UAAU,EAAE;UACd,CAAE;UAAAjB,QAAA,gBAEF/C,OAAA;YAAA+C,QAAA,EAAKQ,GAAG,CAAC1C;UAAK;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACnBb,GAAG,CAACzC,IAAI,CAACwC,GAAG,CAAC,CAACe,GAAG,EAAEC,GAAG,kBACrBtE,OAAA,CAACH,SAAS;YAAcqC,WAAW,EAAEmC,GAAG,CAACzD,EAAG;YAACwB,KAAK,EAAEkC,GAAI;YAAAvB,QAAA,EACrDS,QAAQ,iBACPxD,OAAA;cACE0D,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACe,cAAc;cAAA,GACvBf,QAAQ,CAACgB,eAAe;cAC5BxB,KAAK,EAAE;gBACLyB,UAAU,EAAE,MAAM;gBAClBtB,OAAO,EAAE,KAAK;gBACduB,MAAM,EAAE,WAAW;gBACnBV,UAAU,EAAE,MAAM;gBAClBH,YAAY,EAAE,CAAC;gBACfc,SAAS,EAAE,2BAA2B;gBACtC,GAAGnB,QAAQ,CAACe,cAAc,CAACvB;cAC7B,CAAE;cAAAD,QAAA,gBAEF/C,OAAA;gBAAA+C,QAAA,GAAQ,GAAC,EAACsB,GAAG,CAACzD,EAAE;cAAA;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,KAAC,EAACC,GAAG,CAACxD,KAAK,eACrCb,OAAA;gBAAKgD,KAAK,EAAE;kBAAE4B,QAAQ,EAAE,QAAQ;kBAAEC,KAAK,EAAE;gBAAO,CAAE;gBAAA9B,QAAA,GAC/CsB,GAAG,CAAC9C,KAAK,iBAAIvB,OAAA;kBAAA+C,QAAA,GAAK,SAAO,EAACsB,GAAG,CAAC9C,KAAK;gBAAA;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAC1CC,GAAG,CAAC5C,GAAG,iBAAMzB,OAAA;kBAAA+C,QAAA,GAAK,OAAK,EAACsB,GAAG,CAAC5C,GAAG;gBAAA;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACN,GAtBaC,GAAG,CAACzD,EAAE;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuBX,CACZ,CAAC,EACDZ,QAAQ,CAACsB,WAAW;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN,GA3CkCb,GAAG,CAAC3C,EAAE;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4ChC,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB;AAAClE,EAAA,CA/GuBD,GAAG;AAAA8E,EAAA,GAAH9E,GAAG;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}