{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` + ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders').then(res => setColumns(prev => {\n      // initial load\n      const isEmpty = Object.values(prev).every(col => col.jobs.length === 0);\n      if (isEmpty) {\n        const cols = {\n          queue: {\n            id: 'queue',\n            title: 'Unscheduled',\n            jobs: []\n          },\n          machine1: {\n            id: 'machine1',\n            title: 'Machine 1',\n            jobs: []\n          },\n          machine2: {\n            id: 'machine2',\n            title: 'Machine 2',\n            jobs: []\n          }\n        };\n        res.data.forEach(o => {\n          const col = cols[o.machineId] || cols.queue;\n          col.jobs.push({\n            id: o.id.toString(),\n            title: o.title,\n            start: o.start_date || '',\n            end: o.end_date || '',\n            stitchCount: o.stitch_count || 30000,\n            quantity: o.quantity || 1,\n            due_date: o.due_date || ''\n          });\n        });\n        cols.queue.jobs.sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n        ['machine1', 'machine2'].forEach(id => cols[id].jobs.sort((a, b) => new Date(a.start) - new Date(b.start)));\n        return cols;\n      }\n      // merge updates\n      const apiMap = Object.fromEntries(res.data.map(o => [o.id.toString(), o]));\n      const cols = {\n        ...prev\n      };\n      // unscheduled\n      cols.queue.jobs = prev.queue.jobs.map(job => {\n        var _o$stitch_count, _o$quantity, _o$due_date;\n        const o = apiMap[job.id];\n        if (!o) return job;\n        return {\n          ...job,\n          title: o.title,\n          stitchCount: (_o$stitch_count = o.stitch_count) !== null && _o$stitch_count !== void 0 ? _o$stitch_count : job.stitchCount,\n          quantity: (_o$quantity = o.quantity) !== null && _o$quantity !== void 0 ? _o$quantity : job.quantity,\n          due_date: (_o$due_date = o.due_date) !== null && _o$due_date !== void 0 ? _o$due_date : job.due_date\n        };\n      }).sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n      // machines\n      ['machine1', 'machine2'].forEach(id => {\n        cols[id].jobs = prev[id].jobs.map(job => {\n          var _o$stitch_count2, _o$quantity2, _o$due_date2;\n          const o = apiMap[job.id];\n          if (!o) return job;\n          return {\n            ...job,\n            title: o.title,\n            stitchCount: (_o$stitch_count2 = o.stitch_count) !== null && _o$stitch_count2 !== void 0 ? _o$stitch_count2 : job.stitchCount,\n            quantity: (_o$quantity2 = o.quantity) !== null && _o$quantity2 !== void 0 ? _o$quantity2 : job.quantity,\n            due_date: (_o$due_date2 = o.due_date) !== null && _o$due_date2 !== void 0 ? _o$due_date2 : job.due_date\n          };\n        });\n      });\n      return cols;\n    })).catch(console.error);\n  }, []);\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const from = cols[source.droppableId].jobs;\n      const [job] = from.splice(source.index, 1);\n      const to = cols[destination.droppableId].jobs;\n      to.splice(destination.index, 0, job);\n      if (destination.droppableId === 'queue') {\n        job.start = '';\n        job.end = '';\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          machineId: null,\n          start_date: '',\n          end_date: ''\n        }).catch(console.error);\n      } else {\n        let cursor = new Date();\n        cursor.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        cols[destination.droppableId].jobs.forEach(j => {\n          cursor = clampToWorkHours(cursor);\n          const runMs = j.stitchCount / 30000 * (j.quantity / 6) * 3600000;\n          const end = addWorkTime(cursor, runMs);\n          j.start = fmtDT(cursor);\n          j.end = fmtDT(end);\n          axios.put(`http://localhost:5000/api/orders/${j.id}`, {\n            machineId: destination.droppableId,\n            start_date: j.start,\n            end_date: j.end\n          }).catch(console.error);\n          cursor = new Date(end.getTime() + 30 * 60000);\n        });\n      }\n      cols[source.droppableId].jobs = from;\n      cols[destination.droppableId].jobs = to;\n      setColumns(cols);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), col.jobs.map((job, index) => {\n              // parse due date\n              let due = null;\n              if (job.due_date) {\n                const parts = job.due_date.split('/').map(p => parseInt(p, 10));\n                if (parts.length === 2 && job.end) {\n                  const e = new Date(job.end);\n                  due = new Date(e.getFullYear(), parts[0] - 1, parts[1]);\n                } else {\n                  due = new Date(job.due_date);\n                }\n              }\n              const endDate = job.end ? new Date(job.end) : null;\n              const isLate = due && endDate && endDate > due;\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: index,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    userSelect: 'none',\n                    padding: '10px',\n                    margin: '0 0 10px 0',\n                    background: isLate ? '#ffe6e6' : '#fff',\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    ...p.draggableProps.style\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 8\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 4\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#e0f7fa',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 45\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#ffe0b2',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7CPhlNoqJTq3aT+LiofZi3rRp3E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","available","getTime","fmtDT","pad","n","String","padStart","getFullYear","getMonth","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","fetchOrders","get","then","res","prev","isEmpty","Object","values","every","col","length","cols","data","forEach","o","machineId","push","toString","start","start_date","end","end_date","stitchCount","stitch_count","quantity","due_date","sort","a","b","apiMap","fromEntries","map","job","_o$stitch_count","_o$quantity","_o$due_date","_o$stitch_count2","_o$quantity2","_o$due_date2","catch","console","error","iv","setInterval","clearInterval","onDragEnd","result","source","destination","reason","droppableId","index","setTimeout","JSON","parse","stringify","from","splice","to","put","cursor","j","runMs","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginTop","prov","ref","innerRef","droppableProps","border","borderRadius","width","minHeight","background","due","parts","split","p","parseInt","e","endDate","isLate","draggableId","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","flexDirection","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HOUR || (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` +\n         ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\n\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n    machine1: { id: 'machine1', title: 'Machine 1',    jobs: [] },\n    machine2: { id: 'machine2', title: 'Machine 2',    jobs: [] },\n  });\n\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders')\n         .then(res => setColumns(prev => {\n      // initial load\n      const isEmpty = Object.values(prev).every(col => col.jobs.length === 0);\n      if (isEmpty) {\n        const cols = {\n          queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n          machine1: { id: 'machine1', title: 'Machine 1',    jobs: [] },\n          machine2: { id: 'machine2', title: 'Machine 2',    jobs: [] },\n        };\n        res.data.forEach(o => {\n          const col = cols[o.machineId] || cols.queue;\n          col.jobs.push({\n            id: o.id.toString(),\n            title: o.title,\n            start: o.start_date || '',\n            end:   o.end_date   || '',\n            stitchCount: o.stitch_count || 30000,\n            quantity:    o.quantity      || 1,\n            due_date:    o.due_date      || ''\n          });\n        });\n        cols.queue.jobs.sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n        ['machine1','machine2'].forEach(id =>\n          cols[id].jobs.sort((a, b) => new Date(a.start) - new Date(b.start))\n        );\n        return cols;\n      }\n      // merge updates\n      const apiMap = Object.fromEntries(res.data.map(o => [o.id.toString(), o]));\n      const cols = { ...prev };\n      // unscheduled\n      cols.queue.jobs = prev.queue.jobs\n        .map(job => {\n          const o = apiMap[job.id];\n          if (!o) return job;\n          return {\n            ...job,\n            title: o.title,\n            stitchCount: o.stitch_count  ?? job.stitchCount,\n            quantity:    o.quantity      ?? job.quantity,\n            due_date:    o.due_date      ?? job.due_date\n          };\n        })\n        .sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n      // machines\n      ['machine1','machine2'].forEach(id => {\n        cols[id].jobs = prev[id].jobs.map(job => {\n          const o = apiMap[job.id];\n          if (!o) return job;\n          return {\n            ...job,\n            title: o.title,\n            stitchCount: o.stitch_count  ?? job.stitchCount,\n            quantity:    o.quantity      ?? job.quantity,\n            due_date:    o.due_date      ?? job.due_date\n          };\n        });\n      });\n      return cols;\n    })).catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n\n  const onDragEnd = result => {\n    const { source, destination, reason } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const from = cols[source.droppableId].jobs;\n      const [job] = from.splice(source.index, 1);\n      const to = cols[destination.droppableId].jobs;\n      to.splice(destination.index, 0, job);\n      if (destination.droppableId === 'queue') {\n        job.start = '';\n        job.end   = '';\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, { machineId: null, start_date: '', end_date: '' }).catch(console.error);\n      } else {\n        let cursor = new Date();\n        cursor.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        cols[destination.droppableId].jobs.forEach(j => {\n          cursor = clampToWorkHours(cursor);\n          const runMs = (j.stitchCount / 30000) * (j.quantity / 6) * 3600000;\n          const end = addWorkTime(cursor, runMs);\n          j.start = fmtDT(cursor);\n          j.end   = fmtDT(end);\n          axios.put(`http://localhost:5000/api/orders/${j.id}`, { machineId: destination.droppableId, start_date: j.start, end_date: j.end }).catch(console.error);\n          cursor = new Date(end.getTime() + 30 * 60000);\n        });\n      }\n      cols[source.droppableId].jobs = from;\n      cols[destination.droppableId].jobs = to;\n      setColumns(cols);\n    }, 0);\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <button onClick={fetchOrders}>Refresh Data</button>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n          {Object.values(columns).map(col => (\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov => (\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border: '1px solid #ccc',\n                    borderRadius: 4,\n                    width: 260,\n                    minHeight: 400,\n                    padding: 12,\n                    background: '#fafafa'\n                  }}\n                >\n                  <h4>{col.title}</h4>\n                  {col.jobs.map((job, index) => {\n                    // parse due date\n                    let due = null;\n                    if (job.due_date) {\n                      const parts = job.due_date.split('/').map(p => parseInt(p, 10));\n                      if (parts.length === 2 && job.end) {\n                        const e = new Date(job.end);\n                        due = new Date(e.getFullYear(), parts[0] - 1, parts[1]);\n                      } else {\n                        due = new Date(job.due_date);\n                      }\n                    }\n                    const endDate = job.end ? new Date(job.end) : null;\n                    const isLate = due && endDate && endDate > due;\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={index}>\n                        {p => (\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              userSelect: 'none',\n                              padding: '10px',\n                              margin: '0 0 10px 0',\n                              background: isLate ? '#ffe6e6' : '#fff',\n                              borderRadius: 4,\n                              boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                              alignItems: 'center',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            <div style={{ flex: 1, paddingRight: 8 }}>{job.title}</div>\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end', gap: 4 }}>\n                              {job.start && <div style={{ padding: '2px 6px', background: '#e0f7fa', borderRadius: 12, fontSize: '0.75em' }}>{job.start}</div>}\n                              {job.end   && <div style={{ padding: '2px 6px', background: '#ffe0b2', borderRadius: 12, fontSize: '0.75em' }}>{job.end}</div>}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}