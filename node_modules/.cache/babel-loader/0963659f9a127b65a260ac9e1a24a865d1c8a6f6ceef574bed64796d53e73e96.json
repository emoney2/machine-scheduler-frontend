{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25']; // add YYYY-MM-DD strings\n\n// Helpers\nfunction isHoliday(dt) {\n  if (!(dt instanceof Date) || isNaN(dt)) return false;\n  return HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  if (!(dt instanceof Date) || isNaN(dt)) return false;\n  return !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // bump to next start if before hours or non-workday\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // roll to next start if past work end\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n// Advance a datetime by given milliseconds, skipping non-business hours\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      // move to next business day start\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` + ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({});\n\n  // Fetch orders and poll every minute\n  useEffect(() => {\n    const fetchOrders = () => {\n      axios.get('http://localhost:5000/api/orders').then(res => {\n        const cols = {\n          queue: {\n            id: 'queue',\n            title: 'Unscheduled',\n            jobs: []\n          },\n          machine1: {\n            id: 'machine1',\n            title: 'Machine 1',\n            jobs: []\n          },\n          machine2: {\n            id: 'machine2',\n            title: 'Machine 2',\n            jobs: []\n          }\n        };\n        res.data.forEach(o => {\n          const col = cols[o.machineId] || cols.queue;\n          col.jobs.push({\n            id: o.id.toString(),\n            title: o.title,\n            start: o.start_date || '',\n            end: o.end_date || '',\n            stitchCount: o.stitch_count || 30000,\n            quantity: o.quantity || 1\n          });\n        });\n        // sort by start time\n        Object.values(cols).forEach(c => c.jobs.sort((a, b) => a.start && b.start ? new Date(a.start) - new Date(b.start) : 0));\n        setColumns(cols);\n      }).catch(err => console.error('Failed to load orders:', err));\n    };\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Drag-and-drop handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n    // Defer updates to let DnD finish its animation\n    setTimeout(() => {\n      const cols = {\n        ...columns\n      };\n      const fromCol = cols[source.droppableId];\n      const toCol = cols[destination.droppableId];\n      const fromJobs = Array.from(fromCol.jobs);\n      const [dragged] = fromJobs.splice(source.index, 1);\n      const toJobs = Array.from(toCol.jobs);\n      toJobs.splice(destination.index, 0, dragged);\n\n      // Recalculate start/end for every job at or after insertion\n      let prevEnd = null;\n      for (let i = destination.index; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        // determine start\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          prevEnd = toJobs[i - 1].end ? new Date(toJobs[i - 1].end) : prevEnd;\n          start = prevEnd ? new Date(prevEnd.getTime() + 30 * 60000) : new Date();\n        }\n        start = clampToWorkHours(start);\n        // compute runtime\n        const runMs = job.stitchCount / 30000 * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n        job.start = fmtDT(start);\n        job.end = fmtDT(end);\n        prevEnd = end;\n      }\n\n      // push updated lists back\n      cols[source.droppableId] = {\n        ...fromCol,\n        jobs: fromJobs\n      };\n      cols[destination.droppableId] = {\n        ...toCol,\n        jobs: toJobs\n      };\n      setColumns(cols);\n\n      // persist dragged job\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId: destination.droppableId,\n        start_date: dragged.start,\n        end_date: dragged.end\n      }).catch(console.error);\n      // persist all cascaded jobs\n      for (let i = destination.index + 1; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          start_date: job.start,\n          end_date: job.end\n        }).catch(console.error);\n      }\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 16,\n        padding: 16\n      },\n      children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: col.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            border: '1px solid #ccc',\n            borderRadius: 4,\n            width: 260,\n            minHeight: 400,\n            padding: 12,\n            background: '#fafafa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: col.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), col.jobs.map((job, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: job.id,\n            index: idx,\n            children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: p.innerRef,\n              ...p.draggableProps,\n              ...p.dragHandleProps,\n              style: {\n                userSelect: 'none',\n                padding: '10px',\n                margin: '0 0 10px 0',\n                background: '#fff',\n                borderRadius: 4,\n                boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                ...p.draggableProps.style\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1,\n                  paddingRight: 8\n                },\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'flex-end',\n                  gap: 4\n                },\n                children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '2px 6px',\n                    background: '#e0f7fa',\n                    borderRadius: 12,\n                    fontSize: '0.75em'\n                  },\n                  children: job.start\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 29\n                }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '2px 6px',\n                    background: '#ffe0b2',\n                    borderRadius: 12,\n                    fontSize: '0.75em'\n                  },\n                  children: job.end\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 23\n            }, this)\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)\n      }, col.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9hsVabetJn4SdlqWOd41pD0I99g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","available","getTime","fmtDT","pad","n","String","padStart","getFullYear","getMonth","App","_s","columns","setColumns","fetchOrders","get","then","res","cols","queue","id","title","jobs","machine1","machine2","data","forEach","o","col","machineId","push","toString","start","start_date","end","end_date","stitchCount","stitch_count","quantity","Object","values","c","sort","a","b","catch","err","console","error","interval","setInterval","clearInterval","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","fromCol","toCol","fromJobs","Array","from","dragged","splice","toJobs","prevEnd","i","length","job","runMs","put","children","style","display","gap","padding","map","provided","ref","innerRef","droppableProps","border","borderRadius","width","minHeight","background","fileName","_jsxFileName","lineNumber","columnNumber","idx","p","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","flexDirection","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25']; // add YYYY-MM-DD strings\n\n// Helpers\nfunction isHoliday(dt) {\n  if (!(dt instanceof Date) || isNaN(dt)) return false;\n  return HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  if (!(dt instanceof Date) || isNaN(dt)) return false;\n  return !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // bump to next start if before hours or non-workday\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HOUR ||\n    (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // roll to next start if past work end\n  if (\n    d.getHours() > WORK_END_HOUR ||\n    (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n// Advance a datetime by given milliseconds, skipping non-business hours\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      // move to next business day start\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return (\n    `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` +\n    ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`\n  );\n}\n\nexport default function App() {\n  const [columns, setColumns] = useState({});\n\n  // Fetch orders and poll every minute\n  useEffect(() => {\n    const fetchOrders = () => {\n      axios\n        .get('http://localhost:5000/api/orders')\n        .then(res => {\n          const cols = {\n            queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n            machine1: { id: 'machine1', title: 'Machine 1',    jobs: [] },\n            machine2: { id: 'machine2', title: 'Machine 2',    jobs: [] }\n          };\n          res.data.forEach(o => {\n            const col = cols[o.machineId] || cols.queue;\n            col.jobs.push({\n              id:           o.id.toString(),\n              title:        o.title,\n              start:        o.start_date || '',\n              end:          o.end_date   || '',\n              stitchCount:  o.stitch_count || 30000,\n              quantity:     o.quantity      || 1\n            });\n          });\n          // sort by start time\n          Object.values(cols).forEach(c =>\n            c.jobs.sort((a, b) =>\n              a.start && b.start\n                ? new Date(a.start) - new Date(b.start)\n                : 0\n            )\n          );\n          setColumns(cols);\n        })\n        .catch(err => console.error('Failed to load orders:', err));\n    };\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Drag-and-drop handler\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) return;\n\n    // Defer updates to let DnD finish its animation\n    setTimeout(() => {\n      const cols = { ...columns };\n      const fromCol = cols[source.droppableId];\n      const toCol   = cols[destination.droppableId];\n      const fromJobs = Array.from(fromCol.jobs);\n      const [dragged] = fromJobs.splice(source.index, 1);\n      const toJobs   = Array.from(toCol.jobs);\n      toJobs.splice(destination.index, 0, dragged);\n\n      // Recalculate start/end for every job at or after insertion\n      let prevEnd = null;\n      for (let i = destination.index; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        // determine start\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          prevEnd = toJobs[i - 1].end ? new Date(toJobs[i - 1].end) : prevEnd;\n          start = prevEnd\n            ? new Date(prevEnd.getTime() + 30 * 60000)\n            : new Date();\n        }\n        start = clampToWorkHours(start);\n        // compute runtime\n        const runMs = (job.stitchCount / 30000) * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n\n        job.start = fmtDT(start);\n        job.end   = fmtDT(end);\n        prevEnd = end;\n      }\n\n      // push updated lists back\n      cols[source.droppableId]      = { ...fromCol, jobs: fromJobs };\n      cols[destination.droppableId] = { ...toCol,   jobs: toJobs };\n      setColumns(cols);\n\n      // persist dragged job\n      axios\n        .put(`http://localhost:5000/api/orders/${draggableId}`, {\n          machineId:  destination.droppableId,\n          start_date: dragged.start,\n          end_date:   dragged.end\n        })\n        .catch(console.error);\n      // persist all cascaded jobs\n      for (let i = destination.index + 1; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        axios\n          .put(`http://localhost:5000/api/orders/${job.id}`, {\n            start_date: job.start,\n            end_date:   job.end\n          })\n          .catch(console.error);\n      }\n    }, 0);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, padding: 16 }}>\n        {Object.values(columns).map(col => (\n          <Droppable droppableId={col.id} key={col.id}>\n            {provided => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={{\n                  border: '1px solid #ccc',\n                  borderRadius: 4,\n                  width: 260,\n                  minHeight: 400,\n                  padding: 12,\n                  background: '#fafafa'\n                }}\n              >\n                <h4>{col.title}</h4>\n                {col.jobs.map((job, idx) => (\n                  <Draggable key={job.id} draggableId={job.id} index={idx}>\n                    {p => (\n                      <div\n                        ref={p.innerRef}\n                        {...p.draggableProps}\n                        {...p.dragHandleProps}\n                        style={{\n                          userSelect: 'none',\n                          padding: '10px',\n                          margin: '0 0 10px 0',\n                          background: '#fff',\n                          borderRadius: 4,\n                          boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          ...p.draggableProps.style\n                        }}\n                      >\n                        <div style={{ flex: 1, paddingRight: 8 }}>\n                          {job.title}\n                        </div>\n                        <div style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'flex-end',\n                          gap: 4\n                        }}>\n                          {job.start && (\n                            <div style={{\n                              padding: '2px 6px',\n                              background: '#e0f7fa',\n                              borderRadius: 12,\n                              fontSize: '0.75em'\n                            }}>\n                              {job.start}\n                            </div>\n                          )}\n                          {job.end && (\n                            <div style={{\n                              padding: '2px 6px',\n                              background: '#ffe0b2',\n                              borderRadius: 12,\n                              fontSize: '0.75em'\n                            }}>\n                              {job.end}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}