{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// ————————————————————————————————————————————————————\n// Config\n// ————————————————————————————————————————————————————\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// ————————————————————————————————————————————————————\n// Helpers\n// ————————————————————————————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const eod = new Date(current);\n    eod.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const freeMs = eod - current;\n    if (freeMs <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= freeMs) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= freeMs;\n      current = new Date(eod);\n    }\n  }\n  return current;\n}\n// Format as \"MM/DD hh:mm AM/PM\"\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const mo = pad(dt.getMonth() + 1),\n    da = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length === 2) {\n    const [mo, da] = parts.map(x => parseInt(x, 10));\n    if (!isNaN(mo) && !isNaN(da)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), mo - 1, da, 0, 0, 0, 0);\n      return dt;\n    }\n  }\n  const dt = new Date(due);\n  return isNaN(dt) ? null : dt;\n}\n\n// ————————————————————————————————————————————————————\n// Main Component\n// ————————————————————————————————————————————————————\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [editId, setEditId] = useState(null);\n\n  // — Fetch live jobs but preserve machine columns\n  const fetchOrders = () => {\n    axios.get('http://localhost:5000/api/orders').then(({\n      data\n    }) => {\n      setColumns(prev => {\n        const cols = {\n          queue: {\n            id: 'queue',\n            title: 'Unscheduled',\n            jobs: []\n          },\n          machine1: {\n            id: 'machine1',\n            title: 'Machine 1',\n            jobs: [...prev.machine1.jobs]\n          },\n          machine2: {\n            id: 'machine2',\n            title: 'Machine 2',\n            jobs: [...prev.machine2.jobs]\n          }\n        };\n\n        // populate queue\n        data.forEach(o => {\n          if (!o.title) return;\n          cols.queue.jobs.push({\n            id: o.id,\n            title: o.title,\n            stitchCount: o.stitch_count,\n            quantity: o.quantity,\n            due_date: o.due_date,\n            due_type: o.due_type,\n            // capture raw JS Date for end-time comparison\n            rawStart: o.start_date ? new Date(o.start_date) : null,\n            rawEnd: o.end_date ? new Date(o.end_date) : null,\n            start: o.start_date,\n            end: o.end_date\n          });\n        });\n\n        // sort queue by due_date\n        cols.queue.jobs.sort((a, b) => {\n          const da = parseDueDate(a.due_date),\n            db = parseDueDate(b.due_date);\n          return da && db ? da - db : 0;\n        });\n\n        // re-insert placeholders at top\n        placeholders.forEach(pl => cols.queue.jobs.unshift(pl));\n        return cols;\n      });\n    }).catch(console.error);\n  };\n\n  // initial + re-fetch when placeholders change\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [placeholders]);\n\n  // — Drag & Drop Handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const moved = cols[source.droppableId].jobs.splice(source.index, 1)[0];\n      cols[destination.droppableId].jobs.splice(destination.index, 0, moved);\n\n      // recalc start/end on destination column\n      let prevEnd = null;\n      cols[destination.droppableId].jobs.forEach((job, i) => {\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          const pe = cols[destination.droppableId].jobs[i - 1].rawEnd;\n          prevEnd = pe || prevEnd;\n          start = prevEnd ? new Date(prevEnd.getTime() + 30 * 60000) : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = job.stitchCount / 30000 * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n        // store both raw & display\n        job.rawStart = start;\n        job.rawEnd = end;\n        job.start = fmtDT(start);\n        job.end = fmtDT(end);\n        prevEnd = end;\n      });\n      setColumns(cols);\n\n      // placeholders vs real jobs\n      if (draggableId.startsWith('ph-')) {\n        setPlaceholders(pls => pls.map(p => p.id === draggableId ? {\n          ...p,\n          machineId: destination.droppableId\n        } : p));\n      } else {\n        // persist moved job\n        axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n          machineId: destination.droppableId,\n          start_date: cols[destination.droppableId].jobs.find(j => j.id === draggableId).start,\n          end_date: cols[destination.droppableId].jobs.find(j => j.id === draggableId).end\n        }).catch(console.error);\n        // cascade updates\n        cols[destination.droppableId].jobs.slice(destination.index + 1).forEach(job => {\n          axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n            start_date: job.start,\n            end_date: job.end\n          }).catch(console.error);\n        });\n      }\n    }, 0);\n  };\n\n  // — Open Add/Edit Placeholder Modal\n  const openModal = job => {\n    if (job) {\n      setEditId(job.id);\n      const parts = job.title.split(' - ');\n      setPh({\n        company: parts[0] || '',\n        quantity: job.quantity,\n        stitchCount: job.stitchCount,\n        inHand: job.due_date,\n        dueType: job.due_type\n      });\n    } else {\n      setEditId(null);\n      setPh({\n        company: '',\n        quantity: '',\n        stitchCount: '',\n        inHand: '',\n        dueType: 'Hard Date'\n      });\n    }\n    setShowModal(true);\n  };\n\n  // — Add or Update Placeholder\n  const addPlaceholder = () => {\n    const id = editId || `ph-${Date.now()}`;\n    const job = {\n      id,\n      title: `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`,\n      stitchCount: Number(ph.stitchCount) || 30000,\n      quantity: Number(ph.quantity) || 1,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      rawStart: null,\n      rawEnd: null,\n      start: '',\n      end: '',\n      machineId: editId ? placeholders.find(p => p.id === editId).machineId : 'queue'\n    };\n    setPlaceholders(pls => {\n      if (editId) {\n        return pls.map(p => p.id === editId ? job : p);\n      } else {\n        return [job, ...pls];\n      }\n    });\n    setShowModal(false);\n  };\n\n  // — Remove Placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(pls => pls.filter(p => p.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: '14px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => openModal(),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center',\n            margin: 0,\n            paddingBottom: 12\n          },\n          children: editId ? 'Edit Placeholder' : 'Add Placeholder'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Stitch Count\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"In Hand Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Due Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addPlaceholder,\n            children: editId ? 'Save' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                textAlign: 'center',\n                margin: '0 0 12px'\n              },\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const dueDt = parseDueDate(job.due_date),\n                endDt = job.rawEnd,\n                isLate = dueDt && endDt && endDt > dueDt,\n                isHard = job.due_type === 'Hard Date',\n                isPh = job.id.startsWith('ph-');\n              let bg = '#fff';\n              if (isLate) bg = '#ffe6e6';else if (isPh) bg = '#e8f5e9';else if (isHard) bg = '#f3e5f5';\n              const borderColor = isPh ? '#388e3c' : isHard ? '#8e24aa' : '#ccc';\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    position: 'relative',\n                    userSelect: 'none',\n                    padding: '8px',\n                    margin: '0 0 8px 0',\n                    background: bg,\n                    border: `2px solid ${borderColor}`,\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    ...p.draggableProps.style\n                  },\n                  children: [isPh && /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => openModal(job),\n                    style: {\n                      position: 'absolute',\n                      top: 4,\n                      right: 28,\n                      cursor: 'pointer'\n                    },\n                    title: \"Edit placeholder\",\n                    children: \"\\u270E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 31\n                  }, this), isPh && /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => removePlaceholder(job.id),\n                    style: {\n                      position: 'absolute',\n                      top: 4,\n                      right: 4,\n                      cursor: 'pointer',\n                      color: '#b71c1c'\n                    },\n                    title: \"Delete placeholder\",\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 6\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 2,\n                      fontSize: '12px'\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#e0f7fa',\n                        borderRadius: 10\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 33\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#ffe0b2',\n                        borderRadius: 10\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"teqvxHYcCuNyl39NtlnQIfPZfqU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","eod","freeMs","getTime","fmtDT","pad","n","String","padStart","mo","getMonth","da","h","m","ap","parseDueDate","due","parts","split","length","map","x","parseInt","setFullYear","getFullYear","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","placeholders","setPlaceholders","showModal","setShowModal","ph","setPh","company","quantity","stitchCount","inHand","dueType","editId","setEditId","fetchOrders","get","then","data","prev","cols","forEach","o","push","stitch_count","due_date","due_type","rawStart","start_date","rawEnd","end_date","start","end","sort","a","b","db","pl","unshift","catch","console","error","iv","setInterval","clearInterval","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","JSON","parse","stringify","moved","splice","prevEnd","job","i","pe","runMs","startsWith","pls","p","machineId","put","find","j","openModal","addPlaceholder","now","Number","removePlaceholder","filter","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","textAlign","margin","paddingBottom","value","onChange","e","target","width","type","gap","marginTop","Object","values","col","prov","ref","innerRef","droppableProps","border","minHeight","idx","dueDt","endDt","isLate","isHard","isPh","bg","borderColor","draggableProps","dragHandleProps","userSelect","boxShadow","cursor","color","flex","paddingRight","flexDirection","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// ————————————————————————————————————————————————————\n// Config\n// ————————————————————————————————————————————————————\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0,6];\nconst HOLIDAYS = ['2025-01-01','2025-12-25'];\n\n// ————————————————————————————————————————————————————\n// Helpers\n// ————————————————————————————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours()<WORK_START_HOUR ||\n    (d.getHours()===WORK_START_HOUR && d.getMinutes()<WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR,WORK_START_MIN,0,0);\n  }\n  if (\n    d.getHours()>WORK_END_HOUR ||\n    (d.getHours()===WORK_END_HOUR && d.getMinutes()>=WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR,WORK_START_MIN,0,0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current   = clampToWorkHours(startDate);\n  while (remaining>0) {\n    const eod    = new Date(current);\n    eod.setHours(WORK_END_HOUR,WORK_END_MIN,0,0);\n    const freeMs = eod - current;\n    if (freeMs<=0) {\n      current.setDate(current.getDate()+1);\n      current.setHours(WORK_START_HOUR,WORK_START_MIN,0,0);\n      current = clampToWorkHours(current);\n    } else if (remaining<=freeMs) {\n      current = new Date(current.getTime()+remaining);\n      remaining = 0;\n    } else {\n      remaining -= freeMs;\n      current = new Date(eod);\n    }\n  }\n  return current;\n}\n// Format as \"MM/DD hh:mm AM/PM\"\nfunction fmtDT(dt) {\n  const pad = n=>String(n).padStart(2,'0');\n  const mo = pad(dt.getMonth()+1),\n        da = pad(dt.getDate());\n  let   h  = dt.getHours(),\n        m  = pad(dt.getMinutes()),\n        ap = h>=12?'PM':'AM';\n  h = h%12||12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length===2) {\n    const [mo,da] = parts.map(x=>parseInt(x,10));\n    if (!isNaN(mo)&&!isNaN(da)) {\n      const dt=new Date();\n      dt.setFullYear(dt.getFullYear(),mo-1,da,0,0,0,0);\n      return dt;\n    }\n  }\n  const dt=new Date(due);\n  return isNaN(dt)?null:dt;\n}\n\n// ————————————————————————————————————————————————————\n// Main Component\n// ————————————————————————————————————————————————————\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',   jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',   jobs:[] },\n  });\n  const [placeholders, setPlaceholders] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n  const [editId, setEditId] = useState(null);\n\n  // — Fetch live jobs but preserve machine columns\n  const fetchOrders = () => {\n    axios.get('http://localhost:5000/api/orders')\n      .then(({ data }) => {\n        setColumns(prev => {\n          const cols = {\n            queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n            machine1: { id:'machine1', title:'Machine 1',   jobs:[...prev.machine1.jobs] },\n            machine2: { id:'machine2', title:'Machine 2',   jobs:[...prev.machine2.jobs] },\n          };\n\n          // populate queue\n          data.forEach(o => {\n            if (!o.title) return;\n            cols.queue.jobs.push({\n              id:          o.id,\n              title:       o.title,\n              stitchCount: o.stitch_count,\n              quantity:    o.quantity,\n              due_date:    o.due_date,\n              due_type:    o.due_type,\n              // capture raw JS Date for end-time comparison\n              rawStart:    o.start_date ? new Date(o.start_date) : null,\n              rawEnd:      o.end_date   ? new Date(o.end_date)   : null,\n              start:       o.start_date,\n              end:         o.end_date\n            });\n          });\n\n          // sort queue by due_date\n          cols.queue.jobs.sort((a,b)=>{\n            const da=parseDueDate(a.due_date),\n                  db=parseDueDate(b.due_date);\n            return da&&db ? da-db : 0;\n          });\n\n          // re-insert placeholders at top\n          placeholders.forEach(pl => cols.queue.jobs.unshift(pl));\n\n          return cols;\n        });\n      })\n      .catch(console.error);\n  };\n\n  // initial + re-fetch when placeholders change\n  useEffect(()=>{\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return ()=>clearInterval(iv);\n  }, [placeholders]);\n\n  // — Drag & Drop Handler\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason!=='DROP' || !destination) return;\n    if (source.droppableId===destination.droppableId && source.index===destination.index) return;\n\n    setTimeout(()=>{\n      const cols = JSON.parse(JSON.stringify(columns));\n      const moved = cols[source.droppableId].jobs.splice(source.index,1)[0];\n      cols[destination.droppableId].jobs.splice(destination.index,0,moved);\n\n      // recalc start/end on destination column\n      let prevEnd = null;\n      cols[destination.droppableId].jobs.forEach((job,i)=>{\n        let start;\n        if (i===0) {\n          start=new Date();\n          start.setHours(WORK_START_HOUR,WORK_START_MIN,0,0);\n        } else {\n          const pe = cols[destination.droppableId].jobs[i-1].rawEnd;\n          prevEnd = pe||prevEnd;\n          start   = prevEnd\n            ? new Date(prevEnd.getTime() + 30*60000)\n            : new Date();\n        }\n        start        = clampToWorkHours(start);\n        const runMs  = (job.stitchCount/30000)*(job.quantity/6)*3600000;\n        const end    = addWorkTime(start, runMs);\n        // store both raw & display\n        job.rawStart = start;\n        job.rawEnd   = end;\n        job.start    = fmtDT(start);\n        job.end      = fmtDT(end);\n        prevEnd      = end;\n      });\n\n      setColumns(cols);\n\n      // placeholders vs real jobs\n      if (draggableId.startsWith('ph-')) {\n        setPlaceholders(pls =>\n          pls.map(p => p.id===draggableId\n            ? { ...p, machineId: destination.droppableId }\n            : p\n          )\n        );\n      } else {\n        // persist moved job\n        axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n          machineId:  destination.droppableId,\n          start_date: cols[destination.droppableId].jobs\n                         .find(j=>j.id===draggableId).start,\n          end_date:   cols[destination.droppableId].jobs\n                         .find(j=>j.id===draggableId).end\n        }).catch(console.error);\n        // cascade updates\n        cols[destination.droppableId].jobs\n          .slice(destination.index+1)\n          .forEach(job => {\n            axios.put(`http://localhost:5000/api/orders/${job.id}`,{\n              start_date: job.start,\n              end_date:   job.end\n            }).catch(console.error);\n          });\n      }\n    },0);\n  };\n\n  // — Open Add/Edit Placeholder Modal\n  const openModal = job => {\n    if (job) {\n      setEditId(job.id);\n      const parts = job.title.split(' - ');\n      setPh({\n        company:     parts[0]||'',\n        quantity:    job.quantity,\n        stitchCount: job.stitchCount,\n        inHand:      job.due_date,\n        dueType:     job.due_type\n      });\n    } else {\n      setEditId(null);\n      setPh({ company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date' });\n    }\n    setShowModal(true);\n  };\n\n  // — Add or Update Placeholder\n  const addPlaceholder = () => {\n    const id = editId || `ph-${Date.now()}`;\n    const job = {\n      id,\n      title:       `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`,\n      stitchCount: Number(ph.stitchCount)||30000,\n      quantity:    Number(ph.quantity)   ||1,\n      due_date:    ph.inHand,\n      due_type:    ph.dueType,\n      rawStart:    null,\n      rawEnd:      null,\n      start:       '',\n      end:         '',\n      machineId:   editId\n        ? placeholders.find(p=>p.id===editId).machineId\n        : 'queue'\n    };\n    setPlaceholders(pls => {\n      if (editId) {\n        return pls.map(p => p.id===editId ? job : p);\n      } else {\n        return [job, ...pls];\n      }\n    });\n    setShowModal(false);\n  };\n\n  // — Remove Placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(pls => pls.filter(p=>p.id!==id));\n  };\n\n  return (\n    <div style={{ padding:16, fontFamily:'sans-serif', fontSize:'14px' }}>\n      <button onClick={()=>openModal()} style={{ marginRight:8 }}>\n        + Add Placeholder\n      </button>\n      <button onClick={fetchOrders}>Refresh Data</button>\n\n      {showModal && (\n        <div style={{\n          position:'fixed', top:0,left:0,right:0,bottom:0,\n          background:'rgba(0,0,0,0.3)',\n          display:'flex', alignItems:'center', justifyContent:'center',\n          zIndex:1000\n        }}>\n          <div style={{\n            background:'#fff', padding:20, borderRadius:4, minWidth:300\n          }}>\n            <h3 style={{ textAlign:'center', margin:0, paddingBottom:12 }}>\n              {editId ? 'Edit Placeholder' : 'Add Placeholder'}\n            </h3>\n            <label>Company Name<br/>\n              <input\n                value={ph.company}\n                onChange={e=>setPh({...ph,company:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Quantity<br/>\n              <input\n                type=\"number\"\n                value={ph.quantity}\n                onChange={e=>setPh({...ph,quantity:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Stitch Count<br/>\n              <input\n                type=\"number\"\n                value={ph.stitchCount}\n                onChange={e=>setPh({...ph,stitchCount:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>In Hand Date<br/>\n              <input\n                type=\"date\"\n                value={ph.inHand}\n                onChange={e=>setPh({...ph,inHand:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Due Type<br/>\n              <select\n                value={ph.dueType}\n                onChange={e=>setPh({...ph,dueType:e.target.value})}\n                style={{ width:'100%' }}\n              >\n                <option>Hard Date</option>\n                <option>Soft Date</option>\n              </select>\n            </label><br/><br/>\n            <div style={{ textAlign:'right' }}>\n              <button onClick={()=>setShowModal(false)} style={{ marginRight:8 }}>\n                Cancel\n              </button>\n              <button onClick={addPlaceholder}>\n                {editId ? 'Save' : 'Submit'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display:'flex', gap:16, marginTop:16 }}>\n          {Object.values(columns).map(col=>(\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov=>(\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4 style={{ textAlign:'center', margin:'0 0 12px' }}>\n                    {col.title}\n                  </h4>\n                  {col.jobs.map((job,idx)=>{\n                    const dueDt = parseDueDate(job.due_date),\n                          endDt = job.rawEnd,\n                          isLate=dueDt&&endDt&&endDt>dueDt,\n                          isHard=job.due_type==='Hard Date',\n                          isPh  =job.id.startsWith('ph-');\n                    let bg='#fff';\n                    if (isLate)      bg='#ffe6e6';\n                    else if (isPh)   bg='#e8f5e9';\n                    else if (isHard) bg='#f3e5f5';\n                    const borderColor = isPh\n                      ? '#388e3c'\n                      : isHard\n                        ? '#8e24aa'\n                        : '#ccc';\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p=>(\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              position:'relative',\n                              userSelect:'none',\n                              padding:'8px',\n                              margin:'0 0 8px 0',\n                              background:bg,\n                              border:`2px solid ${borderColor}`,\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              fontSize:'14px',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            {/* Edit */}\n                            {isPh && (\n                              <span\n                                onClick={()=>openModal(job)}\n                                style={{\n                                  position:'absolute',\n                                  top:4, right:28,\n                                  cursor:'pointer'\n                                }}\n                                title=\"Edit placeholder\"\n                              >✎</span>\n                            )}\n                            {/* Delete */}\n                            {isPh && (\n                              <span\n                                onClick={()=>removePlaceholder(job.id)}\n                                style={{\n                                  position:'absolute',\n                                  top:4, right:4,\n                                  cursor:'pointer',\n                                  color:'#b71c1c'\n                                }}\n                                title=\"Delete placeholder\"\n                              >×</span>\n                            )}\n                            <div style={{ flex:1, paddingRight:6 }}>\n                              {job.title}\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:2,\n                              fontSize:'12px'\n                            }}>\n                              {job.start && (\n                                <div style={{\n                                  padding:'2px 4px',\n                                  background:'#e0f7fa',\n                                  borderRadius:10\n                                }}>{job.start}</div>\n                              )}\n                              {job.end && (\n                                <div style={{\n                                  padding:'2px 4px',\n                                  background:'#ffe0b2',\n                                  borderRadius:10\n                                }}>{job.end}</div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}