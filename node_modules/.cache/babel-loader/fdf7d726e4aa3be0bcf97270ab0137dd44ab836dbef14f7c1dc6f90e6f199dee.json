{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport Section9 from './Section9';\nimport { parseDueDate, subWorkDays, fmtMMDD } from './helpers';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      title: 'Queue',\n      jobs: []\n    },\n    machine1: {\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [links, setLinks] = useState(loadLinks());\n  const [syncStatus, setSyncStatus] = useState('');\n  const [placeholders, setPlaceholders] = useState([]);\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('placeholders') || '[]');\n    setPlaceholders(saved);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  useEffect(() => {\n    fetchAll();\n  }, []);\n  const handleSync = async () => {\n    setSyncStatus('');\n    await fetchAll();\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: [...placeholders, ...c.queue.jobs.filter(j => !j.id.startsWith('ph-'))]\n      }\n    }));\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // === Section 2: Helpers ===\n\n  function isHoliday(dt) {\n    return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n  }\n  function isWorkday(dt) {\n    return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n  }\n  function clampToWorkHours(dt) {\n    let d = new Date(dt);\n    while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    }\n    if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      return clampToWorkHours(d);\n    }\n    return d;\n  }\n  function addWorkTime(start, ms) {\n    let remaining = ms;\n    let current = clampToWorkHours(start);\n    while (remaining > 0) {\n      const endOfDay = new Date(current);\n      endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n      const free = endOfDay.getTime() - current.getTime();\n      if (free <= 0) {\n        current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n      } else if (remaining <= free) {\n        current = new Date(current.getTime() + remaining);\n        remaining = 0;\n      } else {\n        remaining -= free;\n        current = new Date(endOfDay);\n      }\n    }\n    return current;\n  }\n  function fmtDT(dt) {\n    const pad = n => String(n).padStart(2, '0');\n    const month = pad(dt.getMonth() + 1);\n    const day = pad(dt.getDate());\n    let h = dt.getHours(),\n      m = pad(dt.getMinutes()),\n      ap = h >= 12 ? 'PM' : 'AM';\n    h = h % 12 || 12;\n    return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n  }\n  function parseDueDate(d) {\n    if (!d) return null;\n    if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n    const parts = d.split('/');\n    if (parts.length >= 2) {\n      const mo = +parts[0],\n        da = +parts[1],\n        yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n      if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n    }\n    const dt = new Date(d);\n    return isNaN(dt) ? null : dt;\n  }\n  function addWorkDays(start, days) {\n    let d = new Date(start),\n      added = 0;\n    while (added < days) {\n      d.setDate(d.getDate() + 1);\n      if (isWorkday(d)) added++;\n    }\n    return d;\n  }\n  function subWorkDays(start, days) {\n    let d = new Date(start),\n      removed = 0;\n    while (removed < days) {\n      d.setDate(d.getDate() - 1);\n      if (isWorkday(d)) removed++;\n    }\n    return d;\n  }\n  function fmtMMDD(d) {\n    const dt = new Date(d);\n    const mo = String(dt.getMonth() + 1).padStart(2, '0');\n    const da = String(dt.getDate()).padStart(2, '0');\n    return `${mo}/${da}`;\n  }\n  function sortQueue(arr) {\n    return [...arr].sort((a, b) => {\n      const da = parseDueDate(a.due_date),\n        db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    });\n  }\n\n  // —————————————————————————————\n  // SCHEDULING + LATE (persist embroidery_start)\n  // —————————————————————————————\n\n  // —————————————————————————————\n  // === Section 3: Scheduling & Late (using embroidery_start) ===\n  function scheduleMachineJobs(jobs) {\n    let prevEnd = null;\n    return jobs.map((job, idx) => {\n      // 1) Calculate cutoff for lateness (6 work-days before due)\n      const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n      const cutoff = new Date(eedDay);\n      cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n      // 2) Determine this job’s start time\n      let start;\n      if (idx === 0) {\n        // First job: prefer Embroidery List timestamp\n        if (job.embroidery_start) {\n          start = clampToWorkHours(new Date(job.embroidery_start));\n        } else {\n          // Fallback: stamp “now” into embroidery_start and persist\n          const nowIso = new Date().toISOString();\n          job.embroidery_start = nowIso;\n          start = clampToWorkHours(new Date(nowIso));\n          axios.put(`${API_ROOT}/orders/${job.id}`, {\n            embroidery_start: nowIso\n          }).catch(console.error);\n        }\n      } else {\n        // Subsequent jobs: 30 minutes after the prior end\n        start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n      }\n\n      // 3) Calculate run time → end\n      const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n      const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n      const end = addWorkTime(start, runMs);\n\n      // 4) Decorate for display\n      job._rawStart = start;\n      job._rawEnd = end;\n      job.start = fmtDT(start);\n      job.end = fmtDT(end);\n      job.delivery = fmtMMDD(addWorkDays(end, 6));\n      job.isLate = end > cutoff;\n      prevEnd = end;\n      return job;\n    });\n  }\n\n  // === Section 4: Link Utilities ===\n  function loadLinks() {\n    try {\n      return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n    } catch {\n      return {};\n    }\n  }\n  function saveLinks(map) {\n    localStorage.setItem('jobLinks', JSON.stringify(map));\n  }\n  function getChain(jobs, id) {\n    const fwd = {},\n      rev = {};\n    jobs.forEach(j => {\n      if (j.linkedTo) {\n        fwd[j.id] = j.linkedTo;\n        rev[j.linkedTo] = j.id;\n      }\n    });\n\n    // find root of the chain\n    let root = id;\n    while (rev[root]) {\n      root = rev[root];\n    }\n\n    // build the chain array\n    const chain = [];\n    let cur = root;\n    while (cur) {\n      chain.push(cur);\n      cur = fwd[cur];\n    }\n    return chain;\n  }\n\n  // === Section 5: FETCH & MERGE (with Manual Assignment & Ordering) ===\n  const fetchAll = async () => {\n    try {\n      // 1) Load manual state\n      const manualState = JSON.parse(localStorage.getItem('manualState') || JSON.stringify({\n        machine1: [],\n        machine2: []\n      }));\n\n      // 2) Preserve embroidery_start\n      const prevEmb = {};\n      Object.values(columns).flatMap(col => col.jobs).forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n\n      // 3) Fetch orders + embroideryList\n      const [{\n        data: orders\n      }, {\n        data: embList\n      }] = await Promise.all([axios.get(`${API_ROOT}/orders`), axios.get(`${API_ROOT}/embroideryList`)]);\n\n      // 4) Build embroidery map\n      const embMap = {};\n      embList.forEach(r => {\n        const id = String(r['Order #'] || '').trim();\n        if (id) embMap[id] = r['Embroidery Start Time'] || '';\n      });\n\n      // 5) Build jobById\n      const jobById = {};\n      orders.forEach(o => {\n        var _ref, _embMap$id, _ref2, _o$machineId;\n        if (o.id == null) return;\n        const id = String(o.id).trim();\n        const rawTs = (_ref = (_embMap$id = embMap[id]) !== null && _embMap$id !== void 0 ? _embMap$id : prevEmb[id]) !== null && _ref !== void 0 ? _ref : '';\n        jobById[id] = {\n          ...o,\n          id,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          embroidery_start: rawTs,\n          start_date: rawTs,\n          linkedTo: links[o.id] || null,\n          machineId: (_ref2 = (_o$machineId = o.machineId) !== null && _o$machineId !== void 0 ? _o$machineId : o.machine) !== null && _ref2 !== void 0 ? _ref2 : ''\n        };\n      });\n\n      // 6) Apply manualState\n      ['machine1', 'machine2'].forEach(col => {\n        (manualState[col] || []).forEach(id => {\n          if (jobById[id]) jobById[id].machineId = col;\n        });\n      });\n\n      // 7) Build machine lists\n      const buildMachine = colId => {\n        const manualList = manualState[colId] || [];\n        const existing = manualList.filter(id => jobById[id]).map(id => jobById[id]);\n        const appended = Object.values(jobById).filter(j => j.machineId === colId && !manualList.includes(j.id));\n        return [...existing, ...appended];\n      };\n      const machine1Jobs = buildMachine('machine1');\n      const machine2Jobs = buildMachine('machine2');\n\n      // 8) Build & sort queue\n      const queueJobs = Object.values(jobById).filter(j => !['machine1', 'machine2'].includes(j.machineId)).map(j => ({\n        ...j,\n        start_date: '',\n        _rawStart: null,\n        _rawEnd: null,\n        start: '',\n        end: '',\n        delivery: '',\n        isLate: false\n      })).sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n\n      // 9) Schedule runtimes\n      setColumns({\n        queue: {\n          ...columns.queue,\n          jobs: queueJobs\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(machine1Jobs)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(machine2Jobs)\n        }\n      });\n    } catch (err) {\n      console.error('fetchAll error:', err);\n    }\n  };\n\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue'\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: Drag & Drop Handler (with Manual Assignment/Order) ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const srcId = source.droppableId;\n    const dstId = destination.droppableId;\n    // no-op if dropped back in same position\n    if (srcId === dstId && source.index === destination.index) return;\n\n    // 1) Load manualState\n    const manualState = JSON.parse(localStorage.getItem('manualState') || JSON.stringify({\n      machine1: [],\n      machine2: []\n    }));\n\n    // 2) If same machine, just reorder its array\n    if (srcId === dstId && (srcId === 'machine1' || srcId === 'machine2')) {\n      const arr = Array.from(manualState[srcId] || []);\n      // find & remove\n      const from = arr.indexOf(draggableId);\n      if (from > -1) {\n        arr.splice(from, 1);\n        arr.splice(destination.index, 0, draggableId);\n        manualState[srcId] = arr;\n      }\n    } else {\n      // 3) Cross-column move: remove from any machine lists\n      ['machine1', 'machine2'].forEach(col => {\n        manualState[col] = (manualState[col] || []).filter(id => id !== draggableId);\n      });\n      // 4) If dropped into a machine, insert into that machine’s manual list\n      if (dstId === 'machine1' || dstId === 'machine2') {\n        const arr = Array.from(manualState[dstId] || []);\n        arr.splice(destination.index, 0, draggableId);\n        manualState[dstId] = arr;\n      }\n    }\n\n    // 5) Persist manualState\n    localStorage.setItem('manualState', JSON.stringify(manualState));\n\n    // 6) Now update UI immediately (same as before)\n    const srcJobs = Array.from(columns[srcId].jobs);\n    const [moved] = srcJobs.splice(source.index, 1);\n\n    // clear schedule when moving into queue\n    const jobForDest = dstId === 'queue' ? {\n      ...moved,\n      start_date: '',\n      _rawStart: null,\n      _rawEnd: null,\n      start: '',\n      end: '',\n      delivery: '',\n      isLate: false\n    } : moved;\n    const dstJobs = Array.from(columns[dstId].jobs);\n    dstJobs.splice(destination.index, 0, jobForDest);\n    const finalDst = dstId === 'queue' ? dstJobs.sort((a, b) => {\n      const da = parseDueDate(a.due_date),\n        db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    }) : scheduleMachineJobs(dstJobs);\n    setColumns({\n      ...columns,\n      [srcId]: {\n        ...columns[srcId],\n        jobs: srcJobs\n      },\n      [dstId]: {\n        ...columns[dstId],\n        jobs: finalDst\n      }\n    });\n  };\n\n  // === Section 9: Render via Section9.jsx ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Section9, {\n      columns: columns,\n      handleSync: handleSync,\n      syncStatus: syncStatus,\n      showModal: showModal,\n      setShowModal: setShowModal,\n      onDragEnd: onDragEnd,\n      getChain: getChain,\n      toggleLink: toggleLink,\n      editPlaceholder: editPlaceholder,\n      removePlaceholder: removePlaceholder,\n      ph: ph,\n      setPh: setPh,\n      submitPlaceholder: submitPlaceholder,\n      LIGHT_YELLOW: LIGHT_YELLOW,\n      DARK_YELLOW: DARK_YELLOW,\n      LIGHT_GREY: LIGHT_GREY,\n      DARK_GREY: DARK_GREY,\n      LIGHT_PURPLE: LIGHT_PURPLE,\n      DARK_PURPLE: DARK_PURPLE,\n      BUBBLE_START: BUBBLE_START,\n      BUBBLE_END: BUBBLE_END,\n      BUBBLE_DELIV: BUBBLE_DELIV\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 532,\n    columnNumber: 5\n  }, this);\n} // end of App component\n_s(App, \"UYpLWMrYUpRo2bJP7ZSxqlELCRs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","axios","Section9","parseDueDate","subWorkDays","fmtMMDD","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","App","_s","columns","setColumns","queue","title","jobs","machine1","machine2","links","setLinks","loadLinks","syncStatus","setSyncStatus","placeholders","setPlaceholders","saved","JSON","parse","localStorage","getItem","setItem","stringify","showModal","setShowModal","ph","setPh","id","company","quantity","stitchCount","inHand","dueType","fetchAll","handleSync","c","filter","j","startsWith","setTimeout","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","removed","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","prevEnd","map","job","idx","eedDay","cutoff","embroidery_start","nowIso","put","catch","console","error","qty","Math","ceil","runMs","end","_rawStart","_rawEnd","delivery","isLate","saveLinks","getChain","fwd","rev","forEach","linkedTo","root","chain","cur","push","manualState","prevEmb","Object","values","flatMap","col","start_date","data","orders","embList","Promise","all","get","embMap","r","trim","jobById","o","_ref","_embMap$id","_ref2","_o$machineId","rawTs","stitch_count","design","due_type","machineId","machine","buildMachine","colId","manualList","existing","appended","machine1Jobs","machine2Jobs","queueJobs","err","submitPlaceholder","now","ps","p","removePlaceholder","editPlaceholder","toggleLink","cols","below","l","onDragEnd","result","source","destination","draggableId","srcId","droppableId","dstId","index","Array","from","indexOf","splice","srcJobs","moved","jobForDest","dstJobs","finalDst","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport Section9 from './Section9';\nimport { parseDueDate, subWorkDays, fmtMMDD } from './helpers';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6];\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\nexport default function App() {\n  const [columns, setColumns]       = useState({\n    queue:    { title: 'Queue',     jobs: [] },\n    machine1: { title: 'Machine 1', jobs: [] },\n    machine2: { title: 'Machine 2', jobs: [] },\n  });\n  const [links, setLinks]           = useState(loadLinks());\n  const [syncStatus, setSyncStatus] = useState('');\n\n  const [placeholders, setPlaceholders] = useState([]);\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('placeholders') || '[]');\n    setPlaceholders(saved);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id:         null,\n    company:    '',\n    quantity:   '',\n    stitchCount:'',\n    inHand:     '',\n    dueType:    'Hard Date'\n  });\n\n  useEffect(() => {\n    fetchAll();\n  }, []);\n\n  const handleSync = async () => {\n    setSyncStatus('');\n    await fetchAll();\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: [\n          ...placeholders,\n          ...c.queue.jobs.filter(j => !j.id.startsWith('ph-'))\n        ]\n      }\n    }));\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n// === Section 2: Helpers ===\n\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\n\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\n\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\n\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\n\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\n\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (persist embroidery_start)\n// —————————————————————————————\n\n// —————————————————————————————\n// === Section 3: Scheduling & Late (using embroidery_start) ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n\n  return jobs.map((job, idx) => {\n    // 1) Calculate cutoff for lateness (6 work-days before due)\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // 2) Determine this job’s start time\n    let start;\n    if (idx === 0) {\n      // First job: prefer Embroidery List timestamp\n      if (job.embroidery_start) {\n        start = clampToWorkHours(new Date(job.embroidery_start));\n      } else {\n        // Fallback: stamp “now” into embroidery_start and persist\n        const nowIso = new Date().toISOString();\n        job.embroidery_start = nowIso;\n        start = clampToWorkHours(new Date(nowIso));\n\n        axios\n          .put(\n            `${API_ROOT}/orders/${job.id}`,\n            { embroidery_start: nowIso }\n          )\n          .catch(console.error);\n      }\n    } else {\n      // Subsequent jobs: 30 minutes after the prior end\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // 3) Calculate run time → end\n    const qty   = job.quantity % 6 === 0\n      ? job.quantity\n      : Math.ceil(job.quantity / 6) * 6;\n    const runMs = (job.stitchCount / 30000) * (qty / 6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    // 4) Decorate for display\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\n\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\n\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]    = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n\n  // find root of the chain\n  let root = id;\n  while (rev[root]) {\n    root = rev[root];\n  }\n\n  // build the chain array\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// === Section 5: FETCH & MERGE (with Manual Assignment & Ordering) ===\nconst fetchAll = async () => {\n  try {\n    // 1) Load manual state\n    const manualState = JSON.parse(\n      localStorage.getItem('manualState') ||\n      JSON.stringify({ machine1: [], machine2: [] })\n    );\n\n    // 2) Preserve embroidery_start\n    const prevEmb = {};\n    Object.values(columns)\n      .flatMap(col => col.jobs)\n      .forEach(j => { prevEmb[j.id] = j.embroidery_start || j.start_date || ''; });\n\n    // 3) Fetch orders + embroideryList\n    const [{ data: orders }, { data: embList }] = await Promise.all([\n      axios.get(`${API_ROOT}/orders`),\n      axios.get(`${API_ROOT}/embroideryList`)\n    ]);\n\n    // 4) Build embroidery map\n    const embMap = {};\n    embList.forEach(r => {\n      const id = String(r['Order #'] || '').trim();\n      if (id) embMap[id] = r['Embroidery Start Time'] || '';\n    });\n\n    // 5) Build jobById\n    const jobById = {};\n    orders.forEach(o => {\n      if (o.id == null) return;\n      const id    = String(o.id).trim();\n      const rawTs = embMap[id] ?? prevEmb[id] ?? '';\n      jobById[id] = {\n        ...o, id,\n        stitchCount: o.stitch_count,\n        quantity:    o.quantity,\n        company:     o.company,\n        design:      o.design,\n        due_date:    o.due_date,\n        due_type:    o.due_type,\n        embroidery_start: rawTs,\n        start_date:  rawTs,\n        linkedTo:    links[o.id] || null,\n        machineId:   o.machineId ?? o.machine ?? ''\n      };\n    });\n\n    // 6) Apply manualState\n    ['machine1','machine2'].forEach(col => {\n      (manualState[col] || []).forEach(id => {\n        if (jobById[id]) jobById[id].machineId = col;\n      });\n    });\n\n    // 7) Build machine lists\n    const buildMachine = colId => {\n      const manualList = manualState[colId] || [];\n      const existing   = manualList.filter(id => jobById[id]).map(id => jobById[id]);\n      const appended   = Object.values(jobById)\n        .filter(j => j.machineId === colId && !manualList.includes(j.id));\n      return [...existing, ...appended];\n    };\n    const machine1Jobs = buildMachine('machine1');\n    const machine2Jobs = buildMachine('machine2');\n\n    // 8) Build & sort queue\n    const queueJobs = Object.values(jobById)\n      .filter(j => !['machine1','machine2'].includes(j.machineId))\n      .map(j => ({\n        ...j, start_date:'', _rawStart:null, _rawEnd:null,\n        start:'', end:'', delivery:'', isLate:false\n      }))\n      .sort((a,b) => {\n        const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n\n    // 9) Schedule runtimes\n    setColumns({\n      queue:    { ...columns.queue,    jobs: queueJobs },\n      machine1: { ...columns.machine1, jobs: scheduleMachineJobs(machine1Jobs) },\n      machine2: { ...columns.machine2, jobs: scheduleMachineJobs(machine2Jobs) },\n    });\n\n  } catch (err) {\n    console.error('fetchAll error:', err);\n  }\n};\n\n\n// === Section 6: Placeholder CRUD ===\nconst submitPlaceholder = () => {\n  const job = {\n    id:         ph.id || `ph-${Date.now()}`,\n    company:    ph.company,\n    quantity:   +ph.quantity || 1,\n    stitchCount:+ph.stitchCount || 30000,\n    due_date:   ph.inHand,\n    due_type:   ph.dueType,\n    machineId:  'queue',\n  };\n\n  if (ph.id) {\n    setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n    setColumns(c => ({\n      ...c,\n      queue:    { ...c.queue,    jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j) },\n      machine1: { ...c.machine1, jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j) },\n      machine2: { ...c.machine2, jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j) },\n    }));\n  } else {\n    setPlaceholders(ps => [job, ...ps]);\n    setColumns(c => ({\n      ...c,\n      queue: { ...c.queue, jobs: [job, ...c.queue.jobs] }\n    }));\n  }\n\n  setShowModal(false);\n  setPh({ id:null, company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date' });\n};\n\nconst removePlaceholder = id => {\n  setPlaceholders(ps => ps.filter(p => p.id !== id));\n  setColumns(c => ({\n    ...c,\n    queue:    { ...c.queue,    jobs: c.queue.jobs.filter(j => j.id !== id) },\n    machine1: { ...c.machine1, jobs: c.machine1.jobs.filter(j => j.id !== id) },\n    machine2: { ...c.machine2, jobs: c.machine2.jobs.filter(j => j.id !== id) },\n  }));\n};\n\nconst editPlaceholder = job => {\n  setPh({\n    id:         job.id,\n    company:    job.company,\n    quantity:   job.quantity,\n    stitchCount:job.stitchCount,\n    inHand:     job.due_date,\n    dueType:    job.due_type\n  });\n  setShowModal(true);\n};\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: Drag & Drop Handler (with Manual Assignment/Order) ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const srcId = source.droppableId;\n  const dstId = destination.droppableId;\n  // no-op if dropped back in same position\n  if (srcId === dstId && source.index === destination.index) return;\n\n  // 1) Load manualState\n  const manualState = JSON.parse(\n    localStorage.getItem('manualState') ||\n    JSON.stringify({ machine1: [], machine2: [] })\n  );\n\n  // 2) If same machine, just reorder its array\n  if (srcId === dstId && (srcId === 'machine1' || srcId === 'machine2')) {\n    const arr = Array.from(manualState[srcId] || []);\n    // find & remove\n    const from = arr.indexOf(draggableId);\n    if (from > -1) {\n      arr.splice(from, 1);\n      arr.splice(destination.index, 0, draggableId);\n      manualState[srcId] = arr;\n    }\n  } else {\n    // 3) Cross-column move: remove from any machine lists\n    ['machine1','machine2'].forEach(col => {\n      manualState[col] = (manualState[col] || []).filter(id => id !== draggableId);\n    });\n    // 4) If dropped into a machine, insert into that machine’s manual list\n    if (dstId === 'machine1' || dstId === 'machine2') {\n      const arr = Array.from(manualState[dstId] || []);\n      arr.splice(destination.index, 0, draggableId);\n      manualState[dstId] = arr;\n    }\n  }\n\n  // 5) Persist manualState\n  localStorage.setItem('manualState', JSON.stringify(manualState));\n\n  // 6) Now update UI immediately (same as before)\n  const srcJobs = Array.from(columns[srcId].jobs);\n  const [moved] = srcJobs.splice(source.index, 1);\n\n  // clear schedule when moving into queue\n  const jobForDest = dstId === 'queue'\n    ? { ...moved, start_date:'', _rawStart:null, _rawEnd:null, start:'', end:'', delivery:'', isLate:false }\n    : moved;\n\n  const dstJobs = Array.from(columns[dstId].jobs);\n  dstJobs.splice(destination.index, 0, jobForDest);\n\n  const finalDst = dstId === 'queue'\n    ? dstJobs.sort((a, b) => {\n        const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      })\n    : scheduleMachineJobs(dstJobs);\n\n  setColumns({\n    ...columns,\n    [srcId]: { ...columns[srcId], jobs: srcJobs },\n    [dstId]: { ...columns[dstId], jobs: finalDst },\n  });\n};\n\n// === Section 9: Render via Section9.jsx ===\n  return (\n    <div>\n      <Section9\n        columns={columns}\n        handleSync={handleSync}\n        syncStatus={syncStatus}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onDragEnd={onDragEnd}\n        getChain={getChain}\n        toggleLink={toggleLink}\n        editPlaceholder={editPlaceholder}\n        removePlaceholder={removePlaceholder}\n        ph={ph}\n        setPh={setPh}\n        submitPlaceholder={submitPlaceholder}\n        LIGHT_YELLOW={LIGHT_YELLOW}\n        DARK_YELLOW={DARK_YELLOW}\n        LIGHT_GREY={LIGHT_GREY}\n        DARK_GREY={DARK_GREY}\n        LIGHT_PURPLE={LIGHT_PURPLE}\n        DARK_PURPLE={DARK_PURPLE}\n        BUBBLE_START={BUBBLE_START}\n        BUBBLE_END={BUBBLE_END}\n        BUBBLE_DELIV={BUBBLE_DELIV}\n      />\n    </div>\n  );\n} // end of App component"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,YAAY,EAAEC,WAAW,EAAEC,OAAO,QAAQ,WAAW;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAS,2BAA2B;AAClD,MAAMC,aAAa,GAAI,CAAC;EAAGC,cAAc,GAAG,EAAE;AAC9C,MAAMC,WAAW,GAAM,EAAE;EAAEC,YAAY,GAAK,EAAE;AAC9C,MAAMC,QAAQ,GAAS,CAAC,CAAC,EAAC,CAAC,CAAC;AAC5B,MAAMC,QAAQ,GAAS,CAAC,YAAY,EAAC,YAAY,CAAC;;AAElD;AACA,MAAMC,YAAY,GAAI,SAAS;EAAEC,WAAW,GAAI,SAAS;AACzD,MAAMC,UAAU,GAAM,SAAS;EAAEC,SAAS,GAAM,SAAS;AACzD,MAAMC,YAAY,GAAI,SAAS;EAAEC,WAAW,GAAI,SAAS;AACzD,MAAMC,YAAY,GAAI,SAAS;AAC/B,MAAMC,UAAU,GAAM,SAAS;AAC/B,MAAMC,YAAY,GAAI,SAAS;AAE/B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAS/B,QAAQ,CAAC;IAC3CgC,KAAK,EAAK;MAAEC,KAAK,EAAE,OAAO;MAAMC,IAAI,EAAE;IAAG,CAAC;IAC1CC,QAAQ,EAAE;MAAEF,KAAK,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC1CE,QAAQ,EAAE;MAAEH,KAAK,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAG;EAC3C,CAAC,CAAC;EACF,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAatC,QAAQ,CAACuC,SAAS,CAAC,CAAC,CAAC;EACzD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACpDC,SAAS,CAAC,MAAM;IACd,MAAM2C,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;IACtEL,eAAe,CAACC,KAAK,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN3C,SAAS,CAAC,MAAM;IACd8C,YAAY,CAACE,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACK,SAAS,CAACR,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqD,EAAE,EAAEC,KAAK,CAAC,GAAGtD,QAAQ,CAAC;IAC3BuD,EAAE,EAAU,IAAI;IAChBC,OAAO,EAAK,EAAE;IACdC,QAAQ,EAAI,EAAE;IACdC,WAAW,EAAC,EAAE;IACdC,MAAM,EAAM,EAAE;IACdC,OAAO,EAAK;EACd,CAAC,CAAC;EAEF3D,SAAS,CAAC,MAAM;IACd4D,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BrB,aAAa,CAAC,EAAE,CAAC;IACjB,MAAMoB,QAAQ,CAAC,CAAC;IAChB9B,UAAU,CAACgC,CAAC,KAAK;MACf,GAAGA,CAAC;MACJ/B,KAAK,EAAE;QACL,GAAG+B,CAAC,CAAC/B,KAAK;QACVE,IAAI,EAAE,CACJ,GAAGQ,YAAY,EACf,GAAGqB,CAAC,CAAC/B,KAAK,CAACE,IAAI,CAAC8B,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACV,EAAE,CAACW,UAAU,CAAC,KAAK,CAAC,CAAC;MAExD;IACF,CAAC,CAAC,CAAC;IACHzB,aAAa,CAAC,SAAS,CAAC;IACxB0B,UAAU,CAAC,MAAM1B,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAC3C,CAAC;;EAEH;;EAEA,SAAS2B,SAASA,CAACC,EAAE,EAAE;IACrB,OAAOA,EAAE,YAAYC,IAAI,IAClB,CAACC,KAAK,CAACF,EAAE,CAAC,IACVnD,QAAQ,CAACsD,QAAQ,CAACH,EAAE,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;EACxD;EAEA,SAASC,SAASA,CAACN,EAAE,EAAE;IACrB,OAAOA,EAAE,YAAYC,IAAI,IAClB,CAACC,KAAK,CAACF,EAAE,CAAC,IACV,CAACpD,QAAQ,CAACuD,QAAQ,CAACH,EAAE,CAACO,MAAM,CAAC,CAAC,CAAC,IAC/B,CAACR,SAAS,CAACC,EAAE,CAAC;EACvB;EAEA,SAASQ,gBAAgBA,CAACR,EAAE,EAAE;IAC5B,IAAIS,CAAC,GAAG,IAAIR,IAAI,CAACD,EAAE,CAAC;IACpB,OACE,CAACM,SAAS,CAACG,CAAC,CAAC,IACbA,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAGlE,aAAa,IAC3BiE,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKlE,aAAa,IAAIiE,CAAC,CAACE,UAAU,CAAC,CAAC,GAAGlE,cAAe,EACnE;MACAgE,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1BJ,CAAC,CAACK,QAAQ,CAACtE,aAAa,EAAEC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD;IACA,IACEgE,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAGhE,WAAW,IACzB+D,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKhE,WAAW,IAAI+D,CAAC,CAACE,UAAU,CAAC,CAAC,IAAIhE,YAAa,EAChE;MACA8D,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1BJ,CAAC,CAACK,QAAQ,CAACtE,aAAa,EAAEC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/C,OAAO+D,gBAAgB,CAACC,CAAC,CAAC;IAC5B;IACA,OAAOA,CAAC;EACV;EAEA,SAASM,WAAWA,CAACC,KAAK,EAAEC,EAAE,EAAE;IAC9B,IAAIC,SAAS,GAAGD,EAAE;IAClB,IAAIE,OAAO,GAAGX,gBAAgB,CAACQ,KAAK,CAAC;IACrC,OAAOE,SAAS,GAAG,CAAC,EAAE;MACpB,MAAME,QAAQ,GAAG,IAAInB,IAAI,CAACkB,OAAO,CAAC;MAClCC,QAAQ,CAACN,QAAQ,CAACpE,WAAW,EAAEC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;MAClD,MAAM0E,IAAI,GAAGD,QAAQ,CAACE,OAAO,CAAC,CAAC,GAAGH,OAAO,CAACG,OAAO,CAAC,CAAC;MACnD,IAAID,IAAI,IAAI,CAAC,EAAE;QACbF,OAAO,GAAGX,gBAAgB,CAAC,IAAIP,IAAI,CAACkB,OAAO,CAACP,OAAO,CAACO,OAAO,CAACN,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9E,CAAC,MAAM,IAAIK,SAAS,IAAIG,IAAI,EAAE;QAC5BF,OAAO,GAAG,IAAIlB,IAAI,CAACkB,OAAO,CAACG,OAAO,CAAC,CAAC,GAAGJ,SAAS,CAAC;QACjDA,SAAS,GAAG,CAAC;MACf,CAAC,MAAM;QACLA,SAAS,IAAIG,IAAI;QACjBF,OAAO,GAAG,IAAIlB,IAAI,CAACmB,QAAQ,CAAC;MAC9B;IACF;IACA,OAAOD,OAAO;EAChB;EAEA,SAASI,KAAKA,CAACvB,EAAE,EAAE;IACjB,MAAMwB,GAAG,GAAGC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAC1C,MAAMC,KAAK,GAAGJ,GAAG,CAACxB,EAAE,CAAC6B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IACpC,MAAMC,GAAG,GAAKN,GAAG,CAACxB,EAAE,CAACa,OAAO,CAAC,CAAC,CAAC;IAC/B,IAAIkB,CAAC,GAAG/B,EAAE,CAACU,QAAQ,CAAC,CAAC;MAAEsB,CAAC,GAAGR,GAAG,CAACxB,EAAE,CAACW,UAAU,CAAC,CAAC,CAAC;MAAEsB,EAAE,GAAGF,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IAC3EA,CAAC,GAAGA,CAAC,GAAG,EAAE,IAAI,EAAE;IAChB,OAAO,GAAGH,KAAK,IAAIE,GAAG,IAAIN,GAAG,CAACO,CAAC,CAAC,IAAIC,CAAC,IAAIC,EAAE,EAAE;EAC/C;EAEA,SAAS/F,YAAYA,CAACuE,CAAC,EAAE;IACvB,IAAI,CAACA,CAAC,EAAE,OAAO,IAAI;IACnB,IAAI,kBAAkB,CAACyB,IAAI,CAACzB,CAAC,CAAC,EAAE,OAAO,IAAIR,IAAI,CAACQ,CAAC,CAAC;IAClD,MAAM0B,KAAK,GAAG1B,CAAC,CAAC2B,KAAK,CAAC,GAAG,CAAC;IAC1B,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;MACrB,MAAMC,EAAE,GAAG,CAACH,KAAK,CAAC,CAAC,CAAC;QAAEI,EAAE,GAAG,CAACJ,KAAK,CAAC,CAAC,CAAC;QAC9BK,EAAE,GAAGL,KAAK,CAACE,MAAM,KAAK,CAAC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIlC,IAAI,CAAC,CAAC,CAACwC,WAAW,CAAC,CAAC;MACpE,IAAI,CAACvC,KAAK,CAACoC,EAAE,CAAC,IAAI,CAACpC,KAAK,CAACqC,EAAE,CAAC,IAAI,CAACrC,KAAK,CAACsC,EAAE,CAAC,EAAE,OAAO,IAAIvC,IAAI,CAACuC,EAAE,EAACF,EAAE,GAAC,CAAC,EAACC,EAAE,CAAC;IACzE;IACA,MAAMvC,EAAE,GAAG,IAAIC,IAAI,CAACQ,CAAC,CAAC;IACtB,OAAOP,KAAK,CAACF,EAAE,CAAC,GAAG,IAAI,GAAGA,EAAE;EAC9B;EAEA,SAAS0C,WAAWA,CAAC1B,KAAK,EAAE2B,IAAI,EAAE;IAChC,IAAIlC,CAAC,GAAG,IAAIR,IAAI,CAACe,KAAK,CAAC;MAAE4B,KAAK,GAAG,CAAC;IAClC,OAAOA,KAAK,GAAGD,IAAI,EAAE;MACnBlC,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1B,IAAIP,SAAS,CAACG,CAAC,CAAC,EAAEmC,KAAK,EAAE;IAC3B;IACA,OAAOnC,CAAC;EACV;EAEA,SAAStE,WAAWA,CAAC6E,KAAK,EAAE2B,IAAI,EAAE;IAChC,IAAIlC,CAAC,GAAG,IAAIR,IAAI,CAACe,KAAK,CAAC;MAAE6B,OAAO,GAAG,CAAC;IACpC,OAAOA,OAAO,GAAGF,IAAI,EAAE;MACrBlC,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1B,IAAIP,SAAS,CAACG,CAAC,CAAC,EAAEoC,OAAO,EAAE;IAC7B;IACA,OAAOpC,CAAC;EACV;EAEA,SAASrE,OAAOA,CAACqE,CAAC,EAAE;IAClB,MAAMT,EAAE,GAAG,IAAIC,IAAI,CAACQ,CAAC,CAAC;IACtB,MAAM6B,EAAE,GAAGZ,MAAM,CAAC1B,EAAE,CAAC6B,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAClD,MAAMY,EAAE,GAAGb,MAAM,CAAC1B,EAAE,CAACa,OAAO,CAAC,CAAC,CAAC,CAACc,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAC/C,OAAO,GAAGW,EAAE,IAAIC,EAAE,EAAE;EACtB;EAEA,SAASO,SAASA,CAACC,GAAG,EAAE;IACtB,OAAO,CAAC,GAAGA,GAAG,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;MAC5B,MAAMX,EAAE,GAAGrG,YAAY,CAAC+G,CAAC,CAACE,QAAQ,CAAC;QAAEC,EAAE,GAAGlH,YAAY,CAACgH,CAAC,CAACC,QAAQ,CAAC;MAClE,IAAIZ,EAAE,IAAIa,EAAE,EAAE,OAAOb,EAAE,GAAGa,EAAE;MAC5B,IAAIb,EAAE,EAAE,OAAO,CAAC,CAAC;MACjB,IAAIa,EAAE,EAAE,OAAO,CAAC;MAChB,OAAO,CAAC;IACV,CAAC,CAAC;EACJ;;EAEA;EACA;EACA;;EAEA;EACA;EACA,SAASC,mBAAmBA,CAACxF,IAAI,EAAE;IACjC,IAAIyF,OAAO,GAAG,IAAI;IAElB,OAAOzF,IAAI,CAAC0F,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC5B;MACA,MAAMC,MAAM,GAAGvH,WAAW,CAACD,YAAY,CAACsH,GAAG,CAACL,QAAQ,CAAC,EAAE,CAAC,CAAC;MACzD,MAAMQ,MAAM,GAAG,IAAI1D,IAAI,CAACyD,MAAM,CAAC;MAC/BC,MAAM,CAAC7C,QAAQ,CAACpE,WAAW,EAAEC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;;MAEhD;MACA,IAAIqE,KAAK;MACT,IAAIyC,GAAG,KAAK,CAAC,EAAE;QACb;QACA,IAAID,GAAG,CAACI,gBAAgB,EAAE;UACxB5C,KAAK,GAAGR,gBAAgB,CAAC,IAAIP,IAAI,CAACuD,GAAG,CAACI,gBAAgB,CAAC,CAAC;QAC1D,CAAC,MAAM;UACL;UACA,MAAMC,MAAM,GAAG,IAAI5D,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;UACvCoD,GAAG,CAACI,gBAAgB,GAAGC,MAAM;UAC7B7C,KAAK,GAAGR,gBAAgB,CAAC,IAAIP,IAAI,CAAC4D,MAAM,CAAC,CAAC;UAE1C7H,KAAK,CACF8H,GAAG,CACF,GAAGvH,QAAQ,WAAWiH,GAAG,CAACtE,EAAE,EAAE,EAC9B;YAAE0E,gBAAgB,EAAEC;UAAO,CAC7B,CAAC,CACAE,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;QACzB;MACF,CAAC,MAAM;QACL;QACAjD,KAAK,GAAGR,gBAAgB,CAAC,IAAIP,IAAI,CAACqD,OAAO,CAAChC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;MACpE;;MAEA;MACA,MAAM4C,GAAG,GAAKV,GAAG,CAACpE,QAAQ,GAAG,CAAC,KAAK,CAAC,GAChCoE,GAAG,CAACpE,QAAQ,GACZ+E,IAAI,CAACC,IAAI,CAACZ,GAAG,CAACpE,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,MAAMiF,KAAK,GAAIb,GAAG,CAACnE,WAAW,GAAG,KAAK,IAAK6E,GAAG,GAAG,CAAC,CAAC,GAAG,OAAO;MAC7D,MAAMI,GAAG,GAAKvD,WAAW,CAACC,KAAK,EAAEqD,KAAK,CAAC;;MAEvC;MACAb,GAAG,CAACe,SAAS,GAAGvD,KAAK;MACrBwC,GAAG,CAACgB,OAAO,GAAKF,GAAG;MACnBd,GAAG,CAACxC,KAAK,GAAOO,KAAK,CAACP,KAAK,CAAC;MAC5BwC,GAAG,CAACc,GAAG,GAAS/C,KAAK,CAAC+C,GAAG,CAAC;MAC1Bd,GAAG,CAACiB,QAAQ,GAAIrI,OAAO,CAACsG,WAAW,CAAC4B,GAAG,EAAE,CAAC,CAAC,CAAC;MAC5Cd,GAAG,CAACkB,MAAM,GAAMJ,GAAG,GAAGX,MAAM;MAE5BL,OAAO,GAAGgB,GAAG;MACb,OAAOd,GAAG;IACZ,CAAC,CAAC;EACJ;;EAEA;EACA,SAAStF,SAASA,CAAA,EAAG;IACnB,IAAI;MACF,OAAOM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IAC7D,CAAC,CAAC,MAAM;MACN,OAAO,CAAC,CAAC;IACX;EACF;EAEA,SAASgG,SAASA,CAACpB,GAAG,EAAE;IACtB7E,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAAC0E,GAAG,CAAC,CAAC;EACvD;EAEA,SAASqB,QAAQA,CAAC/G,IAAI,EAAEqB,EAAE,EAAE;IAC1B,MAAM2F,GAAG,GAAG,CAAC,CAAC;MAAEC,GAAG,GAAG,CAAC,CAAC;IACxBjH,IAAI,CAACkH,OAAO,CAACnF,CAAC,IAAI;MAChB,IAAIA,CAAC,CAACoF,QAAQ,EAAE;QACdH,GAAG,CAACjF,CAAC,CAACV,EAAE,CAAC,GAAMU,CAAC,CAACoF,QAAQ;QACzBF,GAAG,CAAClF,CAAC,CAACoF,QAAQ,CAAC,GAAGpF,CAAC,CAACV,EAAE;MACxB;IACF,CAAC,CAAC;;IAEF;IACA,IAAI+F,IAAI,GAAG/F,EAAE;IACb,OAAO4F,GAAG,CAACG,IAAI,CAAC,EAAE;MAChBA,IAAI,GAAGH,GAAG,CAACG,IAAI,CAAC;IAClB;;IAEA;IACA,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,GAAG,GAAGF,IAAI;IACd,OAAOE,GAAG,EAAE;MACVD,KAAK,CAACE,IAAI,CAACD,GAAG,CAAC;MACfA,GAAG,GAAGN,GAAG,CAACM,GAAG,CAAC;IAChB;IACA,OAAOD,KAAK;EACd;;EAEA;EACA,MAAM1F,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF;MACA,MAAM6F,WAAW,GAAG7G,IAAI,CAACC,KAAK,CAC5BC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IACnCH,IAAI,CAACK,SAAS,CAAC;QAAEf,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAC/C,CAAC;;MAED;MACA,MAAMuH,OAAO,GAAG,CAAC,CAAC;MAClBC,MAAM,CAACC,MAAM,CAAC/H,OAAO,CAAC,CACnBgI,OAAO,CAACC,GAAG,IAAIA,GAAG,CAAC7H,IAAI,CAAC,CACxBkH,OAAO,CAACnF,CAAC,IAAI;QAAE0F,OAAO,CAAC1F,CAAC,CAACV,EAAE,CAAC,GAAGU,CAAC,CAACgE,gBAAgB,IAAIhE,CAAC,CAAC+F,UAAU,IAAI,EAAE;MAAE,CAAC,CAAC;;MAE9E;MACA,MAAM,CAAC;QAAEC,IAAI,EAAEC;MAAO,CAAC,EAAE;QAAED,IAAI,EAAEE;MAAQ,CAAC,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC9DhK,KAAK,CAACiK,GAAG,CAAC,GAAG1J,QAAQ,SAAS,CAAC,EAC/BP,KAAK,CAACiK,GAAG,CAAC,GAAG1J,QAAQ,iBAAiB,CAAC,CACxC,CAAC;;MAEF;MACA,MAAM2J,MAAM,GAAG,CAAC,CAAC;MACjBJ,OAAO,CAACf,OAAO,CAACoB,CAAC,IAAI;QACnB,MAAMjH,EAAE,GAAGwC,MAAM,CAACyE,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;QAC5C,IAAIlH,EAAE,EAAEgH,MAAM,CAAChH,EAAE,CAAC,GAAGiH,CAAC,CAAC,uBAAuB,CAAC,IAAI,EAAE;MACvD,CAAC,CAAC;;MAEF;MACA,MAAME,OAAO,GAAG,CAAC,CAAC;MAClBR,MAAM,CAACd,OAAO,CAACuB,CAAC,IAAI;QAAA,IAAAC,IAAA,EAAAC,UAAA,EAAAC,KAAA,EAAAC,YAAA;QAClB,IAAIJ,CAAC,CAACpH,EAAE,IAAI,IAAI,EAAE;QAClB,MAAMA,EAAE,GAAMwC,MAAM,CAAC4E,CAAC,CAACpH,EAAE,CAAC,CAACkH,IAAI,CAAC,CAAC;QACjC,MAAMO,KAAK,IAAAJ,IAAA,IAAAC,UAAA,GAAGN,MAAM,CAAChH,EAAE,CAAC,cAAAsH,UAAA,cAAAA,UAAA,GAAIlB,OAAO,CAACpG,EAAE,CAAC,cAAAqH,IAAA,cAAAA,IAAA,GAAI,EAAE;QAC7CF,OAAO,CAACnH,EAAE,CAAC,GAAG;UACZ,GAAGoH,CAAC;UAAEpH,EAAE;UACRG,WAAW,EAAEiH,CAAC,CAACM,YAAY;UAC3BxH,QAAQ,EAAKkH,CAAC,CAAClH,QAAQ;UACvBD,OAAO,EAAMmH,CAAC,CAACnH,OAAO;UACtB0H,MAAM,EAAOP,CAAC,CAACO,MAAM;UACrB1D,QAAQ,EAAKmD,CAAC,CAACnD,QAAQ;UACvB2D,QAAQ,EAAKR,CAAC,CAACQ,QAAQ;UACvBlD,gBAAgB,EAAE+C,KAAK;UACvBhB,UAAU,EAAGgB,KAAK;UAClB3B,QAAQ,EAAKhH,KAAK,CAACsI,CAAC,CAACpH,EAAE,CAAC,IAAI,IAAI;UAChC6H,SAAS,GAAAN,KAAA,IAAAC,YAAA,GAAIJ,CAAC,CAACS,SAAS,cAAAL,YAAA,cAAAA,YAAA,GAAIJ,CAAC,CAACU,OAAO,cAAAP,KAAA,cAAAA,KAAA,GAAI;QAC3C,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,CAAC,UAAU,EAAC,UAAU,CAAC,CAAC1B,OAAO,CAACW,GAAG,IAAI;QACrC,CAACL,WAAW,CAACK,GAAG,CAAC,IAAI,EAAE,EAAEX,OAAO,CAAC7F,EAAE,IAAI;UACrC,IAAImH,OAAO,CAACnH,EAAE,CAAC,EAAEmH,OAAO,CAACnH,EAAE,CAAC,CAAC6H,SAAS,GAAGrB,GAAG;QAC9C,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAMuB,YAAY,GAAGC,KAAK,IAAI;QAC5B,MAAMC,UAAU,GAAG9B,WAAW,CAAC6B,KAAK,CAAC,IAAI,EAAE;QAC3C,MAAME,QAAQ,GAAKD,UAAU,CAACxH,MAAM,CAACT,EAAE,IAAImH,OAAO,CAACnH,EAAE,CAAC,CAAC,CAACqE,GAAG,CAACrE,EAAE,IAAImH,OAAO,CAACnH,EAAE,CAAC,CAAC;QAC9E,MAAMmI,QAAQ,GAAK9B,MAAM,CAACC,MAAM,CAACa,OAAO,CAAC,CACtC1G,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACmH,SAAS,KAAKG,KAAK,IAAI,CAACC,UAAU,CAAChH,QAAQ,CAACP,CAAC,CAACV,EAAE,CAAC,CAAC;QACnE,OAAO,CAAC,GAAGkI,QAAQ,EAAE,GAAGC,QAAQ,CAAC;MACnC,CAAC;MACD,MAAMC,YAAY,GAAGL,YAAY,CAAC,UAAU,CAAC;MAC7C,MAAMM,YAAY,GAAGN,YAAY,CAAC,UAAU,CAAC;;MAE7C;MACA,MAAMO,SAAS,GAAGjC,MAAM,CAACC,MAAM,CAACa,OAAO,CAAC,CACrC1G,MAAM,CAACC,CAAC,IAAI,CAAC,CAAC,UAAU,EAAC,UAAU,CAAC,CAACO,QAAQ,CAACP,CAAC,CAACmH,SAAS,CAAC,CAAC,CAC3DxD,GAAG,CAAC3D,CAAC,KAAK;QACT,GAAGA,CAAC;QAAE+F,UAAU,EAAC,EAAE;QAAEpB,SAAS,EAAC,IAAI;QAAEC,OAAO,EAAC,IAAI;QACjDxD,KAAK,EAAC,EAAE;QAAEsD,GAAG,EAAC,EAAE;QAAEG,QAAQ,EAAC,EAAE;QAAEC,MAAM,EAAC;MACxC,CAAC,CAAC,CAAC,CACF1B,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QACb,MAAMX,EAAE,GAAGrG,YAAY,CAAC+G,CAAC,CAACE,QAAQ,CAAC;UAAEC,EAAE,GAAGlH,YAAY,CAACgH,CAAC,CAACC,QAAQ,CAAC;QAClE,IAAIZ,EAAE,IAAIa,EAAE,EAAE,OAAOb,EAAE,GAAGa,EAAE;QAC5B,IAAIb,EAAE,EAAE,OAAO,CAAC,CAAC;QACjB,IAAIa,EAAE,EAAE,OAAO,CAAC;QAChB,OAAO,CAAC;MACV,CAAC,CAAC;;MAEJ;MACA1F,UAAU,CAAC;QACTC,KAAK,EAAK;UAAE,GAAGF,OAAO,CAACE,KAAK;UAAKE,IAAI,EAAE2J;QAAU,CAAC;QAClD1J,QAAQ,EAAE;UAAE,GAAGL,OAAO,CAACK,QAAQ;UAAED,IAAI,EAAEwF,mBAAmB,CAACiE,YAAY;QAAE,CAAC;QAC1EvJ,QAAQ,EAAE;UAAE,GAAGN,OAAO,CAACM,QAAQ;UAAEF,IAAI,EAAEwF,mBAAmB,CAACkE,YAAY;QAAE;MAC3E,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZzD,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEwD,GAAG,CAAC;IACvC;EACF,CAAC;;EAGD;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMlE,GAAG,GAAG;MACVtE,EAAE,EAAUF,EAAE,CAACE,EAAE,IAAI,MAAMe,IAAI,CAAC0H,GAAG,CAAC,CAAC,EAAE;MACvCxI,OAAO,EAAKH,EAAE,CAACG,OAAO;MACtBC,QAAQ,EAAI,CAACJ,EAAE,CAACI,QAAQ,IAAI,CAAC;MAC7BC,WAAW,EAAC,CAACL,EAAE,CAACK,WAAW,IAAI,KAAK;MACpC8D,QAAQ,EAAInE,EAAE,CAACM,MAAM;MACrBwH,QAAQ,EAAI9H,EAAE,CAACO,OAAO;MACtBwH,SAAS,EAAG;IACd,CAAC;IAED,IAAI/H,EAAE,CAACE,EAAE,EAAE;MACTZ,eAAe,CAACsJ,EAAE,IAAIA,EAAE,CAACrE,GAAG,CAACsE,CAAC,IAAIA,CAAC,CAAC3I,EAAE,KAAKF,EAAE,CAACE,EAAE,GAAGsE,GAAG,GAAGqE,CAAC,CAAC,CAAC;MAC5DnK,UAAU,CAACgC,CAAC,KAAK;QACf,GAAGA,CAAC;QACJ/B,KAAK,EAAK;UAAE,GAAG+B,CAAC,CAAC/B,KAAK;UAAKE,IAAI,EAAE6B,CAAC,CAAC/B,KAAK,CAACE,IAAI,CAAC0F,GAAG,CAAC3D,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKF,EAAE,CAACE,EAAE,GAAGsE,GAAG,GAAG5D,CAAC;QAAE,CAAC;QAClF9B,QAAQ,EAAE;UAAE,GAAG4B,CAAC,CAAC5B,QAAQ;UAAED,IAAI,EAAE6B,CAAC,CAAC5B,QAAQ,CAACD,IAAI,CAAC0F,GAAG,CAAC3D,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKF,EAAE,CAACE,EAAE,GAAGsE,GAAG,GAAG5D,CAAC;QAAE,CAAC;QACrF7B,QAAQ,EAAE;UAAE,GAAG2B,CAAC,CAAC3B,QAAQ;UAAEF,IAAI,EAAE6B,CAAC,CAAC3B,QAAQ,CAACF,IAAI,CAAC0F,GAAG,CAAC3D,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKF,EAAE,CAACE,EAAE,GAAGsE,GAAG,GAAG5D,CAAC;QAAE;MACtF,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACLtB,eAAe,CAACsJ,EAAE,IAAI,CAACpE,GAAG,EAAE,GAAGoE,EAAE,CAAC,CAAC;MACnClK,UAAU,CAACgC,CAAC,KAAK;QACf,GAAGA,CAAC;QACJ/B,KAAK,EAAE;UAAE,GAAG+B,CAAC,CAAC/B,KAAK;UAAEE,IAAI,EAAE,CAAC2F,GAAG,EAAE,GAAG9D,CAAC,CAAC/B,KAAK,CAACE,IAAI;QAAE;MACpD,CAAC,CAAC,CAAC;IACL;IAEAkB,YAAY,CAAC,KAAK,CAAC;IACnBE,KAAK,CAAC;MAAEC,EAAE,EAAC,IAAI;MAAEC,OAAO,EAAC,EAAE;MAAEC,QAAQ,EAAC,EAAE;MAAEC,WAAW,EAAC,EAAE;MAAEC,MAAM,EAAC,EAAE;MAAEC,OAAO,EAAC;IAAY,CAAC,CAAC;EAC7F,CAAC;EAED,MAAMuI,iBAAiB,GAAG5I,EAAE,IAAI;IAC9BZ,eAAe,CAACsJ,EAAE,IAAIA,EAAE,CAACjI,MAAM,CAACkI,CAAC,IAAIA,CAAC,CAAC3I,EAAE,KAAKA,EAAE,CAAC,CAAC;IAClDxB,UAAU,CAACgC,CAAC,KAAK;MACf,GAAGA,CAAC;MACJ/B,KAAK,EAAK;QAAE,GAAG+B,CAAC,CAAC/B,KAAK;QAAKE,IAAI,EAAE6B,CAAC,CAAC/B,KAAK,CAACE,IAAI,CAAC8B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKA,EAAE;MAAE,CAAC;MACxEpB,QAAQ,EAAE;QAAE,GAAG4B,CAAC,CAAC5B,QAAQ;QAAED,IAAI,EAAE6B,CAAC,CAAC5B,QAAQ,CAACD,IAAI,CAAC8B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKA,EAAE;MAAE,CAAC;MAC3EnB,QAAQ,EAAE;QAAE,GAAG2B,CAAC,CAAC3B,QAAQ;QAAEF,IAAI,EAAE6B,CAAC,CAAC3B,QAAQ,CAACF,IAAI,CAAC8B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKA,EAAE;MAAE;IAC5E,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM6I,eAAe,GAAGvE,GAAG,IAAI;IAC7BvE,KAAK,CAAC;MACJC,EAAE,EAAUsE,GAAG,CAACtE,EAAE;MAClBC,OAAO,EAAKqE,GAAG,CAACrE,OAAO;MACvBC,QAAQ,EAAIoE,GAAG,CAACpE,QAAQ;MACxBC,WAAW,EAACmE,GAAG,CAACnE,WAAW;MAC3BC,MAAM,EAAMkE,GAAG,CAACL,QAAQ;MACxB5D,OAAO,EAAKiE,GAAG,CAACsD;IAClB,CAAC,CAAC;IACF/H,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EACD;EACA,MAAMiJ,UAAU,GAAGA,CAACd,KAAK,EAAEzD,GAAG,KAAK;IACjC/F,UAAU,CAACuK,IAAI,IAAI;MACjB;MACA,MAAMpK,IAAI,GAAG,CAAC,GAAGoK,IAAI,CAACf,KAAK,CAAC,CAACrJ,IAAI,CAAC;MAClC,MAAM2F,GAAG,GAAI3F,IAAI,CAAC4F,GAAG,CAAC;MACtB,MAAMyE,KAAK,GAAGrK,IAAI,CAAC4F,GAAG,GAAG,CAAC,CAAC;MAC3B,IAAI,CAACyE,KAAK,EAAE,OAAOD,IAAI,CAAC,CAAE;;MAE1B;MACAhK,QAAQ,CAACkK,CAAC,IAAI;QACZ,MAAMnG,CAAC,GAAG;UAAE,GAAGmG;QAAE,CAAC;QAClB,IAAInG,CAAC,CAACwB,GAAG,CAACtE,EAAE,CAAC,KAAKgJ,KAAK,CAAChJ,EAAE,EAAE,OAAO8C,CAAC,CAACwB,GAAG,CAACtE,EAAE,CAAC,CAAC,KACxC8C,CAAC,CAACwB,GAAG,CAACtE,EAAE,CAAC,GAAGgJ,KAAK,CAAChJ,EAAE;QACzB,OAAO8C,CAAC;MACV,CAAC,CAAC;;MAEF;MACAwB,GAAG,CAACwB,QAAQ,GAAGxB,GAAG,CAACwB,QAAQ,KAAKkD,KAAK,CAAChJ,EAAE,GAAG,IAAI,GAAGgJ,KAAK,CAAChJ,EAAE;MAC1DrB,IAAI,CAAC4F,GAAG,CAAC,GAAGD,GAAG;;MAEf;MACA,OAAO;QACL,GAAGyE,IAAI;QACP,CAACf,KAAK,GAAG;UAAE,GAAGe,IAAI,CAACf,KAAK,CAAC;UAAErJ;QAAK;MAClC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMuK,SAAS,GAAGC,MAAM,IAAI;IAC1B,MAAM;MAAEC,MAAM;MAAEC,WAAW;MAAEC;IAAY,CAAC,GAAGH,MAAM;IACnD,IAAI,CAACE,WAAW,EAAE;IAElB,MAAME,KAAK,GAAGH,MAAM,CAACI,WAAW;IAChC,MAAMC,KAAK,GAAGJ,WAAW,CAACG,WAAW;IACrC;IACA,IAAID,KAAK,KAAKE,KAAK,IAAIL,MAAM,CAACM,KAAK,KAAKL,WAAW,CAACK,KAAK,EAAE;;IAE3D;IACA,MAAMvD,WAAW,GAAG7G,IAAI,CAACC,KAAK,CAC5BC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IACnCH,IAAI,CAACK,SAAS,CAAC;MAAEf,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAC/C,CAAC;;IAED;IACA,IAAI0K,KAAK,KAAKE,KAAK,KAAKF,KAAK,KAAK,UAAU,IAAIA,KAAK,KAAK,UAAU,CAAC,EAAE;MACrE,MAAM1F,GAAG,GAAG8F,KAAK,CAACC,IAAI,CAACzD,WAAW,CAACoD,KAAK,CAAC,IAAI,EAAE,CAAC;MAChD;MACA,MAAMK,IAAI,GAAG/F,GAAG,CAACgG,OAAO,CAACP,WAAW,CAAC;MACrC,IAAIM,IAAI,GAAG,CAAC,CAAC,EAAE;QACb/F,GAAG,CAACiG,MAAM,CAACF,IAAI,EAAE,CAAC,CAAC;QACnB/F,GAAG,CAACiG,MAAM,CAACT,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEJ,WAAW,CAAC;QAC7CnD,WAAW,CAACoD,KAAK,CAAC,GAAG1F,GAAG;MAC1B;IACF,CAAC,MAAM;MACL;MACA,CAAC,UAAU,EAAC,UAAU,CAAC,CAACgC,OAAO,CAACW,GAAG,IAAI;QACrCL,WAAW,CAACK,GAAG,CAAC,GAAG,CAACL,WAAW,CAACK,GAAG,CAAC,IAAI,EAAE,EAAE/F,MAAM,CAACT,EAAE,IAAIA,EAAE,KAAKsJ,WAAW,CAAC;MAC9E,CAAC,CAAC;MACF;MACA,IAAIG,KAAK,KAAK,UAAU,IAAIA,KAAK,KAAK,UAAU,EAAE;QAChD,MAAM5F,GAAG,GAAG8F,KAAK,CAACC,IAAI,CAACzD,WAAW,CAACsD,KAAK,CAAC,IAAI,EAAE,CAAC;QAChD5F,GAAG,CAACiG,MAAM,CAACT,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEJ,WAAW,CAAC;QAC7CnD,WAAW,CAACsD,KAAK,CAAC,GAAG5F,GAAG;MAC1B;IACF;;IAEA;IACArE,YAAY,CAACE,OAAO,CAAC,aAAa,EAAEJ,IAAI,CAACK,SAAS,CAACwG,WAAW,CAAC,CAAC;;IAEhE;IACA,MAAM4D,OAAO,GAAGJ,KAAK,CAACC,IAAI,CAACrL,OAAO,CAACgL,KAAK,CAAC,CAAC5K,IAAI,CAAC;IAC/C,MAAM,CAACqL,KAAK,CAAC,GAAGD,OAAO,CAACD,MAAM,CAACV,MAAM,CAACM,KAAK,EAAE,CAAC,CAAC;;IAE/C;IACA,MAAMO,UAAU,GAAGR,KAAK,KAAK,OAAO,GAChC;MAAE,GAAGO,KAAK;MAAEvD,UAAU,EAAC,EAAE;MAAEpB,SAAS,EAAC,IAAI;MAAEC,OAAO,EAAC,IAAI;MAAExD,KAAK,EAAC,EAAE;MAAEsD,GAAG,EAAC,EAAE;MAAEG,QAAQ,EAAC,EAAE;MAAEC,MAAM,EAAC;IAAM,CAAC,GACtGwE,KAAK;IAET,MAAME,OAAO,GAAGP,KAAK,CAACC,IAAI,CAACrL,OAAO,CAACkL,KAAK,CAAC,CAAC9K,IAAI,CAAC;IAC/CuL,OAAO,CAACJ,MAAM,CAACT,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEO,UAAU,CAAC;IAEhD,MAAME,QAAQ,GAAGV,KAAK,KAAK,OAAO,GAC9BS,OAAO,CAACpG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrB,MAAMX,EAAE,GAAGrG,YAAY,CAAC+G,CAAC,CAACE,QAAQ,CAAC;QAAEC,EAAE,GAAGlH,YAAY,CAACgH,CAAC,CAACC,QAAQ,CAAC;MAClE,IAAIZ,EAAE,IAAIa,EAAE,EAAE,OAAOb,EAAE,GAAGa,EAAE;MAC5B,IAAIb,EAAE,EAAE,OAAO,CAAC,CAAC;MACjB,IAAIa,EAAE,EAAE,OAAO,CAAC;MAChB,OAAO,CAAC;IACV,CAAC,CAAC,GACFC,mBAAmB,CAAC+F,OAAO,CAAC;IAEhC1L,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAACgL,KAAK,GAAG;QAAE,GAAGhL,OAAO,CAACgL,KAAK,CAAC;QAAE5K,IAAI,EAAEoL;MAAQ,CAAC;MAC7C,CAACN,KAAK,GAAG;QAAE,GAAGlL,OAAO,CAACkL,KAAK,CAAC;QAAE9K,IAAI,EAAEwL;MAAS;IAC/C,CAAC,CAAC;EACJ,CAAC;;EAED;EACE,oBACE/M,OAAA;IAAAgN,QAAA,eACEhN,OAAA,CAACL,QAAQ;MACPwB,OAAO,EAAEA,OAAQ;MACjBgC,UAAU,EAAEA,UAAW;MACvBtB,UAAU,EAAEA,UAAW;MACvBW,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BqJ,SAAS,EAAEA,SAAU;MACrBxD,QAAQ,EAAEA,QAAS;MACnBoD,UAAU,EAAEA,UAAW;MACvBD,eAAe,EAAEA,eAAgB;MACjCD,iBAAiB,EAAEA,iBAAkB;MACrC9I,EAAE,EAAEA,EAAG;MACPC,KAAK,EAAEA,KAAM;MACbyI,iBAAiB,EAAEA,iBAAkB;MACrC5K,YAAY,EAAEA,YAAa;MAC3BC,WAAW,EAAEA,WAAY;MACzBC,UAAU,EAAEA,UAAW;MACvBC,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BC,WAAW,EAAEA,WAAY;MACzBC,YAAY,EAAEA,YAAa;MAC3BC,UAAU,EAAEA,UAAW;MACvBC,YAAY,EAAEA;IAAa;MAAAiM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC,CAAC;AAAAlM,EAAA,CAxhBsBD,GAAG;AAAAoM,EAAA,GAAHpM,GAAG;AAAA,IAAAoM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}