{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers (unchanged)\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` + ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({});\n\n  // fetchOrders merges fresh API data with current state\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders').then(res => {\n      setColumns(prevCols => {\n        // 1) Build a map of existing jobs by id, preserving machineId/start/end\n        const jobMap = {};\n        Object.entries(prevCols).forEach(([colId, col]) => {\n          col.jobs.forEach(job => {\n            jobMap[job.id] = {\n              ...job,\n              machineId: colId\n            };\n          });\n        });\n\n        // 2) Create new empty columns\n        const cols = {\n          queue: {\n            id: 'queue',\n            title: 'Unscheduled',\n            jobs: []\n          },\n          machine1: {\n            id: 'machine1',\n            title: 'Machine 1',\n            jobs: []\n          },\n          machine2: {\n            id: 'machine2',\n            title: 'Machine 2',\n            jobs: []\n          }\n        };\n\n        // 3) Merge each API order with existing if present\n        res.data.forEach(o => {\n          var _ref, _existing$machineId, _o$stitch_count, _o$quantity, _o$due_date, _ref2, _existing$start, _ref3, _existing$end, _cols$machineId;\n          const id = o.id.toString();\n          const existing = jobMap[id] || {};\n          const machineId = (_ref = (_existing$machineId = existing.machineId) !== null && _existing$machineId !== void 0 ? _existing$machineId : o.machineId) !== null && _ref !== void 0 ? _ref : 'queue';\n          const job = {\n            id,\n            title: o.title,\n            stitchCount: (_o$stitch_count = o.stitch_count) !== null && _o$stitch_count !== void 0 ? _o$stitch_count : 30000,\n            quantity: (_o$quantity = o.quantity) !== null && _o$quantity !== void 0 ? _o$quantity : 1,\n            due_date: (_o$due_date = o.due_date) !== null && _o$due_date !== void 0 ? _o$due_date : '',\n            // preserve start/end if we have them, otherwise use API values\n            start: (_ref2 = (_existing$start = existing.start) !== null && _existing$start !== void 0 ? _existing$start : o.start_date) !== null && _ref2 !== void 0 ? _ref2 : '',\n            end: (_ref3 = (_existing$end = existing.end) !== null && _existing$end !== void 0 ? _existing$end : o.end_date) !== null && _ref3 !== void 0 ? _ref3 : ''\n          };\n          ((_cols$machineId = cols[machineId]) === null || _cols$machineId === void 0 ? void 0 : _cols$machineId.jobs.push(job)) || cols.queue.jobs.push(job);\n        });\n\n        // 4) Sort columns\n        cols.queue.jobs.sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n        ['machine1', 'machine2'].forEach(id => cols[id].jobs.sort((a, b) => new Date(a.start) - new Date(b.start)));\n        return cols;\n      });\n    }).catch(err => console.error('Failed to load orders:', err));\n  }, []);\n\n  // Initial load + poll every minute\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n\n  // Drag-and-drop handler (unchanged)\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      // identical onDragEnd logic from before...\n      // remove from source, insert in dest, clear or recalc times, persist, setColumns\n      // (omitted here for brevity; reuse your existing onDragEnd)\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const isLate = job.due_date && job.end && new Date(job.end) > new Date(job.due_date);\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    userSelect: 'none',\n                    padding: '10px',\n                    margin: '0 0 10px 0',\n                    background: isLate ? '#ffe6e6' : '#fff',\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    ...p.draggableProps.style\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 8\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 4\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#e0f7fa',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 33\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#ffe0b2',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y+QQiUtIDVzOqXX4sVlEGXY4r/s=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","available","getTime","fmtDT","pad","n","String","padStart","getFullYear","getMonth","App","_s","columns","setColumns","fetchOrders","get","then","res","prevCols","jobMap","Object","entries","forEach","colId","col","jobs","job","id","machineId","cols","queue","title","machine1","machine2","data","o","_ref","_existing$machineId","_o$stitch_count","_o$quantity","_o$due_date","_ref2","_existing$start","_ref3","_existing$end","_cols$machineId","toString","existing","stitchCount","stitch_count","quantity","due_date","start","start_date","end","end_date","push","sort","a","b","catch","err","console","error","iv","setInterval","clearInterval","onDragEnd","result","source","destination","reason","droppableId","index","setTimeout","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginTop","values","map","prov","ref","innerRef","droppableProps","border","borderRadius","width","minHeight","background","idx","isLate","draggableId","p","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","flexDirection","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers (unchanged)\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) ||\n         d.getHours() < WORK_START_HOUR ||\n         (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HOUR ||\n    (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate()+1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate()+1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth()+1)}-${pad(dt.getDate())}` +\n         ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\n\nexport default function App() {\n  const [columns, setColumns] = useState({});\n\n  // fetchOrders merges fresh API data with current state\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders')\n      .then(res => {\n        setColumns(prevCols => {\n          // 1) Build a map of existing jobs by id, preserving machineId/start/end\n          const jobMap = {};\n          Object.entries(prevCols).forEach(([colId, col]) => {\n            col.jobs.forEach(job => {\n              jobMap[job.id] = {\n                ...job,\n                machineId: colId\n              };\n            });\n          });\n\n          // 2) Create new empty columns\n          const cols = {\n            queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n            machine1: { id:'machine1', title:'Machine 1',    jobs:[] },\n            machine2: { id:'machine2', title:'Machine 2',    jobs:[] }\n          };\n\n          // 3) Merge each API order with existing if present\n          res.data.forEach(o => {\n            const id = o.id.toString();\n            const existing = jobMap[id] || {};\n            const machineId = existing.machineId ?? o.machineId ?? 'queue';\n            const job = {\n              id,\n              title:       o.title,\n              stitchCount: o.stitch_count  ?? 30000,\n              quantity:    o.quantity      ?? 1,\n              due_date:    o.due_date      ?? '',\n              // preserve start/end if we have them, otherwise use API values\n              start: existing.start ?? o.start_date ?? '',\n              end:   existing.end   ?? o.end_date   ?? ''\n            };\n            cols[machineId]?.jobs.push(job) || cols.queue.jobs.push(job);\n          });\n\n          // 4) Sort columns\n          cols.queue.jobs.sort((a,b)=>\n            new Date(a.due_date) - new Date(b.due_date)\n          );\n          ['machine1','machine2'].forEach(id =>\n            cols[id].jobs.sort((a,b)=>\n              new Date(a.start) - new Date(b.start)\n            )\n          );\n\n          return cols;\n        });\n      })\n      .catch(err => console.error('Failed to load orders:', err));\n  }, []);\n\n  // Initial load + poll every minute\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n\n  // Drag-and-drop handler (unchanged)\n  const onDragEnd = result => {\n    const { source, destination, reason } = result;\n    if (reason!=='DROP' || !destination) return;\n    if (\n      source.droppableId===destination.droppableId &&\n      source.index===destination.index\n    ) return;\n\n    setTimeout(() => {\n      // identical onDragEnd logic from before...\n      // remove from source, insert in dest, clear or recalc times, persist, setColumns\n      // (omitted here for brevity; reuse your existing onDragEnd)\n    },0);\n  };\n\n  return (\n    <div style={{ padding:16 }}>\n      <button onClick={fetchOrders}>Refresh Data</button>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display:'flex', gap:16, marginTop:16 }}>\n          {Object.values(columns).map(col => (\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov => (\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4>{col.title}</h4>\n                  {col.jobs.map((job, idx) => {\n                    const isLate = job.due_date && job.end &&\n                      new Date(job.end) > new Date(job.due_date);\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p => (\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              userSelect:'none',\n                              padding:'10px',\n                              margin:'0 0 10px 0',\n                              background: isLate ? '#ffe6e6' : '#fff',\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            <div style={{flex:1,paddingRight:8}}>\n                              {job.title}\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:4\n                            }}>\n                              {job.start && (\n                                <div style={{\n                                  padding:'2px 6px',\n                                  background:'#e0f7fa',\n                                  borderRadius:12,\n                                  fontSize:'0.75em'\n                                }}>{job.start}</div>\n                              )}\n                              {job.end && (\n                                <div style={{\n                                  padding:'2px 6px',\n                                  background:'#ffe0b2',\n                                  borderRadius:12,\n                                  fontSize:'0.75em'\n                                }}>{job.end}</div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}