{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const month = pad(dt.getMonth() + 1);\n  const day = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0],\n      da = +parts[1],\n      yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start),\n    removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth() + 1).padStart(2, '0');\n  const da = String(dt.getDate()).padStart(2, '0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date),\n      db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (persist embroidery_start)\n// —————————————————————————————\n\n// —————————————————————————————\n// Section 3: Scheduling & Late (using start_date)\n// —————————————————————————————\n\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    // 1) Calculate cutoff for lateness (6 work-days before due)\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // 2) Pick or stamp a start time (use start_date from your sheet)\n    let start;\n    if (idx === 0) {\n      if (job.start_date) {\n        // reuse stored start_date\n        start = clampToWorkHours(new Date(job.start_date));\n      } else {\n        // first‐time at top: stamp “now” into start_date and persist\n        const nowIso = new Date().toISOString();\n        job.start_date = nowIso;\n        start = clampToWorkHours(new Date(nowIso));\n        axios.put(`${API_ROOT}/orders/${job.id}`, {\n          start_date: nowIso\n        }).catch(console.error);\n      }\n    } else {\n      // chain from previous job’s end + 30m\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // 3) Calculate run time → end\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n\n    // 4) Decorate for display\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = fmtDT(start);\n    job.end = fmtDT(end);\n    job.delivery = fmtMMDD(addWorkDays(end, 6));\n    job.isLate = end > cutoff;\n    prevEnd = end;\n    return job;\n  }); // closes jobs.map()\n} // closes scheduleMachineJobs()\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {},\n    rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id] = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n\n  // find root of the chain\n  let root = id;\n  while (rev[root]) {\n    root = rev[root];\n  }\n\n  // build the chain array\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  _s();\n  // 1) Seed last‐saved drag order from localStorage\n  const saved1 = JSON.parse(localStorage.getItem('machine1Order') || '[]');\n  const saved2 = JSON.parse(localStorage.getItem('machine2Order') || '[]');\n\n  // 2) Columns state, seeded from saved arrays\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: saved1.map(id => ({\n        id\n      }))\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: saved2.map(id => ({\n        id\n      }))\n    }\n  });\n\n  // 3) Placeholder state (persisted)\n  const [placeholders, setPlaceholders] = useState(() => JSON.parse(localStorage.getItem('placeholders') || '[]'));\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  // 4) Links state (persisted)\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => {\n    saveLinks(links);\n  }, [links]);\n\n  // 5) Modal/form state\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // 6) Sync‐button status\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // Helper: parse \"MM/DD/YYYY hh:mm:ss\" into ISO\n  function parseMMDDTimestamp(str) {\n    const [date, time] = (str || '').split(' ');\n    if (!date || !time) return null;\n    const [mo, da, yr] = date.split('/').map(Number);\n    const [h, m, s] = time.split(':').map(Number);\n    if ([mo, da, yr, h, m, s].some(isNaN)) return null;\n    return new Date(yr, mo - 1, da, h, m, s).toISOString();\n  }\n\n  // FETCH & MERGE preserving manual machine order\n  const fetchAll = async () => {\n    try {\n      // a) remember existing embroidery_start\n      const prevEmb = {};\n      Object.values(columns).flatMap(col => col.jobs).forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n\n      // b) fetch orders + embroideryList\n      const [{\n        data: orders\n      }, {\n        data: embList\n      }] = await Promise.all([axios.get(`${API_ROOT}/orders`), axios.get(`${API_ROOT}/embroideryList`)]);\n\n      // c) build map id→sheet timestamp\n      const embMap = {};\n      embList.forEach(row => {\n        const id = String(row['Order #'] || '').trim();\n        if (id) embMap[id] = row['Embroidery Start Time'] || '';\n      });\n\n      // d) construct updated jobs\n      const jobById = {};\n      orders.forEach(o => {\n        if (!o.title) return;\n        const id = String(o.id);\n        const raw = embMap[id] || prevEmb[id] || '';\n        const iso = parseMMDDTimestamp(raw) || raw || '';\n        jobById[id] = {\n          ...o,\n          id,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          embroidery_start: iso,\n          start_date: iso,\n          position: o.position != null ? o.position : null,\n          linkedTo: links[o.id] || null\n        };\n      });\n\n      // e) helper to rebuild a machine’s manual order\n      const rebuildColumn = colId => {\n        const currentIds = columns[colId].jobs.map(j => j.id);\n        const kept = currentIds.map(id => jobById[id]).filter(Boolean);\n        const added = Object.values(jobById).filter(j => {\n          const liveCol = j.machineId === 'machine1' || j.machineId === 'machine2' ? j.machineId : 'queue';\n          return liveCol === colId && !currentIds.includes(j.id);\n        });\n        return [...kept, ...added];\n      };\n      const machine1Jobs = rebuildColumn('machine1');\n      const machine2Jobs = rebuildColumn('machine2');\n\n      // f) queue: auto‐sort by due date\n      const queueJobs = Object.values(jobById).filter(j => !['machine1', 'machine2'].includes(j.machineId)).sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n\n      // g) update state\n      setColumns({\n        queue: {\n          ...columns.queue,\n          jobs: queueJobs\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(machine1Jobs)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(machine2Jobs)\n        }\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // run once on mount\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n\n  // manual sync button\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: onDragEnd ===\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n\n    // 1) Clone all three lists\n    const lists = {\n      queue: Array.from(columns.queue.jobs),\n      machine1: Array.from(columns.machine1.jobs),\n      machine2: Array.from(columns.machine2.jobs)\n    };\n\n    // 2) Remove dragged chain from source\n    const sourceList = lists[source.droppableId];\n    const chain = getChain(sourceList, draggableId);\n    const movedSet = new Set(chain);\n    const movedJobs = sourceList.filter(j => movedSet.has(j.id));\n    lists[source.droppableId] = sourceList.filter(j => !movedSet.has(j.id));\n\n    // 3) Insert into destination\n    const destList = lists[destination.droppableId];\n    destList.splice(destination.index, 0, ...movedJobs);\n    lists[destination.droppableId] = destList;\n\n    // 4) Build new columns state\n    const newCols = {\n      queue: {\n        ...columns.queue,\n        jobs: sortQueue(lists.queue)\n      },\n      machine1: {\n        ...columns.machine1,\n        jobs: scheduleMachineJobs(lists.machine1)\n      },\n      machine2: {\n        ...columns.machine2,\n        jobs: scheduleMachineJobs(lists.machine2)\n      }\n    };\n\n    // 5) Apply it\n    setColumns(newCols);\n\n    // 6) Persist manual order so refresh won’t scramble them\n    localStorage.setItem('machine1Order', JSON.stringify(newCols.machine1.jobs.map(j => j.id)));\n    localStorage.setItem('machine2Order', JSON.stringify(newCols.machine2.jobs.map(j => j.id)));\n  }, [columns, getChain, scheduleMachineJobs, sortQueue, setColumns]);\n\n  // === Section 9: Render / Return ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 13\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8,\n        fontSize: 13\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      style: {\n        fontSize: 13\n      },\n      children: [\"Sync from Sheet\", ' ', syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green',\n          fontSize: 13\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 16,\n        margin: '12px 0',\n        flexWrap: 'wrap',\n        fontSize: 12\n      },\n      children: [[{\n        label: 'Placeholder',\n        bg: LIGHT_YELLOW,\n        border: DARK_YELLOW\n      }, {\n        label: 'Soft Date',\n        bg: LIGHT_GREY,\n        border: DARK_GREY\n      }, {\n        label: 'Hard Date',\n        bg: LIGHT_PURPLE,\n        border: DARK_PURPLE\n      }, {\n        label: 'Late',\n        bg: 'red',\n        border: 'red'\n      }].map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            width: 12,\n            height: 12,\n            background: item.bg,\n            border: `2px solid ${item.border}`,\n            borderRadius: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), item.label]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 14\n          },\n          children: \"\\uD83D\\uDD17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 9\n        }, this), \" Link\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 14\n          },\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 9\n        }, this), \" Unlink\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 7\n      }, this), ['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n        const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: 12,\n              height: 12,\n              background: color,\n              borderRadius: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), txt]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({\n              start: i,\n              len\n            });\n            i += len;\n          }\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                position: 'relative',\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: colId === 'queue' ? 260 : 300,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0',\n                  fontSize: 13\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  marginBottom: 6,\n                  zIndex: seg.len > 1 ? 3 : 1,\n                  outline: seg.len > 1 ? `6px solid #0288d1` : undefined,\n                  outlineOffset: seg.len > 1 ? '0px' : undefined,\n                  borderRadius: 4\n                },\n                children: jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                  const idx = seg.start + jIdx;\n                  const isPh = job.id.startsWith('ph-');\n                  const isSoft = job.due_type === 'Soft Date';\n                  const base = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                  let bg = base;\n                  let bCol = isPh ? DARK_YELLOW : isSoft ? DARK_GREY : DARK_PURPLE;\n                  if (job.isLate) {\n                    bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                    bCol = 'red';\n                  }\n                  const dt0 = (job.due_type || '')[0] || '';\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job.id,\n                    index: idx,\n                    children: prov => {\n                      var _job$design, _jobs;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: prov.innerRef,\n                        ...prov.draggableProps,\n                        ...prov.dragHandleProps,\n                        style: {\n                          position: 'relative',\n                          display: 'grid',\n                          gridTemplateColumns: '1fr auto',\n                          gridTemplateRows: 'auto auto auto auto',\n                          columnGap: 6,\n                          rowGap: 4,\n                          padding: '6px 28px 6px 6px',\n                          margin: `0 0 ${jIdx < seg.len - 1 ? 6 : 0}px 0`,\n                          background: bg,\n                          border: `2px solid ${bCol}`,\n                          borderRadius: 4,\n                          zIndex: 2,\n                          ...prov.draggableProps.style\n                        },\n                        children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 4,\n                            height: '100%',\n                            background: '#0288d1',\n                            zIndex: 4\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 661,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 1,\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13,\n                            fontWeight: 'bold'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              display: 'inline-block',\n                              width: 20,\n                              height: 20,\n                              borderRadius: '50%',\n                              background: '#000',\n                              color: base,\n                              lineHeight: '20px',\n                              textAlign: 'center',\n                              fontSize: isPh ? 13 : 11,\n                              fontWeight: 'bold',\n                              marginRight: 4\n                            },\n                            children: isPh ? '*' : job.id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 689,\n                            columnNumber: 35\n                          }, this), job.company]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 675,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            fontSize: 15,\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis'\n                          },\n                          children: job.quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 710,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 1,\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: (_job$design = job.design) === null || _job$design === void 0 ? void 0 : _job$design.slice(0, 22)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 729,\n                          columnNumber: 33\n                        }, this), job.start && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_START,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.start\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 747,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 1,\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 764,\n                          columnNumber: 33\n                        }, this), job.end && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.end\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 784,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 1,\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: `IHD: ${fmtMMDD(job.due_date)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 801,\n                          columnNumber: 33\n                        }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.delivery\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 817,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: 28,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomLeftRadius: 4,\n                            zIndex: 4,\n                            fontSize: 11,\n                            fontWeight: 'bold'\n                          },\n                          children: dt0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 834,\n                          columnNumber: 33\n                        }, this), idx < jobs.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => toggleLink(colId, idx),\n                          style: {\n                            position: 'absolute',\n                            top: 28,\n                            right: 0,\n                            width: 28,\n                            height: 'calc(100% - 28px)',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer',\n                            background: base,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: job.linkedTo === ((_jobs = jobs[idx + 1]) === null || _jobs === void 0 ? void 0 : _jobs.id) ? '❌' : '🔗'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 857,\n                          columnNumber: 35\n                        }, this), job.id.startsWith('ph-') && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: '100%',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'flex-start',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => editPlaceholder(job),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u270E\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 900,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => removePlaceholder(job.id),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u2716\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 910,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 883,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 640,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, si, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 3\n  }, this);\n} // end of App component\n_s(App, \"PbloNGBEyfac/7vq+oTnsOd+umM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","jobs","prevEnd","map","job","idx","eedDay","cutoff","start_date","nowIso","put","id","catch","console","error","qty","quantity","Math","ceil","runMs","stitchCount","end","_rawStart","_rawEnd","delivery","isLate","loadLinks","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","fwd","rev","forEach","j","linkedTo","root","chain","cur","push","App","_s","saved1","saved2","columns","setColumns","queue","title","machine1","machine2","placeholders","setPlaceholders","links","setLinks","showModal","setShowModal","ph","setPh","company","inHand","dueType","syncStatus","setSyncStatus","parseMMDDTimestamp","str","date","time","Number","s","some","fetchAll","prevEmb","Object","values","flatMap","col","embroidery_start","data","orders","embList","Promise","all","get","embMap","row","trim","jobById","o","raw","iso","stitch_count","design","due_type","position","rebuildColumn","colId","currentIds","kept","filter","Boolean","liveCol","machineId","machine1Jobs","machine2Jobs","queueJobs","err","handleSync","setTimeout","submitPlaceholder","now","ps","p","c","removePlaceholder","editPlaceholder","toggleLink","cols","below","l","onDragEnd","result","source","destination","draggableId","lists","Array","from","sourceList","droppableId","movedSet","Set","movedJobs","has","destList","splice","index","newCols","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","display","alignItems","gap","margin","flexWrap","label","bg","border","item","i","width","height","background","borderRadius","txt","marginTop","isArray","segments","len","provided","ref","innerRef","droppableProps","minHeight","textAlign","seg","si","marginBottom","zIndex","outline","undefined","outlineOffset","jIdx","isPh","startsWith","isSoft","base","bCol","dt0","prov","_job$design","_jobs","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","top","right","gridRow","gridColumn","whiteSpace","overflow","textOverflow","fontWeight","lineHeight","justifySelf","justifyContent","borderTopRightRadius","borderBottomLeftRadius","flexDirection","cursor","borderBottomRightRadius","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo)&&!isNaN(da)&&!isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (persist embroidery_start)\n// —————————————————————————————\n\n// —————————————————————————————\n// Section 3: Scheduling & Late (using start_date)\n// —————————————————————————————\n\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n\n  return jobs.map((job, idx) => {\n    // 1) Calculate cutoff for lateness (6 work-days before due)\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // 2) Pick or stamp a start time (use start_date from your sheet)\n    let start;\n    if (idx === 0) {\n      if (job.start_date) {\n        // reuse stored start_date\n        start = clampToWorkHours(new Date(job.start_date));\n      } else {\n        // first‐time at top: stamp “now” into start_date and persist\n        const nowIso = new Date().toISOString();\n        job.start_date = nowIso;\n        start = clampToWorkHours(new Date(nowIso));\n        axios\n          .put(`${API_ROOT}/orders/${job.id}`, { start_date: nowIso })\n          .catch(console.error);\n      }\n    } else {\n      // chain from previous job’s end + 30m\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // 3) Calculate run time → end\n    const qty   = job.quantity % 6 === 0\n      ? job.quantity\n      : Math.ceil(job.quantity / 6) * 6;\n    const runMs = (job.stitchCount / 30000) * (qty / 6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    // 4) Decorate for display\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  }); // closes jobs.map()\n\n} // closes scheduleMachineJobs()\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\n\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\n\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id] = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n\n  // find root of the chain\n  let root = id;\n  while (rev[root]) {\n    root = rev[root];\n  }\n\n  // build the chain array\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  // 1) Seed last‐saved drag order from localStorage\n  const saved1 = JSON.parse(localStorage.getItem('machine1Order') || '[]');\n  const saved2 = JSON.parse(localStorage.getItem('machine2Order') || '[]');\n\n  // 2) Columns state, seeded from saved arrays\n  const [columns, setColumns] = useState({\n    queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n    machine1: { id: 'machine1', title: 'Machine 1',    jobs: saved1.map(id => ({ id })) },\n    machine2: { id: 'machine2', title: 'Machine 2',    jobs: saved2.map(id => ({ id })) },\n  });\n\n  // 3) Placeholder state (persisted)\n  const [placeholders, setPlaceholders] = useState(() =>\n    JSON.parse(localStorage.getItem('placeholders') || '[]')\n  );\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  // 4) Links state (persisted)\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => { saveLinks(links); }, [links]);\n\n  // 5) Modal/form state\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null, company: '', quantity: '', stitchCount: '', inHand: '', dueType: 'Hard Date'\n  });\n\n  // 6) Sync‐button status\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // Helper: parse \"MM/DD/YYYY hh:mm:ss\" into ISO\n  function parseMMDDTimestamp(str) {\n    const [date, time] = (str||'').split(' ');\n    if (!date || !time) return null;\n    const [mo, da, yr] = date.split('/').map(Number);\n    const [h, m, s]    = time.split(':').map(Number);\n    if ([mo,da,yr,h,m,s].some(isNaN)) return null;\n    return new Date(yr,mo-1,da,h,m,s).toISOString();\n  }\n\n  // FETCH & MERGE preserving manual machine order\n  const fetchAll = async () => {\n    try {\n      // a) remember existing embroidery_start\n      const prevEmb = {};\n      Object.values(columns)\n        .flatMap(col => col.jobs)\n        .forEach(j => { prevEmb[j.id] = j.embroidery_start || j.start_date || ''; });\n\n      // b) fetch orders + embroideryList\n      const [{ data: orders }, { data: embList }] = await Promise.all([\n        axios.get(`${API_ROOT}/orders`),\n        axios.get(`${API_ROOT}/embroideryList`)\n      ]);\n\n      // c) build map id→sheet timestamp\n      const embMap = {};\n      embList.forEach(row => {\n        const id = String(row['Order #'] || '').trim();\n        if (id) embMap[id] = row['Embroidery Start Time'] || '';\n      });\n\n      // d) construct updated jobs\n      const jobById = {};\n      orders.forEach(o => {\n        if (!o.title) return;\n        const id  = String(o.id);\n        const raw = embMap[id] || prevEmb[id] || '';\n        const iso = parseMMDDTimestamp(raw) || raw || '';\n        jobById[id] = {\n          ...o,\n          id,\n          stitchCount:      o.stitch_count,\n          quantity:         o.quantity,\n          company:          o.company,\n          design:           o.design,\n          due_date:         o.due_date,\n          due_type:         o.due_type,\n          embroidery_start: iso,\n          start_date:       iso,\n          position:         o.position != null ? o.position : null,\n          linkedTo:         links[o.id] || null\n        };\n      });\n\n      // e) helper to rebuild a machine’s manual order\n      const rebuildColumn = colId => {\n        const currentIds = columns[colId].jobs.map(j => j.id);\n        const kept   = currentIds.map(id => jobById[id]).filter(Boolean);\n        const added  = Object.values(jobById)\n          .filter(j => {\n            const liveCol = (j.machineId === 'machine1' || j.machineId === 'machine2')\n                             ? j.machineId : 'queue';\n            return liveCol === colId && !currentIds.includes(j.id);\n          });\n        return [...kept, ...added];\n      };\n      const machine1Jobs = rebuildColumn('machine1');\n      const machine2Jobs = rebuildColumn('machine2');\n\n      // f) queue: auto‐sort by due date\n      const queueJobs = Object.values(jobById)\n        .filter(j => !['machine1','machine2'].includes(j.machineId))\n        .sort((a,b) => {\n          const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n          if (da && db) return da - db;\n          if (da) return -1;\n          if (db) return 1;\n          return 0;\n        });\n\n      // g) update state\n      setColumns({\n        queue:    { ...columns.queue,    jobs: queueJobs },\n        machine1: { ...columns.machine1, jobs: scheduleMachineJobs(machine1Jobs) },\n        machine2: { ...columns.machine2, jobs: scheduleMachineJobs(machine2Jobs) }\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // run once on mount\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n\n  // manual sync button\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n// === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id:         ph.id || `ph-${Date.now()}`,\n      company:    ph.company,\n      quantity:   +ph.quantity || 1,\n      stitchCount:+ph.stitchCount||30000,\n      due_date:   ph.inHand,\n      due_type:   ph.dueType,\n      machineId:  'queue',\n      position:   null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p=>p.id===ph.id?job:p));\n      setColumns(c => ({\n        ...c,\n        queue:    {...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)},\n        machine1: {...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j)},\n        machine2: {...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j)},\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {...c.queue, jobs: [job, ...c.queue.jobs]}\n      }));\n    }\n    setShowModal(false);\n    setPh({id:null,company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p=>p.id!==id));\n    setColumns(c => ({\n      ...c,\n      queue:    {...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)},\n      machine1: {...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id)},\n      machine2: {...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id)},\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: onDragEnd ===\nconst onDragEnd = useCallback((result) => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  // 1) Clone all three lists\n  const lists = {\n    queue:    Array.from(columns.queue.jobs),\n    machine1: Array.from(columns.machine1.jobs),\n    machine2: Array.from(columns.machine2.jobs),\n  };\n\n  // 2) Remove dragged chain from source\n  const sourceList = lists[source.droppableId];\n  const chain      = getChain(sourceList, draggableId);\n  const movedSet   = new Set(chain);\n  const movedJobs  = sourceList.filter(j => movedSet.has(j.id));\n  lists[source.droppableId] = sourceList.filter(j => !movedSet.has(j.id));\n\n  // 3) Insert into destination\n  const destList = lists[destination.droppableId];\n  destList.splice(destination.index, 0, ...movedJobs);\n  lists[destination.droppableId] = destList;\n\n  // 4) Build new columns state\n  const newCols = {\n    queue:    { ...columns.queue,    jobs: sortQueue(lists.queue) },\n    machine1: { ...columns.machine1, jobs: scheduleMachineJobs(lists.machine1) },\n    machine2: { ...columns.machine2, jobs: scheduleMachineJobs(lists.machine2) },\n  };\n\n  // 5) Apply it\n  setColumns(newCols);\n\n  // 6) Persist manual order so refresh won’t scramble them\n  localStorage.setItem(\n    'machine1Order',\n    JSON.stringify(newCols.machine1.jobs.map(j => j.id))\n  );\n  localStorage.setItem(\n    'machine2Order',\n    JSON.stringify(newCols.machine2.jobs.map(j => j.id))\n  );\n}, [\n  columns,\n  getChain,\n  scheduleMachineJobs,\n  sortQueue,\n  setColumns\n]);\n\n\n// === Section 9: Render / Return ===\nreturn (\n  <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 13 }}>\n\n    {/* Add / Sync Buttons */}\n    <button\n      onClick={() => setShowModal(true)}\n      style={{ marginRight: 8, fontSize: 13 }}\n    >\n      + Add Placeholder\n    </button>\n    <button onClick={handleSync} style={{ fontSize: 13 }}>\n      Sync from Sheet{' '}\n      {syncStatus === 'updated' && (\n        <span style={{ color: 'green', fontSize: 13 }}>✓ Updated</span>\n      )}\n    </button>\n\n    {/* Legend */}\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: 16,\n        margin: '12px 0',\n        flexWrap: 'wrap',\n        fontSize: 12,\n      }}\n    >\n      {[\n        { label: 'Placeholder', bg: LIGHT_YELLOW, border: DARK_YELLOW },\n        { label: 'Soft Date',    bg: LIGHT_GREY,   border: DARK_GREY   },\n        { label: 'Hard Date',    bg: LIGHT_PURPLE, border: DARK_PURPLE },\n        { label: 'Late',         bg: 'red',        border: 'red'       },\n      ].map((item, i) => (\n        <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n          <span\n            style={{\n              width: 12,\n              height: 12,\n              background: item.bg,\n              border: `2px solid ${item.border}`,\n              borderRadius: 2,\n            }}\n          />\n          {item.label}\n        </div>\n      ))}\n      <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n        <span style={{ fontSize: 14 }}>🔗</span> Link\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n        <span style={{ fontSize: 14 }}>❌</span> Unlink\n      </div>\n      {['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n        const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n        return (\n          <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n            <span\n              style={{\n                width: 12,\n                height: 12,\n                background: color,\n                borderRadius: 2,\n              }}\n            />\n            {txt}\n          </div>\n        );\n      })}\n    </div>\n\n    {/* Drag & Drop Columns */}\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n        {['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({ start: i, len });\n            i += len;\n          }\n          return (\n            <Droppable key={colId} droppableId={colId}>\n              {provided => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    position: 'relative',\n                    border: '1px solid #ccc',\n                    borderRadius: 4,\n                    width: colId === 'queue' ? 260 : 300,\n                    minHeight: 400,\n                    padding: 12,\n                    background: '#fafafa',\n                  }}\n                >\n                  <h4 style={{ textAlign: 'center', margin: '8px 0', fontSize: 13 }}>\n                    {col.title}\n                  </h4>\n\n                  {segments.map((seg, si) => (\n                    <div\n                      key={si}\n                      style={{\n                        position: 'relative',\n                        marginBottom: 6,\n                        zIndex: seg.len > 1 ? 3 : 1,\n                        outline: seg.len > 1 ? `6px solid #0288d1` : undefined,\n                        outlineOffset: seg.len > 1 ? '0px' : undefined,\n                        borderRadius: 4,\n                      }}\n                    >\n                      {jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                        const idx = seg.start + jIdx;\n                        const isPh = job.id.startsWith('ph-');\n                        const isSoft = job.due_type === 'Soft Date';\n                        const base = isPh\n                          ? LIGHT_YELLOW\n                          : isSoft\n                            ? LIGHT_GREY\n                            : LIGHT_PURPLE;\n                        let bg = base;\n                        let bCol = isPh\n                          ? DARK_YELLOW\n                          : isSoft\n                            ? DARK_GREY\n                            : DARK_PURPLE;\n                        if (job.isLate) {\n                          bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                          bCol = 'red';\n                        }\n                        const dt0 = (job.due_type || '')[0] || '';\n\n                        return (\n                          <Draggable key={job.id} draggableId={job.id} index={idx}>\n                            {prov => (\n                              <div\n                                ref={prov.innerRef}\n                                {...prov.draggableProps}\n                                {...prov.dragHandleProps}\n                                style={{\n                                  position: 'relative',\n                                  display: 'grid',\n                                  gridTemplateColumns: '1fr auto',\n                                  gridTemplateRows: 'auto auto auto auto',\n                                  columnGap: 6,\n                                  rowGap: 4,\n                                  padding: '6px 28px 6px 6px',\n                                  margin: `0 0 ${jIdx < seg.len - 1 ? 6 : 0}px 0`,\n                                  background: bg,\n                                  border: `2px solid ${bCol}`,\n                                  borderRadius: 4,\n                                  zIndex: 2,\n                                  ...prov.draggableProps.style,\n                                }}\n                              >\n                                {jIdx === 0 && seg.len > 1 && (\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      right: 0,\n                                      width: 4,\n                                      height: '100%',\n                                      background: '#0288d1',\n                                      zIndex: 4,\n                                    }}\n                                  />\n                                )}\n\n                                {/* Row1 Col1: ID + Company */}\n                                <span\n                                  style={{\n                                    gridRow: 1,\n                                    gridColumn: 1,\n                                    background: base,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    fontSize: 13,\n                                    fontWeight: 'bold',\n                                  }}\n                                >\n                                  <span\n                                    style={{\n                                      display: 'inline-block',\n                                      width: 20,\n                                      height: 20,\n                                      borderRadius: '50%',\n                                      background: '#000',\n                                      color: base,\n                                      lineHeight: '20px',\n                                      textAlign: 'center',\n                                      fontSize: isPh ? 13 : 11,\n                                      fontWeight: 'bold',\n                                      marginRight: 4,\n                                    }}\n                                  >\n                                    {isPh ? '*' : job.id}\n                                  </span>\n                                  {job.company}\n                                </span>\n\n                                {/* Row1 Col2: Quantity */}\n                                <span\n                                  style={{\n                                    gridRow: 1,\n                                    gridColumn: 2,\n                                    justifySelf: 'end',\n                                    background: base,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    fontSize: 15,\n                                    fontWeight: 'bold',\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                  }}\n                                >\n                                  {job.quantity}\n                                </span>\n\n                                {/* Row2 Col1: Design */}\n                                <span\n                                  style={{\n                                    gridRow: 2,\n                                    gridColumn: 1,\n                                    background: base,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    fontSize: 13,\n                                  }}\n                                >\n                                  {job.design?.slice(0, 22)}\n                                </span>\n\n                                {/* Row2 Col2: Start */}\n                                {job.start && (\n                                  <span\n                                    style={{\n                                      gridRow: 2,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      background: BUBBLE_START,\n                                      padding: '0 4px',\n                                      borderRadius: 10,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.start}\n                                  </span>\n                                )}\n\n                                {/* Row3 Col1: EED */}\n                                <span\n                                  style={{\n                                    gridRow: 3,\n                                    gridColumn: 1,\n                                    background: BUBBLE_END,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    fontSize: 13,\n                                  }}\n                                >\n                                  {`EED: ${fmtMMDD(\n                                    subWorkDays(parseDueDate(job.due_date), 6)\n                                  )}`}\n                                </span>\n\n                                {/* Row3 Col2: End */}\n                                {job.end && (\n                                  <span\n                                    style={{\n                                      gridRow: 3,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      background: BUBBLE_END,\n                                      padding: '0 4px',\n                                      borderRadius: 10,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.end}\n                                  </span>\n                                )}\n\n                                {/* Row4 Col1: IHD */}\n                                <span\n                                  style={{\n                                    gridRow: 4,\n                                    gridColumn: 1,\n                                    background: BUBBLE_DELIV,\n                                    padding: '0 4px',\n                                    borderRadius: 4,\n                                    whiteSpace: 'nowrap',\n                                    fontSize: 13,\n                                  }}\n                                >\n                                  {`IHD: ${fmtMMDD(job.due_date)}`}\n                                </span>\n\n                                {/* Row4 Col2: Delivery */}\n                                {job.delivery && (\n                                  <span\n                                    style={{\n                                      gridRow: 4,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      background: BUBBLE_DELIV,\n                                      padding: '0 4px',\n                                      borderRadius: 10,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.delivery}\n                                  </span>\n                                )}\n\n                                {/* Top-right tab: Due-Type */}\n                                <div\n                                  style={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    right: 0,\n                                    width: 28,\n                                    height: 28,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    background: base,\n                                    borderTopRightRadius: 4,\n                                    borderBottomLeftRadius: 4,\n                                    zIndex: 4,\n                                    fontSize: 11,\n                                    fontWeight: 'bold',\n                                  }}\n                                >\n                                  {dt0}\n                                </div>\n\n                                {/* Link / Unlink toggle */}\n                                {idx < jobs.length - 1 && (\n                                  <div\n                                    onClick={() => toggleLink(colId, idx)}\n                                    style={{\n                                      position: 'absolute',\n                                      top: 28,\n                                      right: 0,\n                                      width: 28,\n                                      height: 'calc(100% - 28px)',\n                                      display: 'flex',\n                                      flexDirection: 'column',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      cursor: 'pointer',\n                                      background: base,\n                                      borderBottomRightRadius: 4,\n                                      zIndex: 4,\n                                    }}\n                                  >\n                                    {job.linkedTo === jobs[idx + 1]?.id\n                                      ? '❌'\n                                      : '🔗'}\n                                  </div>\n                                )}\n\n                                {/* Placeholder edit/delete */}\n                                {job.id.startsWith('ph-') && (\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      right: 0,\n                                      width: 28,\n                                      height: '100%',\n                                      display: 'flex',\n                                      flexDirection: 'column',\n                                      alignItems: 'center',\n                                      justifyContent: 'flex-start',\n                                      background: base,\n                                      borderTopRightRadius: 4,\n                                      borderBottomRightRadius: 4,\n                                      zIndex: 4,\n                                    }}\n                                  >\n                                    <span\n                                      onClick={() => editPlaceholder(job)}\n                                      style={{\n                                        cursor: 'pointer',\n                                        fontSize: 12,\n                                        margin: 4,\n                                      }}\n                                    >\n                                      ✎\n                                    </span>\n                                    <span\n                                      onClick={() => removePlaceholder(job.id)}\n                                      style={{\n                                        cursor: 'pointer',\n                                        fontSize: 12,\n                                        margin: 4,\n                                      }}\n                                    >\n                                      ✖\n                                    </span>\n                                  </div>\n                                )}\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                    </div>\n                  ))}\n\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n        })}\n      </div>\n    </DragDropContext>\n  </div>\n);\n} // end of App component\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}