{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === Section 1: State & Handlers for Placeholder Modal ===\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company: '',\n    designName: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [jobs, setJobs] = useState([]);\n  const addPlaceholderJob = () => {\n    const newJob = {\n      id: `ph-${Date.now()}`,\n      company: ph.company,\n      designName: ph.designName,\n      quantity: Number(ph.quantity),\n      stitchCount: Number(ph.stitchCount),\n      inHand: ph.inHand,\n      dueType: ph.dueType\n    };\n    const updated = [...jobs, newJob].sort((a, b) => a.inHand.localeCompare(b.inHand));\n    setJobs(updated);\n    setPh({\n      company: '',\n      designName: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n    setShowModal(false);\n  };\n  // === Section 2: Helpers ===\n\n  function isHoliday(dt) {\n    return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n  }\n  function isWorkday(dt) {\n    return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n  }\n  function clampToWorkHours(dt) {\n    let d = new Date(dt);\n    while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    }\n    if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      return clampToWorkHours(d);\n    }\n    return d;\n  }\n  function addWorkTime(start, ms) {\n    let remaining = ms;\n    let current = clampToWorkHours(start);\n    while (remaining > 0) {\n      const endOfDay = new Date(current);\n      endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n      const free = endOfDay.getTime() - current.getTime();\n      if (free <= 0) {\n        current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n      } else if (remaining <= free) {\n        current = new Date(current.getTime() + remaining);\n        remaining = 0;\n      } else {\n        remaining -= free;\n        current = new Date(endOfDay);\n      }\n    }\n    return current;\n  }\n  function fmtDT(dt) {\n    const pad = n => String(n).padStart(2, '0');\n    const month = pad(dt.getMonth() + 1);\n    const day = pad(dt.getDate());\n    let h = dt.getHours(),\n      m = pad(dt.getMinutes()),\n      ap = h >= 12 ? 'PM' : 'AM';\n    h = h % 12 || 12;\n    return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n  }\n  function parseDueDate(d) {\n    if (!d) return null;\n    if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n    const parts = d.split('/');\n    if (parts.length >= 2) {\n      const mo = +parts[0],\n        da = +parts[1],\n        yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n      if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n    }\n    const dt = new Date(d);\n    return isNaN(dt) ? null : dt;\n  }\n  function addWorkDays(start, days) {\n    let d = new Date(start),\n      added = 0;\n    while (added < days) {\n      d.setDate(d.getDate() + 1);\n      if (isWorkday(d)) added++;\n    }\n    return d;\n  }\n  function subWorkDays(start, days) {\n    let d = new Date(start),\n      removed = 0;\n    while (removed < days) {\n      d.setDate(d.getDate() - 1);\n      if (isWorkday(d)) removed++;\n    }\n    return d;\n  }\n  function fmtMMDD(d) {\n    const dt = new Date(d);\n    const mo = String(dt.getMonth() + 1).padStart(2, '0');\n    const da = String(dt.getDate()).padStart(2, '0');\n    return `${mo}/${da}`;\n  }\n  function sortQueue(arr) {\n    return [...arr].sort((a, b) => {\n      const da = parseDueDate(a.due_date),\n        db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    });\n  }\n\n  // —————————————————————————————\n  // SCHEDULING + LATE (persist embroidery_start)\n  // —————————————————————————————\n\n  // —————————————————————————————\n  // === Section 3: Scheduling & Late (using embroidery_start) ===\n  function scheduleMachineJobs(jobs) {\n    let prevEnd = null;\n    return jobs.map((job, idx) => {\n      // 1) Calculate cutoff for lateness (6 work-days before due)\n      const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n      const cutoff = new Date(eedDay);\n      cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n      // 2) Determine this job’s start time\n      let start;\n      if (idx === 0) {\n        // First job: prefer Embroidery List timestamp\n        if (job.embroidery_start) {\n          start = clampToWorkHours(new Date(job.embroidery_start));\n        } else {\n          // Fallback: stamp “now” into embroidery_start and persist\n          const nowIso = new Date().toISOString();\n          job.embroidery_start = nowIso;\n          start = clampToWorkHours(new Date(nowIso));\n          axios.put(`${API_ROOT}/orders/${job.id}`, {\n            embroidery_start: nowIso\n          }).catch(console.error);\n        }\n      } else {\n        // Subsequent jobs: 30 minutes after the prior end\n        start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n      }\n\n      // 3) Calculate run time → end\n      const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n      const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n      const end = addWorkTime(start, runMs);\n\n      // 4) Decorate for display\n      job._rawStart = start;\n      job._rawEnd = end;\n      job.start = fmtDT(start);\n      job.end = fmtDT(end);\n      job.delivery = fmtMMDD(addWorkDays(end, 6));\n      job.isLate = end > cutoff;\n      prevEnd = end;\n      return job;\n    });\n  }\n\n  // === Section 4: Link Utilities ===\n  function loadLinks() {\n    try {\n      return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n    } catch {\n      return {};\n    }\n  }\n  function saveLinks(map) {\n    localStorage.setItem('jobLinks', JSON.stringify(map));\n  }\n  function getChain(jobs, id) {\n    const fwd = {},\n      rev = {};\n    jobs.forEach(j => {\n      if (j.linkedTo) {\n        fwd[j.id] = j.linkedTo;\n        rev[j.linkedTo] = j.id;\n      }\n    });\n\n    // find root of the chain\n    let root = id;\n    while (rev[root]) {\n      root = rev[root];\n    }\n\n    // build the chain array\n    const chain = [];\n    let cur = root;\n    while (cur) {\n      chain.push(cur);\n      cur = fwd[cur];\n    }\n    return chain;\n  }\n\n  // === Section 5: FETCH & MERGE (with Manual Assignment & Ordering) ===\n  const fetchAll = async () => {\n    console.log('▶️ fetchAll: starting data load');\n    try {\n      // 1) Load manual state from localStorage\n      const manualState = JSON.parse(localStorage.getItem('manualState') || JSON.stringify({\n        machine1: [],\n        machine2: []\n      }));\n      console.log('  – manualState:', manualState);\n\n      // 2) Preserve any existing embroidery_start\n      const prevEmb = {};\n      Object.values(columns).flatMap(col => col.jobs).forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n\n      // 3) Fetch orders + embroideryList\n      const [{\n        data: orders\n      }, {\n        data: embList\n      }] = await Promise.all([axios.get(`${API_ROOT}/orders`), axios.get(`${API_ROOT}/embroideryList`)]);\n\n      // 4) Build embroidery-start map\n      const embMap = {};\n      embList.forEach(row => {\n        const id = String(row['Order #'] || '').trim();\n        if (id) embMap[id] = row['Embroidery Start Time'] || '';\n      });\n\n      // 5) Build up jobById\n      const jobById = {};\n      orders.forEach(o => {\n        var _ref, _embMap$id, _ref2, _o$machineId;\n        if (o.id == null) return;\n        const id = String(o.id).trim();\n        const rawTs = (_ref = (_embMap$id = embMap[id]) !== null && _embMap$id !== void 0 ? _embMap$id : prevEmb[id]) !== null && _ref !== void 0 ? _ref : '';\n        jobById[id] = {\n          ...o,\n          id,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          embroidery_start: rawTs,\n          start_date: rawTs,\n          linkedTo: links[o.id] || null,\n          // server-side machine assignment:\n          machineId: (_ref2 = (_o$machineId = o.machineId) !== null && _o$machineId !== void 0 ? _o$machineId : o.machine) !== null && _ref2 !== void 0 ? _ref2 : ''\n        };\n      });\n\n      // 6) Override with any manualState assignment\n      ;\n      ['machine1', 'machine2'].forEach(col => {\n        (manualState[col] || []).forEach(id => {\n          if (jobById[id]) jobById[id].machineId = col;\n        });\n      });\n\n      // 7) Build each machine in manual order + append new arrivals\n      const buildMachine = colId => {\n        const manualList = manualState[colId] || [];\n        const existing = manualList.filter(id => jobById[id]).map(id => jobById[id]);\n        const appended = Object.values(jobById).filter(j => j.machineId === colId && !manualList.includes(j.id));\n        return [...existing, ...appended];\n      };\n      const machine1Jobs = buildMachine('machine1');\n      const machine2Jobs = buildMachine('machine2');\n\n      // 8) Build queue: everything else, sorted by due date\n      const queueJobs = Object.values(jobById).filter(j => !['machine1', 'machine2'].includes(j.machineId)).map(j => ({\n        ...j,\n        start_date: '',\n        _rawStart: null,\n        _rawEnd: null,\n        start: '',\n        end: '',\n        delivery: '',\n        isLate: false\n      })).sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n\n      // 9) Schedule runtimes (machines only)\n      const next = {\n        queue: {\n          ...columns.queue,\n          jobs: queueJobs\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(machine1Jobs)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(machine2Jobs)\n        }\n      };\n      console.log('▶️ fetchAll: setting columns →', next);\n      setColumns(next);\n    } catch (err) {\n      console.error('⚠️ fetchAll error:', err);\n    }\n  };\n\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: Drag & Drop Handler (with Manual Assignment/Order) ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const srcId = source.droppableId;\n    const dstId = destination.droppableId;\n    // no-op if dropped back in same position\n    if (srcId === dstId && source.index === destination.index) return;\n\n    // 1) Load manualState\n    const manualState = JSON.parse(localStorage.getItem('manualState') || JSON.stringify({\n      machine1: [],\n      machine2: []\n    }));\n\n    // 2) If same machine, just reorder its array\n    if (srcId === dstId && (srcId === 'machine1' || srcId === 'machine2')) {\n      const arr = Array.from(manualState[srcId] || []);\n      // find & remove\n      const from = arr.indexOf(draggableId);\n      if (from > -1) {\n        arr.splice(from, 1);\n        arr.splice(destination.index, 0, draggableId);\n        manualState[srcId] = arr;\n      }\n    } else {\n      // 3) Cross-column move: remove from any machine lists\n      ['machine1', 'machine2'].forEach(col => {\n        manualState[col] = (manualState[col] || []).filter(id => id !== draggableId);\n      });\n      // 4) If dropped into a machine, insert into that machine’s manual list\n      if (dstId === 'machine1' || dstId === 'machine2') {\n        const arr = Array.from(manualState[dstId] || []);\n        arr.splice(destination.index, 0, draggableId);\n        manualState[dstId] = arr;\n      }\n    }\n\n    // 5) Persist manualState\n    localStorage.setItem('manualState', JSON.stringify(manualState));\n\n    // 6) Now update UI immediately (same as before)\n    const srcJobs = Array.from(columns[srcId].jobs);\n    const [moved] = srcJobs.splice(source.index, 1);\n\n    // clear schedule when moving into queue\n    const jobForDest = dstId === 'queue' ? {\n      ...moved,\n      start_date: '',\n      _rawStart: null,\n      _rawEnd: null,\n      start: '',\n      end: '',\n      delivery: '',\n      isLate: false\n    } : moved;\n    const dstJobs = Array.from(columns[dstId].jobs);\n    dstJobs.splice(destination.index, 0, jobForDest);\n    const finalDst = dstId === 'queue' ? dstJobs.sort((a, b) => {\n      const da = parseDueDate(a.due_date),\n        db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    }) : scheduleMachineJobs(dstJobs);\n    setColumns({\n      ...columns,\n      [srcId]: {\n        ...columns[srcId],\n        jobs: srcJobs\n      },\n      [dstId]: {\n        ...columns[dstId],\n        jobs: finalDst\n      }\n    });\n  };\n\n  // === Section 9: Render / Return ===\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal && /*#__PURE__*/_jsxDEV(AddPlaceholderModal, {\n      ph: ph,\n      setPh: setPh,\n      addPlaceholderJob: addPlaceholderJob,\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16,\n        fontFamily: 'sans-serif',\n        fontSize: 13\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        style: {\n          marginRight: 8,\n          fontSize: 13\n        },\n        children: \"+ Add Placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSync,\n        style: {\n          fontSize: 13\n        },\n        children: [\"Sync from Sheet\", ' ', syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green',\n            fontSize: 13\n          },\n          children: \"\\u2713 Updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 16,\n          margin: '12px 0',\n          flexWrap: 'wrap',\n          fontSize: 12\n        },\n        children: [[{\n          label: 'Placeholder',\n          bg: LIGHT_YELLOW,\n          border: DARK_YELLOW\n        }, {\n          label: 'Soft Date',\n          bg: LIGHT_GREY,\n          border: DARK_GREY\n        }, {\n          label: 'Hard Date',\n          bg: LIGHT_PURPLE,\n          border: DARK_PURPLE\n        }, {\n          label: 'Late',\n          bg: 'red',\n          border: 'red'\n        }].map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: 12,\n              height: 12,\n              background: item.bg,\n              border: `2px solid ${item.border}`,\n              borderRadius: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), item.label]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 14\n            },\n            children: \"\\uD83D\\uDD17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 11\n          }, this), \" Link\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 14\n            },\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 11\n          }, this), \" Unlink\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 9\n        }, this), ['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n          const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                width: 12,\n                height: 12,\n                background: color,\n                borderRadius: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this), txt]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 16,\n            marginTop: 16\n          },\n          children: ['queue', 'machine1', 'machine2'].map(colId => {\n            const col = columns[colId] || {};\n            const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n            // build segments of linked chains\n            const segments = [];\n            let i = 0;\n            while (i < jobs.length) {\n              const chain = getChain(jobs, jobs[i].id);\n              const len = chain.length > 1 ? chain.length : 1;\n              segments.push({\n                start: i,\n                len\n              });\n              i += len;\n            }\n            const GAP = 6,\n              OUTLINE = 6;\n            return /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: colId,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                style: {\n                  position: 'relative',\n                  border: '1px solid #ccc',\n                  borderRadius: 4,\n                  width: colId === 'queue' ? 260 : 300,\n                  minHeight: 400,\n                  padding: 12,\n                  background: '#fafafa'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    textAlign: 'center',\n                    margin: '8px 0',\n                    fontSize: 13\n                  },\n                  children: col.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 21\n                }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'relative',\n                    marginBottom: GAP,\n                    zIndex: seg.len > 1 ? 3 : 1,\n                    outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                    outlineOffset: seg.len > 1 ? '0px' : undefined,\n                    borderRadius: 4\n                  },\n                  children: [jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                    const idx = seg.start + jIdx;\n                    const isPh = job.id.startsWith('ph-');\n                    const isSoft = job.due_type === 'Soft Date';\n                    const base = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                    let bg = base;\n                    let bCol = isPh ? DARK_YELLOW : isSoft ? DARK_GREY : DARK_PURPLE;\n                    if (job.isLate) {\n                      bg = `repeating-linear-gradient(\n                              45deg,\n                              ${base}, ${base} 6px,\n                              rgba(255,0,0,0.5) 6px,\n                              rgba(255,0,0,0.5) 12px\n                            )`;\n                      bCol = 'red';\n                    }\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: job.id,\n                      index: idx,\n                      children: prov => {\n                        var _jobs;\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          ref: prov.innerRef,\n                          ...prov.draggableProps,\n                          ...prov.dragHandleProps,\n                          style: {\n                            position: 'relative',\n                            display: 'grid',\n                            gridTemplateColumns: '1fr auto',\n                            gridTemplateRows: 'auto auto auto auto',\n                            columnGap: 6,\n                            rowGap: 4,\n                            padding: '6px 28px 6px 6px',\n                            margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                            background: bg,\n                            border: `2px solid ${bCol}`,\n                            borderRadius: 4,\n                            zIndex: 2,\n                            ...prov.draggableProps.style\n                          },\n                          children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              position: 'absolute',\n                              top: 0,\n                              right: 0,\n                              width: 4,\n                              height: '100%',\n                              background: '#0288d1',\n                              zIndex: 4\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 690,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 1,\n                              gridColumn: 1,\n                              background: base,\n                              padding: '0 4px',\n                              borderRadius: 4,\n                              whiteSpace: 'nowrap',\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis',\n                              fontSize: 13,\n                              fontWeight: 'bold'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                display: 'inline-block',\n                                width: 20,\n                                height: 20,\n                                borderRadius: '50%',\n                                background: '#000',\n                                color: base,\n                                lineHeight: '20px',\n                                textAlign: 'center',\n                                fontSize: isPh ? 13 : 11,\n                                fontWeight: 'bold',\n                                marginRight: 4\n                              },\n                              children: isPh ? '*' : job.id\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 718,\n                              columnNumber: 37\n                            }, this), job.company]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 704,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 1,\n                              gridColumn: 2,\n                              justifySelf: 'end',\n                              background: base,\n                              padding: '0 4px',\n                              borderRadius: 4,\n                              fontSize: 15,\n                              fontWeight: 'bold',\n                              whiteSpace: 'nowrap',\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis'\n                            },\n                            children: job.quantity\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 739,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 2,\n                              gridColumn: 1,\n                              background: base,\n                              padding: '0 4px',\n                              borderRadius: 4,\n                              whiteSpace: 'nowrap',\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis',\n                              fontSize: 13\n                            },\n                            children: job.designName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 758,\n                            columnNumber: 35\n                          }, this), job.start && /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 2,\n                              gridColumn: 2,\n                              justifySelf: 'end',\n                              background: BUBBLE_START,\n                              padding: '0 4px',\n                              borderRadius: 10,\n                              whiteSpace: 'nowrap',\n                              fontSize: 13\n                            },\n                            children: job.start\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 776,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 3,\n                              gridColumn: 1,\n                              background: BUBBLE_END,\n                              padding: '0 4px',\n                              borderRadius: 4,\n                              whiteSpace: 'nowrap',\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis',\n                              fontSize: 13\n                            },\n                            children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 793,\n                            columnNumber: 35\n                          }, this), job.end && /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 3,\n                              gridColumn: 2,\n                              justifySelf: 'end',\n                              background: BUBBLE_END,\n                              padding: '0 4px',\n                              borderRadius: 10,\n                              whiteSpace: 'nowrap',\n                              fontSize: 13\n                            },\n                            children: job.end\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 811,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 4,\n                              gridColumn: 1,\n                              background: BUBBLE_DELIV,\n                              padding: '0 4px',\n                              borderRadius: 4,\n                              whiteSpace: 'nowrap',\n                              fontSize: 13\n                            },\n                            children: `IHD: ${fmtMMDD(job.due_date)}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 828,\n                            columnNumber: 35\n                          }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              gridRow: 4,\n                              gridColumn: 2,\n                              justifySelf: 'end',\n                              background: BUBBLE_DELIV,\n                              padding: '0 4px',\n                              borderRadius: 10,\n                              whiteSpace: 'nowrap',\n                              fontSize: 13\n                            },\n                            children: job.delivery\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 844,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              position: 'absolute',\n                              top: 0,\n                              right: 0,\n                              width: 28,\n                              height: 28,\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              background: base,\n                              borderTopRightRadius: 4,\n                              borderBottomLeftRadius: 4,\n                              zIndex: 4,\n                              fontSize: 11,\n                              fontWeight: 'bold'\n                            },\n                            children: (job.due_type || '')[0] || ''\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 861,\n                            columnNumber: 35\n                          }, this), jIdx < seg.len - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                            onClick: () => toggleLink(colId, idx),\n                            style: {\n                              position: 'absolute',\n                              top: 28,\n                              right: 0,\n                              width: 28,\n                              height: `calc(100% - 28px)`,\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              cursor: 'pointer',\n                              background: base,\n                              borderBottomRightRadius: 4,\n                              zIndex: 4\n                            },\n                            children: job.linkedTo === ((_jobs = jobs[idx + 1]) === null || _jobs === void 0 ? void 0 : _jobs.id) ? '❌' : '🔗'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 884,\n                            columnNumber: 37\n                          }, this), isPh && /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              position: 'absolute',\n                              top: 0,\n                              right: 0,\n                              width: 28,\n                              height: '100%',\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: 'center',\n                              justifyContent: 'flex-start',\n                              background: base,\n                              borderTopRightRadius: 4,\n                              borderBottomRightRadius: 4,\n                              zIndex: 4\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              onClick: () => editPlaceholder(job),\n                              style: {\n                                cursor: 'pointer',\n                                fontSize: 12,\n                                margin: 4\n                              },\n                              children: \"\\u270E\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 925,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              onClick: () => removePlaceholder(job.id),\n                              style: {\n                                cursor: 'pointer',\n                                fontSize: 12,\n                                margin: 4\n                              },\n                              children: \"\\u2716\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 931,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 908,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 669,\n                          columnNumber: 33\n                        }, this);\n                      }\n                    }, job.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 667,\n                      columnNumber: 29\n                    }, this);\n                  }), provided.placeholder]\n                }, si, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this)\n            }, colId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n// === Section 10: AddPlaceholderModal Component ===\n_s(App, \"sSf3Ua3aSFgPkpZxzOBfniQOwmU=\");\n_c = App;\nfunction AddPlaceholderModal({\n  ph,\n  setPh,\n  addPlaceholderJob,\n  setShowModal\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fff',\n        padding: 24,\n        borderRadius: 8,\n        width: 360,\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"New Placeholder Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ph.company,\n          onChange: e => setPh({\n            ...ph,\n            company: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Design Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ph.designName,\n          onChange: e => setPh({\n            ...ph,\n            designName: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ph.quantity,\n          onChange: e => setPh({\n            ...ph,\n            quantity: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Stitch Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ph.stitchCount,\n          onChange: e => setPh({\n            ...ph,\n            stitchCount: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"In-Hand Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: ph.inHand,\n          onChange: e => setPh({\n            ...ph,\n            inHand: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Due Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: ph.dueType,\n          onChange: e => setPh({\n            ...ph,\n            dueType: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Hard Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Soft Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          style: {\n            padding: '6px 12px'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPlaceholderJob,\n          style: {\n            padding: '6px 12px'\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 961,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AddPlaceholderModal;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddPlaceholderModal\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showModal","setShowModal","ph","setPh","company","designName","quantity","stitchCount","inHand","dueType","jobs","setJobs","addPlaceholderJob","newJob","id","Date","now","Number","updated","sort","a","b","localeCompare","isHoliday","dt","isNaN","HOLIDAYS","includes","toISOString","slice","isWorkday","WEEKENDS","getDay","clampToWorkHours","d","getHours","WORK_START_HR","getMinutes","WORK_START_MIN","setDate","getDate","setHours","WORK_END_HR","WORK_END_MIN","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","due_date","db","scheduleMachineJobs","prevEnd","map","job","idx","eedDay","cutoff","embroidery_start","nowIso","put","API_ROOT","catch","console","error","qty","Math","ceil","runMs","end","_rawStart","_rawEnd","delivery","isLate","loadLinks","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","fwd","rev","forEach","j","linkedTo","root","chain","cur","push","fetchAll","log","manualState","machine1","machine2","prevEmb","Object","values","columns","flatMap","col","start_date","data","orders","embList","Promise","all","get","embMap","row","trim","jobById","o","_ref","_embMap$id","_ref2","_o$machineId","rawTs","stitch_count","design","due_type","links","machineId","machine","buildMachine","colId","manualList","existing","filter","appended","machine1Jobs","machine2Jobs","queueJobs","next","queue","setColumns","err","submitPlaceholder","position","setPlaceholders","ps","p","c","removePlaceholder","editPlaceholder","toggleLink","cols","below","setLinks","l","onDragEnd","result","source","destination","draggableId","srcId","droppableId","dstId","index","Array","from","indexOf","splice","srcJobs","moved","jobForDest","dstJobs","finalDst","children","AddPlaceholderModal","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","fontFamily","fontSize","onClick","marginRight","handleSync","syncStatus","color","display","alignItems","gap","margin","flexWrap","label","bg","LIGHT_YELLOW","border","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","item","i","width","height","background","borderRadius","txt","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","marginTop","isArray","segments","len","GAP","OUTLINE","provided","ref","innerRef","droppableProps","minHeight","textAlign","title","seg","si","marginBottom","zIndex","outline","undefined","outlineOffset","jIdx","isPh","startsWith","isSoft","base","bCol","prov","_jobs","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","top","right","gridRow","gridColumn","whiteSpace","overflow","textOverflow","fontWeight","lineHeight","justifySelf","justifyContent","borderTopRightRadius","borderBottomLeftRadius","flexDirection","cursor","borderBottomRightRadius","placeholder","_c","left","backgroundColor","boxShadow","type","value","onChange","e","target","_c2","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === Section 1: State & Handlers for Placeholder Modal ===\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n\n  const [ph, setPh] = useState({\n    company: '',\n    designName: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date',\n  });\n\n  const [jobs, setJobs] = useState([]);\n\n  const addPlaceholderJob = () => {\n    const newJob = {\n      id: `ph-${Date.now()}`,\n      company: ph.company,\n      designName: ph.designName,\n      quantity: Number(ph.quantity),\n      stitchCount: Number(ph.stitchCount),\n      inHand: ph.inHand,\n      dueType: ph.dueType,\n    };\n    const updated = [...jobs, newJob].sort((a, b) =>\n      a.inHand.localeCompare(b.inHand)\n    );\n    setJobs(updated);\n\n    setPh({\n      company: '',\n      designName: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date',\n    });\n    setShowModal(false);\n  };\n// === Section 2: Helpers ===\n\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\n\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\n\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\n\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\n\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\n\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (persist embroidery_start)\n// —————————————————————————————\n\n// —————————————————————————————\n// === Section 3: Scheduling & Late (using embroidery_start) ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n\n  return jobs.map((job, idx) => {\n    // 1) Calculate cutoff for lateness (6 work-days before due)\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // 2) Determine this job’s start time\n    let start;\n    if (idx === 0) {\n      // First job: prefer Embroidery List timestamp\n      if (job.embroidery_start) {\n        start = clampToWorkHours(new Date(job.embroidery_start));\n      } else {\n        // Fallback: stamp “now” into embroidery_start and persist\n        const nowIso = new Date().toISOString();\n        job.embroidery_start = nowIso;\n        start = clampToWorkHours(new Date(nowIso));\n\n        axios\n          .put(\n            `${API_ROOT}/orders/${job.id}`,\n            { embroidery_start: nowIso }\n          )\n          .catch(console.error);\n      }\n    } else {\n      // Subsequent jobs: 30 minutes after the prior end\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // 3) Calculate run time → end\n    const qty   = job.quantity % 6 === 0\n      ? job.quantity\n      : Math.ceil(job.quantity / 6) * 6;\n    const runMs = (job.stitchCount / 30000) * (qty / 6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    // 4) Decorate for display\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\n\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\n\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]    = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n\n  // find root of the chain\n  let root = id;\n  while (rev[root]) {\n    root = rev[root];\n  }\n\n  // build the chain array\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// === Section 5: FETCH & MERGE (with Manual Assignment & Ordering) ===\nconst fetchAll = async () => {\n  console.log('▶️ fetchAll: starting data load');\n\n  try {\n    // 1) Load manual state from localStorage\n    const manualState = JSON.parse(\n      localStorage.getItem('manualState') ||\n      JSON.stringify({ machine1: [], machine2: [] })\n    );\n    console.log('  – manualState:', manualState);\n\n    // 2) Preserve any existing embroidery_start\n    const prevEmb = {};\n    Object.values(columns)\n      .flatMap(col => col.jobs)\n      .forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n\n    // 3) Fetch orders + embroideryList\n    const [{ data: orders }, { data: embList }] = await Promise.all([\n      axios.get(`${API_ROOT}/orders`),\n      axios.get(`${API_ROOT}/embroideryList`)\n    ]);\n\n    // 4) Build embroidery-start map\n    const embMap = {};\n    embList.forEach(row => {\n      const id = String(row['Order #'] || '').trim();\n      if (id) embMap[id] = row['Embroidery Start Time'] || '';\n    });\n\n    // 5) Build up jobById\n    const jobById = {};\n    orders.forEach(o => {\n      if (o.id == null) return;\n      const id    = String(o.id).trim();\n      const rawTs = embMap[id] ?? prevEmb[id] ?? '';\n      jobById[id] = {\n        ...o,\n        id,\n        stitchCount: o.stitch_count,\n        quantity:    o.quantity,\n        company:     o.company,\n        design:      o.design,\n        due_date:    o.due_date,\n        due_type:    o.due_type,\n        embroidery_start: rawTs,\n        start_date:  rawTs,\n        linkedTo:    links[o.id] || null,\n        // server-side machine assignment:\n        machineId:   o.machineId ?? o.machine ?? ''\n      };\n    });\n\n    // 6) Override with any manualState assignment\n    ;['machine1','machine2'].forEach(col => {\n      (manualState[col] || []).forEach(id => {\n        if (jobById[id]) jobById[id].machineId = col;\n      });\n    });\n\n    // 7) Build each machine in manual order + append new arrivals\n    const buildMachine = colId => {\n      const manualList = manualState[colId] || [];\n      const existing   = manualList.filter(id => jobById[id]).map(id => jobById[id]);\n      const appended   = Object.values(jobById)\n        .filter(j => j.machineId === colId && !manualList.includes(j.id));\n      return [...existing, ...appended];\n    };\n    const machine1Jobs = buildMachine('machine1');\n    const machine2Jobs = buildMachine('machine2');\n\n    // 8) Build queue: everything else, sorted by due date\n    const queueJobs = Object.values(jobById)\n      .filter(j => !['machine1','machine2'].includes(j.machineId))\n      .map(j => ({ \n        ...j,\n        start_date: '',\n        _rawStart:  null,\n        _rawEnd:    null,\n        start:      '',\n        end:        '',\n        delivery:   '',\n        isLate:     false\n      }))\n      .sort((a, b) => {\n        const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n\n    // 9) Schedule runtimes (machines only)\n    const next = {\n      queue:    { ...columns.queue,    jobs: queueJobs },\n      machine1: { ...columns.machine1, jobs: scheduleMachineJobs(machine1Jobs) },\n      machine2: { ...columns.machine2, jobs: scheduleMachineJobs(machine2Jobs) },\n    };\n    console.log('▶️ fetchAll: setting columns →', next);\n    setColumns(next);\n\n  } catch (err) {\n    console.error('⚠️ fetchAll error:', err);\n  }\n};\n\n\n// === Section 6: Placeholder CRUD ===\nconst submitPlaceholder = () => {\nconst job = {\nid:         ph.id || `ph-${Date.now()}`,\ncompany:    ph.company,\nquantity:   +ph.quantity || 1,\nstitchCount:+ph.stitchCount||30000,\ndue_date:   ph.inHand,\ndue_type:   ph.dueType,\nmachineId:  'queue',\nposition:   null\n};\nif (ph.id) {\nsetPlaceholders(ps => ps.map(p=>p.id===ph.id?job:p));\nsetColumns(c => ({\n...c,\nqueue:    {...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)},\nmachine1: {...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j)},\nmachine2: {...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j)},\n}));\n} else {\nsetPlaceholders(ps => [job, ...ps]);\nsetColumns(c => ({\n...c,\nqueue: {...c.queue, jobs: [job, ...c.queue.jobs]}\n}));\n}\nsetShowModal(false);\nsetPh({id:null,company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n};\nconst removePlaceholder = id => {\nsetPlaceholders(ps => ps.filter(p=>p.id!==id));\nsetColumns(c => ({\n...c,\nqueue:    {...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)},\nmachine1: {...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id)},\nmachine2: {...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id)},\n}));\n};\nconst editPlaceholder = job => {\nsetPh({\nid: job.id,\ncompany: job.company,\nquantity: job.quantity,\nstitchCount: job.stitchCount,\ninHand: job.due_date,\ndueType: job.due_type\n});\nsetShowModal(true);\n};\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: Drag & Drop Handler (with Manual Assignment/Order) ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const srcId = source.droppableId;\n  const dstId = destination.droppableId;\n  // no-op if dropped back in same position\n  if (srcId === dstId && source.index === destination.index) return;\n\n  // 1) Load manualState\n  const manualState = JSON.parse(\n    localStorage.getItem('manualState') ||\n    JSON.stringify({ machine1: [], machine2: [] })\n  );\n\n  // 2) If same machine, just reorder its array\n  if (srcId === dstId && (srcId === 'machine1' || srcId === 'machine2')) {\n    const arr = Array.from(manualState[srcId] || []);\n    // find & remove\n    const from = arr.indexOf(draggableId);\n    if (from > -1) {\n      arr.splice(from, 1);\n      arr.splice(destination.index, 0, draggableId);\n      manualState[srcId] = arr;\n    }\n  } else {\n    // 3) Cross-column move: remove from any machine lists\n    ['machine1','machine2'].forEach(col => {\n      manualState[col] = (manualState[col] || []).filter(id => id !== draggableId);\n    });\n    // 4) If dropped into a machine, insert into that machine’s manual list\n    if (dstId === 'machine1' || dstId === 'machine2') {\n      const arr = Array.from(manualState[dstId] || []);\n      arr.splice(destination.index, 0, draggableId);\n      manualState[dstId] = arr;\n    }\n  }\n\n  // 5) Persist manualState\n  localStorage.setItem('manualState', JSON.stringify(manualState));\n\n  // 6) Now update UI immediately (same as before)\n  const srcJobs = Array.from(columns[srcId].jobs);\n  const [moved] = srcJobs.splice(source.index, 1);\n\n  // clear schedule when moving into queue\n  const jobForDest = dstId === 'queue'\n    ? { ...moved, start_date:'', _rawStart:null, _rawEnd:null, start:'', end:'', delivery:'', isLate:false }\n    : moved;\n\n  const dstJobs = Array.from(columns[dstId].jobs);\n  dstJobs.splice(destination.index, 0, jobForDest);\n\n  const finalDst = dstId === 'queue'\n    ? dstJobs.sort((a, b) => {\n        const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      })\n    : scheduleMachineJobs(dstJobs);\n\n  setColumns({\n    ...columns,\n    [srcId]: { ...columns[srcId], jobs: srcJobs },\n    [dstId]: { ...columns[dstId], jobs: finalDst },\n  });\n};\n\n// === Section 9: Render / Return ===\nreturn (\n  <>\n    {showModal && (\n      <AddPlaceholderModal\n        ph={ph}\n        setPh={setPh}\n        addPlaceholderJob={addPlaceholderJob}\n        setShowModal={setShowModal}\n      />\n    )}\n\n    <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 13 }}>\n\n      {/* Add / Sync Buttons */}\n      <button\n        onClick={() => setShowModal(true)}\n        style={{ marginRight: 8, fontSize: 13 }}\n      >\n        + Add Placeholder\n      </button>\n      <button onClick={handleSync} style={{ fontSize: 13 }}>\n        Sync from Sheet{' '}\n        {syncStatus === 'updated' && (\n          <span style={{ color: 'green', fontSize: 13 }}>✓ Updated</span>\n        )}\n      </button>\n\n      {/* Legend */}\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: 16,\n          margin: '12px 0',\n          flexWrap: 'wrap',\n          fontSize: 12,\n        }}\n      >\n        {[\n          { label: 'Placeholder', bg: LIGHT_YELLOW, border: DARK_YELLOW },\n          { label: 'Soft Date',    bg: LIGHT_GREY,   border: DARK_GREY   },\n          { label: 'Hard Date',    bg: LIGHT_PURPLE, border: DARK_PURPLE },\n          { label: 'Late',         bg: 'red',        border: 'red'       },\n        ].map((item, i) => (\n          <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n            <span\n              style={{\n                width: 12,\n                height: 12,\n                background: item.bg,\n                border: `2px solid ${item.border}`,\n                borderRadius: 2,\n              }}\n            />\n            {item.label}\n          </div>\n        ))}\n        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n          <span style={{ fontSize: 14 }}>🔗</span> Link\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n          <span style={{ fontSize: 14 }}>❌</span> Unlink\n        </div>\n        {['Start','EED / End','IHD / Delivery'].map((txt,i) => {\n          const color = i===0?BUBBLE_START:i===1?BUBBLE_END:BUBBLE_DELIV;\n          return (\n            <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n              <span style={{ width:12, height:12, background:color, borderRadius:2 }}/>\n              {txt}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Drag & Drop Columns */}\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n          {['queue','machine1','machine2'].map(colId => {\n            const col = columns[colId] || {};\n            const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n            // build segments of linked chains\n            const segments = [];\n            let i = 0;\n            while (i < jobs.length) {\n              const chain = getChain(jobs, jobs[i].id);\n              const len = chain.length > 1 ? chain.length : 1;\n              segments.push({ start: i, len });\n              i += len;\n            }\n            const GAP = 6, OUTLINE = 6;\n\n            return (\n              <Droppable key={colId} droppableId={colId}>\n                {provided => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      position: 'relative',\n                      border: '1px solid #ccc',\n                      borderRadius: 4,\n                      width: colId === 'queue' ? 260 : 300,\n                      minHeight: 400,\n                      padding: 12,\n                      background: '#fafafa',\n                    }}\n                  >\n                    <h4 style={{ textAlign: 'center', margin: '8px 0', fontSize: 13 }}>\n                      {col.title}\n                    </h4>\n\n                    {segments.map((seg, si) => (\n                      <div\n                        key={si}\n                        style={{\n                          position: 'relative',\n                          marginBottom: GAP,\n                          zIndex: seg.len > 1 ? 3 : 1,\n                          outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                          outlineOffset: seg.len > 1 ? '0px' : undefined,\n                          borderRadius: 4,\n                        }}\n                      >\n                        {jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                          const idx = seg.start + jIdx;\n                          const isPh = job.id.startsWith('ph-');\n                          const isSoft = job.due_type === 'Soft Date';\n                          const base = isPh\n                            ? LIGHT_YELLOW\n                            : isSoft\n                            ? LIGHT_GREY\n                            : LIGHT_PURPLE;\n                          let bg = base;\n                          let bCol = isPh\n                            ? DARK_YELLOW\n                            : isSoft\n                            ? DARK_GREY\n                            : DARK_PURPLE;\n                          if (job.isLate) {\n                            bg = `repeating-linear-gradient(\n                              45deg,\n                              ${base}, ${base} 6px,\n                              rgba(255,0,0,0.5) 6px,\n                              rgba(255,0,0,0.5) 12px\n                            )`;\n                            bCol = 'red';\n                          }\n\n                          return (\n                            <Draggable key={job.id} draggableId={job.id} index={idx}>\n                              {prov => (\n                                <div\n                                  ref={prov.innerRef}\n                                  {...prov.draggableProps}\n                                  {...prov.dragHandleProps}\n                                  style={{\n                                    position: 'relative',\n                                    display: 'grid',\n                                    gridTemplateColumns: '1fr auto',\n                                    gridTemplateRows: 'auto auto auto auto',\n                                    columnGap: 6,\n                                    rowGap: 4,\n                                    padding: '6px 28px 6px 6px',\n                                    margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                                    background: bg,\n                                    border: `2px solid ${bCol}`,\n                                    borderRadius: 4,\n                                    zIndex: 2,\n                                    ...prov.draggableProps.style,\n                                  }}\n                                >\n                                  {jIdx === 0 && seg.len > 1 && (\n                                    <div\n                                      style={{\n                                        position: 'absolute',\n                                        top: 0,\n                                        right: 0,\n                                        width: 4,\n                                        height: '100%',\n                                        background: '#0288d1',\n                                        zIndex: 4,\n                                      }}\n                                    />\n                                  )}\n\n                                  {/* Row1 Col1: ID + Company */}\n                                  <span\n                                    style={{\n                                      gridRow: 1,\n                                      gridColumn: 1,\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                      fontWeight: 'bold',\n                                    }}\n                                  >\n                                    <span\n                                      style={{\n                                        display: 'inline-block',\n                                        width: 20,\n                                        height: 20,\n                                        borderRadius: '50%',\n                                        background: '#000',\n                                        color: base,\n                                        lineHeight: '20px',\n                                        textAlign: 'center',\n                                        fontSize: isPh ? 13 : 11,\n                                        fontWeight: 'bold',\n                                        marginRight: 4,\n                                      }}\n                                    >\n                                      {isPh ? '*' : job.id}\n                                    </span>\n                                    {job.company}\n                                  </span>\n\n                                  {/* Row1 Col2: Quantity */}\n                                  <span\n                                    style={{\n                                      gridRow: 1,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      fontSize: 15,\n                                      fontWeight: 'bold',\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                    }}\n                                  >\n                                    {job.quantity}\n                                  </span>\n\n                                  {/* Row2 Col1: Design */}\n                                  <span\n                                    style={{\n                                      gridRow: 2,\n                                      gridColumn: 1,\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.designName}\n                                  </span>\n\n                                  {/* Row2 Col2: Start */}\n                                  {job.start && (\n                                    <span\n                                      style={{\n                                        gridRow: 2,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        background: BUBBLE_START,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13,\n                                      }}\n                                    >\n                                      {job.start}\n                                    </span>\n                                  )}\n\n                                  {/* Row3 Col1: EED */}\n                                  <span\n                                    style={{\n                                      gridRow: 3,\n                                      gridColumn: 1,\n                                      background: BUBBLE_END,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {`EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`}\n                                  </span>\n\n                                  {/* Row3 Col2: End */}\n                                  {job.end && (\n                                    <span\n                                      style={{\n                                        gridRow: 3,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        background: BUBBLE_END,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13,\n                                      }}\n                                    >\n                                      {job.end}\n                                    </span>\n                                  )}\n\n                                  {/* Row4 Col1: IHD */}\n                                  <span\n                                    style={{\n                                      gridRow: 4,\n                                      gridColumn: 1,\n                                      background: BUBBLE_DELIV,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {`IHD: ${fmtMMDD(job.due_date)}`}\n                                  </span>\n\n                                  {/* Row4 Col2: Delivery */}\n                                  {job.delivery && (\n                                    <span\n                                      style={{\n                                        gridRow: 4,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        background: BUBBLE_DELIV,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13,\n                                      }}\n                                    >\n                                      {job.delivery}\n                                    </span>\n                                  )}\n\n                                  {/* Top-right tab: Due-Type */}\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      right: 0,\n                                      width: 28,\n                                      height: 28,\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      background: base,\n                                      borderTopRightRadius: 4,\n                                      borderBottomLeftRadius: 4,\n                                      zIndex: 4,\n                                      fontSize: 11,\n                                      fontWeight: 'bold',\n                                    }}\n                                  >\n                                    {(job.due_type || '')[0] || ''}\n                                  </div>\n\n                                  {/* Link / Unlink toggle */}\n                                  {jIdx < seg.len - 1 && (\n                                    <div\n                                      onClick={() => toggleLink(colId, idx)}\n                                      style={{\n                                        position: 'absolute',\n                                        top: 28,\n                                        right: 0,\n                                        width: 28,\n                                        height: `calc(100% - 28px)`,\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        cursor: 'pointer',\n                                        background: base,\n                                        borderBottomRightRadius: 4,\n                                        zIndex: 4,\n                                      }}\n                                    >\n                                      {job.linkedTo === jobs[idx + 1]?.id ? '❌' : '🔗'}\n                                    </div>\n                                  )}\n\n                                  {/* Placeholder edit/delete */}\n                                  {isPh && (\n                                    <div\n                                      style={{\n                                        position: 'absolute',\n                                        top: 0,\n                                        right: 0,\n                                        width: 28,\n                                        height: '100%',\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-start',\n                                        background: base,\n                                        borderTopRightRadius: 4,\n                                        borderBottomRightRadius: 4,\n                                        zIndex: 4,\n                                      }}\n                                    >\n                                      <span\n                                        onClick={() => editPlaceholder(job)}\n                                        style={{ cursor: 'pointer', fontSize: 12, margin: 4 }}\n                                      >\n                                        ✎\n                                      </span>\n                                      <span\n                                        onClick={() => removePlaceholder(job.id)}\n                                        style={{ cursor: 'pointer', fontSize: 12, margin: 4 }}\n                                      >\n                                        ✖\n                                      </span>\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </Droppable>\n            );\n          })}\n        </div>\n      </DragDropContext>\n    </div>\n  </>\n);\n}\n// === Section 10: AddPlaceholderModal Component ===\nfunction AddPlaceholderModal({ ph, setPh, addPlaceholderJob, setShowModal }) {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0, left: 0,\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n      }}\n    >\n      <div\n        style={{\n          background: '#fff',\n          padding: 24,\n          borderRadius: 8,\n          width: 360,\n          boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n        }}\n      >\n        <h3 style={{ marginTop: 0 }}>New Placeholder Job</h3>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Company</label>\n          <input\n            type=\"text\"\n            value={ph.company}\n            onChange={e => setPh({ ...ph, company: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Design Name</label>\n          <input\n            type=\"text\"\n            value={ph.designName}\n            onChange={e => setPh({ ...ph, designName: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Quantity</label>\n          <input\n            type=\"number\"\n            value={ph.quantity}\n            onChange={e => setPh({ ...ph, quantity: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Stitch Count</label>\n          <input\n            type=\"number\"\n            value={ph.stitchCount}\n            onChange={e => setPh({ ...ph, stitchCount: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>In-Hand Date</label>\n          <input\n            type=\"date\"\n            value={ph.inHand}\n            onChange={e => setPh({ ...ph, inHand: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 16 }}>\n          <label>Due Type</label>\n          <select\n            value={ph.dueType}\n            onChange={e => setPh({ ...ph, dueType: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          >\n            <option>Hard Date</option>\n            <option>Soft Date</option>\n          </select>\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 8 }}>\n          <button\n            onClick={() => setShowModal(false)}\n            style={{ padding: '6px 12px' }}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={addPlaceholderJob}\n            style={{ padding: '6px 12px' }}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACc,EAAE,EAAEC,KAAK,CAAC,GAAGf,QAAQ,CAAC;IAC3BgB,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMwB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,MAAM,GAAG;MACbC,EAAE,EAAE,MAAMC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACtBZ,OAAO,EAAEF,EAAE,CAACE,OAAO;MACnBC,UAAU,EAAEH,EAAE,CAACG,UAAU;MACzBC,QAAQ,EAAEW,MAAM,CAACf,EAAE,CAACI,QAAQ,CAAC;MAC7BC,WAAW,EAAEU,MAAM,CAACf,EAAE,CAACK,WAAW,CAAC;MACnCC,MAAM,EAAEN,EAAE,CAACM,MAAM;MACjBC,OAAO,EAAEP,EAAE,CAACO;IACd,CAAC;IACD,MAAMS,OAAO,GAAG,CAAC,GAAGR,IAAI,EAAEG,MAAM,CAAC,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC1CD,CAAC,CAACZ,MAAM,CAACc,aAAa,CAACD,CAAC,CAACb,MAAM,CACjC,CAAC;IACDG,OAAO,CAACO,OAAO,CAAC;IAEhBf,KAAK,CAAC;MACJC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC,CAAC;IACFR,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACH;;EAEA,SAASsB,SAASA,CAACC,EAAE,EAAE;IACrB,OAAOA,EAAE,YAAYT,IAAI,IAClB,CAACU,KAAK,CAACD,EAAE,CAAC,IACVE,QAAQ,CAACC,QAAQ,CAACH,EAAE,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;EACxD;EAEA,SAASC,SAASA,CAACN,EAAE,EAAE;IACrB,OAAOA,EAAE,YAAYT,IAAI,IAClB,CAACU,KAAK,CAACD,EAAE,CAAC,IACV,CAACO,QAAQ,CAACJ,QAAQ,CAACH,EAAE,CAACQ,MAAM,CAAC,CAAC,CAAC,IAC/B,CAACT,SAAS,CAACC,EAAE,CAAC;EACvB;EAEA,SAASS,gBAAgBA,CAACT,EAAE,EAAE;IAC5B,IAAIU,CAAC,GAAG,IAAInB,IAAI,CAACS,EAAE,CAAC;IACpB,OACE,CAACM,SAAS,CAACI,CAAC,CAAC,IACbA,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAGC,aAAa,IAC3BF,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKC,aAAa,IAAIF,CAAC,CAACG,UAAU,CAAC,CAAC,GAAGC,cAAe,EACnE;MACAJ,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1BN,CAAC,CAACO,QAAQ,CAACL,aAAa,EAAEE,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD;IACA,IACEJ,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAGO,WAAW,IACzBR,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKO,WAAW,IAAIR,CAAC,CAACG,UAAU,CAAC,CAAC,IAAIM,YAAa,EAChE;MACAT,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1BN,CAAC,CAACO,QAAQ,CAACL,aAAa,EAAEE,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/C,OAAOL,gBAAgB,CAACC,CAAC,CAAC;IAC5B;IACA,OAAOA,CAAC;EACV;EAEA,SAASU,WAAWA,CAACC,KAAK,EAAEC,EAAE,EAAE;IAC9B,IAAIC,SAAS,GAAGD,EAAE;IAClB,IAAIE,OAAO,GAAGf,gBAAgB,CAACY,KAAK,CAAC;IACrC,OAAOE,SAAS,GAAG,CAAC,EAAE;MACpB,MAAME,QAAQ,GAAG,IAAIlC,IAAI,CAACiC,OAAO,CAAC;MAClCC,QAAQ,CAACR,QAAQ,CAACC,WAAW,EAAEC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;MAClD,MAAMO,IAAI,GAAGD,QAAQ,CAACE,OAAO,CAAC,CAAC,GAAGH,OAAO,CAACG,OAAO,CAAC,CAAC;MACnD,IAAID,IAAI,IAAI,CAAC,EAAE;QACbF,OAAO,GAAGf,gBAAgB,CAAC,IAAIlB,IAAI,CAACiC,OAAO,CAACT,OAAO,CAACS,OAAO,CAACR,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9E,CAAC,MAAM,IAAIO,SAAS,IAAIG,IAAI,EAAE;QAC5BF,OAAO,GAAG,IAAIjC,IAAI,CAACiC,OAAO,CAACG,OAAO,CAAC,CAAC,GAAGJ,SAAS,CAAC;QACjDA,SAAS,GAAG,CAAC;MACf,CAAC,MAAM;QACLA,SAAS,IAAIG,IAAI;QACjBF,OAAO,GAAG,IAAIjC,IAAI,CAACkC,QAAQ,CAAC;MAC9B;IACF;IACA,OAAOD,OAAO;EAChB;EAEA,SAASI,KAAKA,CAAC5B,EAAE,EAAE;IACjB,MAAM6B,GAAG,GAAGC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAC1C,MAAMC,KAAK,GAAGJ,GAAG,CAAC7B,EAAE,CAACkC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IACpC,MAAMC,GAAG,GAAKN,GAAG,CAAC7B,EAAE,CAACgB,OAAO,CAAC,CAAC,CAAC;IAC/B,IAAIoB,CAAC,GAAGpC,EAAE,CAACW,QAAQ,CAAC,CAAC;MAAE0B,CAAC,GAAGR,GAAG,CAAC7B,EAAE,CAACa,UAAU,CAAC,CAAC,CAAC;MAAEyB,EAAE,GAAGF,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IAC3EA,CAAC,GAAGA,CAAC,GAAG,EAAE,IAAI,EAAE;IAChB,OAAO,GAAGH,KAAK,IAAIE,GAAG,IAAIN,GAAG,CAACO,CAAC,CAAC,IAAIC,CAAC,IAAIC,EAAE,EAAE;EAC/C;EAEA,SAASC,YAAYA,CAAC7B,CAAC,EAAE;IACvB,IAAI,CAACA,CAAC,EAAE,OAAO,IAAI;IACnB,IAAI,kBAAkB,CAAC8B,IAAI,CAAC9B,CAAC,CAAC,EAAE,OAAO,IAAInB,IAAI,CAACmB,CAAC,CAAC;IAClD,MAAM+B,KAAK,GAAG/B,CAAC,CAACgC,KAAK,CAAC,GAAG,CAAC;IAC1B,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;MACrB,MAAMC,EAAE,GAAG,CAACH,KAAK,CAAC,CAAC,CAAC;QAAEI,EAAE,GAAG,CAACJ,KAAK,CAAC,CAAC,CAAC;QAC9BK,EAAE,GAAGL,KAAK,CAACE,MAAM,KAAK,CAAC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIlD,IAAI,CAAC,CAAC,CAACwD,WAAW,CAAC,CAAC;MACpE,IAAI,CAAC9C,KAAK,CAAC2C,EAAE,CAAC,IAAI,CAAC3C,KAAK,CAAC4C,EAAE,CAAC,IAAI,CAAC5C,KAAK,CAAC6C,EAAE,CAAC,EAAE,OAAO,IAAIvD,IAAI,CAACuD,EAAE,EAACF,EAAE,GAAC,CAAC,EAACC,EAAE,CAAC;IACzE;IACA,MAAM7C,EAAE,GAAG,IAAIT,IAAI,CAACmB,CAAC,CAAC;IACtB,OAAOT,KAAK,CAACD,EAAE,CAAC,GAAG,IAAI,GAAGA,EAAE;EAC9B;EAEA,SAASgD,WAAWA,CAAC3B,KAAK,EAAE4B,IAAI,EAAE;IAChC,IAAIvC,CAAC,GAAG,IAAInB,IAAI,CAAC8B,KAAK,CAAC;MAAE6B,KAAK,GAAG,CAAC;IAClC,OAAOA,KAAK,GAAGD,IAAI,EAAE;MACnBvC,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1B,IAAIV,SAAS,CAACI,CAAC,CAAC,EAAEwC,KAAK,EAAE;IAC3B;IACA,OAAOxC,CAAC;EACV;EAEA,SAASyC,WAAWA,CAAC9B,KAAK,EAAE4B,IAAI,EAAE;IAChC,IAAIvC,CAAC,GAAG,IAAInB,IAAI,CAAC8B,KAAK,CAAC;MAAE+B,OAAO,GAAG,CAAC;IACpC,OAAOA,OAAO,GAAGH,IAAI,EAAE;MACrBvC,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1B,IAAIV,SAAS,CAACI,CAAC,CAAC,EAAE0C,OAAO,EAAE;IAC7B;IACA,OAAO1C,CAAC;EACV;EAEA,SAAS2C,OAAOA,CAAC3C,CAAC,EAAE;IAClB,MAAMV,EAAE,GAAG,IAAIT,IAAI,CAACmB,CAAC,CAAC;IACtB,MAAMkC,EAAE,GAAGb,MAAM,CAAC/B,EAAE,CAACkC,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAClD,MAAMa,EAAE,GAAGd,MAAM,CAAC/B,EAAE,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACgB,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAC/C,OAAO,GAAGY,EAAE,IAAIC,EAAE,EAAE;EACtB;EAEA,SAASS,SAASA,CAACC,GAAG,EAAE;IACtB,OAAO,CAAC,GAAGA,GAAG,CAAC,CAAC5D,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;MAC5B,MAAMgD,EAAE,GAAGN,YAAY,CAAC3C,CAAC,CAAC4D,QAAQ,CAAC;QAAEC,EAAE,GAAGlB,YAAY,CAAC1C,CAAC,CAAC2D,QAAQ,CAAC;MAClE,IAAIX,EAAE,IAAIY,EAAE,EAAE,OAAOZ,EAAE,GAAGY,EAAE;MAC5B,IAAIZ,EAAE,EAAE,OAAO,CAAC,CAAC;MACjB,IAAIY,EAAE,EAAE,OAAO,CAAC;MAChB,OAAO,CAAC;IACV,CAAC,CAAC;EACJ;;EAEA;EACA;EACA;;EAEA;EACA;EACA,SAASC,mBAAmBA,CAACxE,IAAI,EAAE;IACjC,IAAIyE,OAAO,GAAG,IAAI;IAElB,OAAOzE,IAAI,CAAC0E,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC5B;MACA,MAAMC,MAAM,GAAGZ,WAAW,CAACZ,YAAY,CAACsB,GAAG,CAACL,QAAQ,CAAC,EAAE,CAAC,CAAC;MACzD,MAAMQ,MAAM,GAAG,IAAIzE,IAAI,CAACwE,MAAM,CAAC;MAC/BC,MAAM,CAAC/C,QAAQ,CAACC,WAAW,EAAEC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;;MAEhD;MACA,IAAIE,KAAK;MACT,IAAIyC,GAAG,KAAK,CAAC,EAAE;QACb;QACA,IAAID,GAAG,CAACI,gBAAgB,EAAE;UACxB5C,KAAK,GAAGZ,gBAAgB,CAAC,IAAIlB,IAAI,CAACsE,GAAG,CAACI,gBAAgB,CAAC,CAAC;QAC1D,CAAC,MAAM;UACL;UACA,MAAMC,MAAM,GAAG,IAAI3E,IAAI,CAAC,CAAC,CAACa,WAAW,CAAC,CAAC;UACvCyD,GAAG,CAACI,gBAAgB,GAAGC,MAAM;UAC7B7C,KAAK,GAAGZ,gBAAgB,CAAC,IAAIlB,IAAI,CAAC2E,MAAM,CAAC,CAAC;UAE1CjG,KAAK,CACFkG,GAAG,CACF,GAAGC,QAAQ,WAAWP,GAAG,CAACvE,EAAE,EAAE,EAC9B;YAAE2E,gBAAgB,EAAEC;UAAO,CAC7B,CAAC,CACAG,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;QACzB;MACF,CAAC,MAAM;QACL;QACAlD,KAAK,GAAGZ,gBAAgB,CAAC,IAAIlB,IAAI,CAACoE,OAAO,CAAChC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;MACpE;;MAEA;MACA,MAAM6C,GAAG,GAAKX,GAAG,CAAC/E,QAAQ,GAAG,CAAC,KAAK,CAAC,GAChC+E,GAAG,CAAC/E,QAAQ,GACZ2F,IAAI,CAACC,IAAI,CAACb,GAAG,CAAC/E,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,MAAM6F,KAAK,GAAId,GAAG,CAAC9E,WAAW,GAAG,KAAK,IAAKyF,GAAG,GAAG,CAAC,CAAC,GAAG,OAAO;MAC7D,MAAMI,GAAG,GAAKxD,WAAW,CAACC,KAAK,EAAEsD,KAAK,CAAC;;MAEvC;MACAd,GAAG,CAACgB,SAAS,GAAGxD,KAAK;MACrBwC,GAAG,CAACiB,OAAO,GAAKF,GAAG;MACnBf,GAAG,CAACxC,KAAK,GAAOO,KAAK,CAACP,KAAK,CAAC;MAC5BwC,GAAG,CAACe,GAAG,GAAShD,KAAK,CAACgD,GAAG,CAAC;MAC1Bf,GAAG,CAACkB,QAAQ,GAAI1B,OAAO,CAACL,WAAW,CAAC4B,GAAG,EAAE,CAAC,CAAC,CAAC;MAC5Cf,GAAG,CAACmB,MAAM,GAAMJ,GAAG,GAAGZ,MAAM;MAE5BL,OAAO,GAAGiB,GAAG;MACb,OAAOf,GAAG;IACZ,CAAC,CAAC;EACJ;;EAEA;EACA,SAASoB,SAASA,CAAA,EAAG;IACnB,IAAI;MACF,OAAOC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IAC7D,CAAC,CAAC,MAAM;MACN,OAAO,CAAC,CAAC;IACX;EACF;EAEA,SAASC,SAASA,CAAC1B,GAAG,EAAE;IACtBwB,YAAY,CAACG,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACM,SAAS,CAAC5B,GAAG,CAAC,CAAC;EACvD;EAEA,SAAS6B,QAAQA,CAACvG,IAAI,EAAEI,EAAE,EAAE;IAC1B,MAAMoG,GAAG,GAAG,CAAC,CAAC;MAAEC,GAAG,GAAG,CAAC,CAAC;IACxBzG,IAAI,CAAC0G,OAAO,CAACC,CAAC,IAAI;MAChB,IAAIA,CAAC,CAACC,QAAQ,EAAE;QACdJ,GAAG,CAACG,CAAC,CAACvG,EAAE,CAAC,GAAMuG,CAAC,CAACC,QAAQ;QACzBH,GAAG,CAACE,CAAC,CAACC,QAAQ,CAAC,GAAGD,CAAC,CAACvG,EAAE;MACxB;IACF,CAAC,CAAC;;IAEF;IACA,IAAIyG,IAAI,GAAGzG,EAAE;IACb,OAAOqG,GAAG,CAACI,IAAI,CAAC,EAAE;MAChBA,IAAI,GAAGJ,GAAG,CAACI,IAAI,CAAC;IAClB;;IAEA;IACA,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,GAAG,GAAGF,IAAI;IACd,OAAOE,GAAG,EAAE;MACVD,KAAK,CAACE,IAAI,CAACD,GAAG,CAAC;MACfA,GAAG,GAAGP,GAAG,CAACO,GAAG,CAAC;IAChB;IACA,OAAOD,KAAK;EACd;;EAEA;EACA,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B7B,OAAO,CAAC8B,GAAG,CAAC,iCAAiC,CAAC;IAE9C,IAAI;MACF;MACA,MAAMC,WAAW,GAAGnB,IAAI,CAACC,KAAK,CAC5BC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IACnCH,IAAI,CAACM,SAAS,CAAC;QAAEc,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAC/C,CAAC;MACDjC,OAAO,CAAC8B,GAAG,CAAC,kBAAkB,EAAEC,WAAW,CAAC;;MAE5C;MACA,MAAMG,OAAO,GAAG,CAAC,CAAC;MAClBC,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC,CACnBC,OAAO,CAACC,GAAG,IAAIA,GAAG,CAAC3H,IAAI,CAAC,CACxB0G,OAAO,CAACC,CAAC,IAAI;QACZW,OAAO,CAACX,CAAC,CAACvG,EAAE,CAAC,GAAGuG,CAAC,CAAC5B,gBAAgB,IAAI4B,CAAC,CAACiB,UAAU,IAAI,EAAE;MAC1D,CAAC,CAAC;;MAEJ;MACA,MAAM,CAAC;QAAEC,IAAI,EAAEC;MAAO,CAAC,EAAE;QAAED,IAAI,EAAEE;MAAQ,CAAC,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC9DlJ,KAAK,CAACmJ,GAAG,CAAC,GAAGhD,QAAQ,SAAS,CAAC,EAC/BnG,KAAK,CAACmJ,GAAG,CAAC,GAAGhD,QAAQ,iBAAiB,CAAC,CACxC,CAAC;;MAEF;MACA,MAAMiD,MAAM,GAAG,CAAC,CAAC;MACjBJ,OAAO,CAACrB,OAAO,CAAC0B,GAAG,IAAI;QACrB,MAAMhI,EAAE,GAAGyC,MAAM,CAACuF,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;QAC9C,IAAIjI,EAAE,EAAE+H,MAAM,CAAC/H,EAAE,CAAC,GAAGgI,GAAG,CAAC,uBAAuB,CAAC,IAAI,EAAE;MACzD,CAAC,CAAC;;MAEF;MACA,MAAME,OAAO,GAAG,CAAC,CAAC;MAClBR,MAAM,CAACpB,OAAO,CAAC6B,CAAC,IAAI;QAAA,IAAAC,IAAA,EAAAC,UAAA,EAAAC,KAAA,EAAAC,YAAA;QAClB,IAAIJ,CAAC,CAACnI,EAAE,IAAI,IAAI,EAAE;QAClB,MAAMA,EAAE,GAAMyC,MAAM,CAAC0F,CAAC,CAACnI,EAAE,CAAC,CAACiI,IAAI,CAAC,CAAC;QACjC,MAAMO,KAAK,IAAAJ,IAAA,IAAAC,UAAA,GAAGN,MAAM,CAAC/H,EAAE,CAAC,cAAAqI,UAAA,cAAAA,UAAA,GAAInB,OAAO,CAAClH,EAAE,CAAC,cAAAoI,IAAA,cAAAA,IAAA,GAAI,EAAE;QAC7CF,OAAO,CAAClI,EAAE,CAAC,GAAG;UACZ,GAAGmI,CAAC;UACJnI,EAAE;UACFP,WAAW,EAAE0I,CAAC,CAACM,YAAY;UAC3BjJ,QAAQ,EAAK2I,CAAC,CAAC3I,QAAQ;UACvBF,OAAO,EAAM6I,CAAC,CAAC7I,OAAO;UACtBoJ,MAAM,EAAOP,CAAC,CAACO,MAAM;UACrBxE,QAAQ,EAAKiE,CAAC,CAACjE,QAAQ;UACvByE,QAAQ,EAAKR,CAAC,CAACQ,QAAQ;UACvBhE,gBAAgB,EAAE6D,KAAK;UACvBhB,UAAU,EAAGgB,KAAK;UAClBhC,QAAQ,EAAKoC,KAAK,CAACT,CAAC,CAACnI,EAAE,CAAC,IAAI,IAAI;UAChC;UACA6I,SAAS,GAAAP,KAAA,IAAAC,YAAA,GAAIJ,CAAC,CAACU,SAAS,cAAAN,YAAA,cAAAA,YAAA,GAAIJ,CAAC,CAACW,OAAO,cAAAR,KAAA,cAAAA,KAAA,GAAI;QAC3C,CAAC;MACH,CAAC,CAAC;;MAEF;MACA;MAAC,CAAC,UAAU,EAAC,UAAU,CAAC,CAAChC,OAAO,CAACiB,GAAG,IAAI;QACtC,CAACR,WAAW,CAACQ,GAAG,CAAC,IAAI,EAAE,EAAEjB,OAAO,CAACtG,EAAE,IAAI;UACrC,IAAIkI,OAAO,CAAClI,EAAE,CAAC,EAAEkI,OAAO,CAAClI,EAAE,CAAC,CAAC6I,SAAS,GAAGtB,GAAG;QAC9C,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAMwB,YAAY,GAAGC,KAAK,IAAI;QAC5B,MAAMC,UAAU,GAAGlC,WAAW,CAACiC,KAAK,CAAC,IAAI,EAAE;QAC3C,MAAME,QAAQ,GAAKD,UAAU,CAACE,MAAM,CAACnJ,EAAE,IAAIkI,OAAO,CAAClI,EAAE,CAAC,CAAC,CAACsE,GAAG,CAACtE,EAAE,IAAIkI,OAAO,CAAClI,EAAE,CAAC,CAAC;QAC9E,MAAMoJ,QAAQ,GAAKjC,MAAM,CAACC,MAAM,CAACc,OAAO,CAAC,CACtCiB,MAAM,CAAC5C,CAAC,IAAIA,CAAC,CAACsC,SAAS,KAAKG,KAAK,IAAI,CAACC,UAAU,CAACpI,QAAQ,CAAC0F,CAAC,CAACvG,EAAE,CAAC,CAAC;QACnE,OAAO,CAAC,GAAGkJ,QAAQ,EAAE,GAAGE,QAAQ,CAAC;MACnC,CAAC;MACD,MAAMC,YAAY,GAAGN,YAAY,CAAC,UAAU,CAAC;MAC7C,MAAMO,YAAY,GAAGP,YAAY,CAAC,UAAU,CAAC;;MAE7C;MACA,MAAMQ,SAAS,GAAGpC,MAAM,CAACC,MAAM,CAACc,OAAO,CAAC,CACrCiB,MAAM,CAAC5C,CAAC,IAAI,CAAC,CAAC,UAAU,EAAC,UAAU,CAAC,CAAC1F,QAAQ,CAAC0F,CAAC,CAACsC,SAAS,CAAC,CAAC,CAC3DvE,GAAG,CAACiC,CAAC,KAAK;QACT,GAAGA,CAAC;QACJiB,UAAU,EAAE,EAAE;QACdjC,SAAS,EAAG,IAAI;QAChBC,OAAO,EAAK,IAAI;QAChBzD,KAAK,EAAO,EAAE;QACduD,GAAG,EAAS,EAAE;QACdG,QAAQ,EAAI,EAAE;QACdC,MAAM,EAAM;MACd,CAAC,CAAC,CAAC,CACFrF,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACd,MAAMgD,EAAE,GAAGN,YAAY,CAAC3C,CAAC,CAAC4D,QAAQ,CAAC;UAAEC,EAAE,GAAGlB,YAAY,CAAC1C,CAAC,CAAC2D,QAAQ,CAAC;QAClE,IAAIX,EAAE,IAAIY,EAAE,EAAE,OAAOZ,EAAE,GAAGY,EAAE;QAC5B,IAAIZ,EAAE,EAAE,OAAO,CAAC,CAAC;QACjB,IAAIY,EAAE,EAAE,OAAO,CAAC;QAChB,OAAO,CAAC;MACV,CAAC,CAAC;;MAEJ;MACA,MAAMqF,IAAI,GAAG;QACXC,KAAK,EAAK;UAAE,GAAGpC,OAAO,CAACoC,KAAK;UAAK7J,IAAI,EAAE2J;QAAU,CAAC;QAClDvC,QAAQ,EAAE;UAAE,GAAGK,OAAO,CAACL,QAAQ;UAAEpH,IAAI,EAAEwE,mBAAmB,CAACiF,YAAY;QAAE,CAAC;QAC1EpC,QAAQ,EAAE;UAAE,GAAGI,OAAO,CAACJ,QAAQ;UAAErH,IAAI,EAAEwE,mBAAmB,CAACkF,YAAY;QAAE;MAC3E,CAAC;MACDtE,OAAO,CAAC8B,GAAG,CAAC,gCAAgC,EAAE0C,IAAI,CAAC;MACnDE,UAAU,CAACF,IAAI,CAAC;IAElB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ3E,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAE0E,GAAG,CAAC;IAC1C;EACF,CAAC;;EAGD;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAChC,MAAMrF,GAAG,GAAG;MACZvE,EAAE,EAAUZ,EAAE,CAACY,EAAE,IAAI,MAAMC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACvCZ,OAAO,EAAKF,EAAE,CAACE,OAAO;MACtBE,QAAQ,EAAI,CAACJ,EAAE,CAACI,QAAQ,IAAI,CAAC;MAC7BC,WAAW,EAAC,CAACL,EAAE,CAACK,WAAW,IAAE,KAAK;MAClCyE,QAAQ,EAAI9E,EAAE,CAACM,MAAM;MACrBiJ,QAAQ,EAAIvJ,EAAE,CAACO,OAAO;MACtBkJ,SAAS,EAAG,OAAO;MACnBgB,QAAQ,EAAI;IACZ,CAAC;IACD,IAAIzK,EAAE,CAACY,EAAE,EAAE;MACX8J,eAAe,CAACC,EAAE,IAAIA,EAAE,CAACzF,GAAG,CAAC0F,CAAC,IAAEA,CAAC,CAAChK,EAAE,KAAGZ,EAAE,CAACY,EAAE,GAACuE,GAAG,GAACyF,CAAC,CAAC,CAAC;MACpDN,UAAU,CAACO,CAAC,KAAK;QACjB,GAAGA,CAAC;QACJR,KAAK,EAAK;UAAC,GAAGQ,CAAC,CAACR,KAAK;UAAK7J,IAAI,EAAEqK,CAAC,CAACR,KAAK,CAAC7J,IAAI,CAAC0E,GAAG,CAACiC,CAAC,IAAEA,CAAC,CAACvG,EAAE,KAAGZ,EAAE,CAACY,EAAE,GAACuE,GAAG,GAACgC,CAAC;QAAC,CAAC;QACxES,QAAQ,EAAE;UAAC,GAAGiD,CAAC,CAACjD,QAAQ;UAAEpH,IAAI,EAAEqK,CAAC,CAACjD,QAAQ,CAACpH,IAAI,CAAC0E,GAAG,CAACiC,CAAC,IAAEA,CAAC,CAACvG,EAAE,KAAGZ,EAAE,CAACY,EAAE,GAACuE,GAAG,GAACgC,CAAC;QAAC,CAAC;QAC3EU,QAAQ,EAAE;UAAC,GAAGgD,CAAC,CAAChD,QAAQ;UAAErH,IAAI,EAAEqK,CAAC,CAAChD,QAAQ,CAACrH,IAAI,CAAC0E,GAAG,CAACiC,CAAC,IAAEA,CAAC,CAACvG,EAAE,KAAGZ,EAAE,CAACY,EAAE,GAACuE,GAAG,GAACgC,CAAC;QAAC;MAC1E,CAAC,CAAC,CAAC;IACH,CAAC,MAAM;MACPuD,eAAe,CAACC,EAAE,IAAI,CAACxF,GAAG,EAAE,GAAGwF,EAAE,CAAC,CAAC;MACnCL,UAAU,CAACO,CAAC,KAAK;QACjB,GAAGA,CAAC;QACJR,KAAK,EAAE;UAAC,GAAGQ,CAAC,CAACR,KAAK;UAAE7J,IAAI,EAAE,CAAC2E,GAAG,EAAE,GAAG0F,CAAC,CAACR,KAAK,CAAC7J,IAAI;QAAC;MAChD,CAAC,CAAC,CAAC;IACH;IACAT,YAAY,CAAC,KAAK,CAAC;IACnBE,KAAK,CAAC;MAACW,EAAE,EAAC,IAAI;MAACV,OAAO,EAAC,EAAE;MAACE,QAAQ,EAAC,EAAE;MAACC,WAAW,EAAC,EAAE;MAACC,MAAM,EAAC,EAAE;MAACC,OAAO,EAAC;IAAW,CAAC,CAAC;EACpF,CAAC;EACD,MAAMuK,iBAAiB,GAAGlK,EAAE,IAAI;IAChC8J,eAAe,CAACC,EAAE,IAAIA,EAAE,CAACZ,MAAM,CAACa,CAAC,IAAEA,CAAC,CAAChK,EAAE,KAAGA,EAAE,CAAC,CAAC;IAC9C0J,UAAU,CAACO,CAAC,KAAK;MACjB,GAAGA,CAAC;MACJR,KAAK,EAAK;QAAC,GAAGQ,CAAC,CAACR,KAAK;QAAK7J,IAAI,EAAEqK,CAAC,CAACR,KAAK,CAAC7J,IAAI,CAACuJ,MAAM,CAAC5C,CAAC,IAAEA,CAAC,CAACvG,EAAE,KAAGA,EAAE;MAAC,CAAC;MAClEgH,QAAQ,EAAE;QAAC,GAAGiD,CAAC,CAACjD,QAAQ;QAAEpH,IAAI,EAAEqK,CAAC,CAACjD,QAAQ,CAACpH,IAAI,CAACuJ,MAAM,CAAC5C,CAAC,IAAEA,CAAC,CAACvG,EAAE,KAAGA,EAAE;MAAC,CAAC;MACrEiH,QAAQ,EAAE;QAAC,GAAGgD,CAAC,CAAChD,QAAQ;QAAErH,IAAI,EAAEqK,CAAC,CAAChD,QAAQ,CAACrH,IAAI,CAACuJ,MAAM,CAAC5C,CAAC,IAAEA,CAAC,CAACvG,EAAE,KAAGA,EAAE;MAAC;IACpE,CAAC,CAAC,CAAC;EACH,CAAC;EACD,MAAMmK,eAAe,GAAG5F,GAAG,IAAI;IAC/BlF,KAAK,CAAC;MACNW,EAAE,EAAEuE,GAAG,CAACvE,EAAE;MACVV,OAAO,EAAEiF,GAAG,CAACjF,OAAO;MACpBE,QAAQ,EAAE+E,GAAG,CAAC/E,QAAQ;MACtBC,WAAW,EAAE8E,GAAG,CAAC9E,WAAW;MAC5BC,MAAM,EAAE6E,GAAG,CAACL,QAAQ;MACpBvE,OAAO,EAAE4E,GAAG,CAACoE;IACb,CAAC,CAAC;IACFxJ,YAAY,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMiL,UAAU,GAAGA,CAACpB,KAAK,EAAExE,GAAG,KAAK;IACjCkF,UAAU,CAACW,IAAI,IAAI;MACjB;MACA,MAAMzK,IAAI,GAAG,CAAC,GAAGyK,IAAI,CAACrB,KAAK,CAAC,CAACpJ,IAAI,CAAC;MAClC,MAAM2E,GAAG,GAAI3E,IAAI,CAAC4E,GAAG,CAAC;MACtB,MAAM8F,KAAK,GAAG1K,IAAI,CAAC4E,GAAG,GAAG,CAAC,CAAC;MAC3B,IAAI,CAAC8F,KAAK,EAAE,OAAOD,IAAI,CAAC,CAAE;;MAE1B;MACAE,QAAQ,CAACC,CAAC,IAAI;QACZ,MAAMzH,CAAC,GAAG;UAAE,GAAGyH;QAAE,CAAC;QAClB,IAAIzH,CAAC,CAACwB,GAAG,CAACvE,EAAE,CAAC,KAAKsK,KAAK,CAACtK,EAAE,EAAE,OAAO+C,CAAC,CAACwB,GAAG,CAACvE,EAAE,CAAC,CAAC,KACxC+C,CAAC,CAACwB,GAAG,CAACvE,EAAE,CAAC,GAAGsK,KAAK,CAACtK,EAAE;QACzB,OAAO+C,CAAC;MACV,CAAC,CAAC;;MAEF;MACAwB,GAAG,CAACiC,QAAQ,GAAGjC,GAAG,CAACiC,QAAQ,KAAK8D,KAAK,CAACtK,EAAE,GAAG,IAAI,GAAGsK,KAAK,CAACtK,EAAE;MAC1DJ,IAAI,CAAC4E,GAAG,CAAC,GAAGD,GAAG;;MAEf;MACA,OAAO;QACL,GAAG8F,IAAI;QACP,CAACrB,KAAK,GAAG;UAAE,GAAGqB,IAAI,CAACrB,KAAK,CAAC;UAAEpJ;QAAK;MAClC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM6K,SAAS,GAAGC,MAAM,IAAI;IAC1B,MAAM;MAAEC,MAAM;MAAEC,WAAW;MAAEC;IAAY,CAAC,GAAGH,MAAM;IACnD,IAAI,CAACE,WAAW,EAAE;IAElB,MAAME,KAAK,GAAGH,MAAM,CAACI,WAAW;IAChC,MAAMC,KAAK,GAAGJ,WAAW,CAACG,WAAW;IACrC;IACA,IAAID,KAAK,KAAKE,KAAK,IAAIL,MAAM,CAACM,KAAK,KAAKL,WAAW,CAACK,KAAK,EAAE;;IAE3D;IACA,MAAMlE,WAAW,GAAGnB,IAAI,CAACC,KAAK,CAC5BC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IACnCH,IAAI,CAACM,SAAS,CAAC;MAAEc,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAC/C,CAAC;;IAED;IACA,IAAI6D,KAAK,KAAKE,KAAK,KAAKF,KAAK,KAAK,UAAU,IAAIA,KAAK,KAAK,UAAU,CAAC,EAAE;MACrE,MAAM7G,GAAG,GAAGiH,KAAK,CAACC,IAAI,CAACpE,WAAW,CAAC+D,KAAK,CAAC,IAAI,EAAE,CAAC;MAChD;MACA,MAAMK,IAAI,GAAGlH,GAAG,CAACmH,OAAO,CAACP,WAAW,CAAC;MACrC,IAAIM,IAAI,GAAG,CAAC,CAAC,EAAE;QACblH,GAAG,CAACoH,MAAM,CAACF,IAAI,EAAE,CAAC,CAAC;QACnBlH,GAAG,CAACoH,MAAM,CAACT,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEJ,WAAW,CAAC;QAC7C9D,WAAW,CAAC+D,KAAK,CAAC,GAAG7G,GAAG;MAC1B;IACF,CAAC,MAAM;MACL;MACA,CAAC,UAAU,EAAC,UAAU,CAAC,CAACqC,OAAO,CAACiB,GAAG,IAAI;QACrCR,WAAW,CAACQ,GAAG,CAAC,GAAG,CAACR,WAAW,CAACQ,GAAG,CAAC,IAAI,EAAE,EAAE4B,MAAM,CAACnJ,EAAE,IAAIA,EAAE,KAAK6K,WAAW,CAAC;MAC9E,CAAC,CAAC;MACF;MACA,IAAIG,KAAK,KAAK,UAAU,IAAIA,KAAK,KAAK,UAAU,EAAE;QAChD,MAAM/G,GAAG,GAAGiH,KAAK,CAACC,IAAI,CAACpE,WAAW,CAACiE,KAAK,CAAC,IAAI,EAAE,CAAC;QAChD/G,GAAG,CAACoH,MAAM,CAACT,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEJ,WAAW,CAAC;QAC7C9D,WAAW,CAACiE,KAAK,CAAC,GAAG/G,GAAG;MAC1B;IACF;;IAEA;IACA6B,YAAY,CAACG,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACa,WAAW,CAAC,CAAC;;IAEhE;IACA,MAAMuE,OAAO,GAAGJ,KAAK,CAACC,IAAI,CAAC9D,OAAO,CAACyD,KAAK,CAAC,CAAClL,IAAI,CAAC;IAC/C,MAAM,CAAC2L,KAAK,CAAC,GAAGD,OAAO,CAACD,MAAM,CAACV,MAAM,CAACM,KAAK,EAAE,CAAC,CAAC;;IAE/C;IACA,MAAMO,UAAU,GAAGR,KAAK,KAAK,OAAO,GAChC;MAAE,GAAGO,KAAK;MAAE/D,UAAU,EAAC,EAAE;MAAEjC,SAAS,EAAC,IAAI;MAAEC,OAAO,EAAC,IAAI;MAAEzD,KAAK,EAAC,EAAE;MAAEuD,GAAG,EAAC,EAAE;MAAEG,QAAQ,EAAC,EAAE;MAAEC,MAAM,EAAC;IAAM,CAAC,GACtG6F,KAAK;IAET,MAAME,OAAO,GAAGP,KAAK,CAACC,IAAI,CAAC9D,OAAO,CAAC2D,KAAK,CAAC,CAACpL,IAAI,CAAC;IAC/C6L,OAAO,CAACJ,MAAM,CAACT,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEO,UAAU,CAAC;IAEhD,MAAME,QAAQ,GAAGV,KAAK,KAAK,OAAO,GAC9BS,OAAO,CAACpL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrB,MAAMgD,EAAE,GAAGN,YAAY,CAAC3C,CAAC,CAAC4D,QAAQ,CAAC;QAAEC,EAAE,GAAGlB,YAAY,CAAC1C,CAAC,CAAC2D,QAAQ,CAAC;MAClE,IAAIX,EAAE,IAAIY,EAAE,EAAE,OAAOZ,EAAE,GAAGY,EAAE;MAC5B,IAAIZ,EAAE,EAAE,OAAO,CAAC,CAAC;MACjB,IAAIY,EAAE,EAAE,OAAO,CAAC;MAChB,OAAO,CAAC;IACV,CAAC,CAAC,GACFC,mBAAmB,CAACqH,OAAO,CAAC;IAEhC/B,UAAU,CAAC;MACT,GAAGrC,OAAO;MACV,CAACyD,KAAK,GAAG;QAAE,GAAGzD,OAAO,CAACyD,KAAK,CAAC;QAAElL,IAAI,EAAE0L;MAAQ,CAAC;MAC7C,CAACN,KAAK,GAAG;QAAE,GAAG3D,OAAO,CAAC2D,KAAK,CAAC;QAAEpL,IAAI,EAAE8L;MAAS;IAC/C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,oBACE7M,OAAA,CAAAE,SAAA;IAAA4M,QAAA,GACGzM,SAAS,iBACRL,OAAA,CAAC+M,mBAAmB;MAClBxM,EAAE,EAAEA,EAAG;MACPC,KAAK,EAAEA,KAAM;MACbS,iBAAiB,EAAEA,iBAAkB;MACrCX,YAAY,EAAEA;IAAa;MAAA0M,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF,eAEDnN,OAAA;MAAKoN,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,UAAU,EAAE,YAAY;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAT,QAAA,gBAGlE9M,OAAA;QACEwN,OAAO,EAAEA,CAAA,KAAMlN,YAAY,CAAC,IAAI,CAAE;QAClC8M,KAAK,EAAE;UAAEK,WAAW,EAAE,CAAC;UAAEF,QAAQ,EAAE;QAAG,CAAE;QAAAT,QAAA,EACzC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnN,OAAA;QAAQwN,OAAO,EAAEE,UAAW;QAACN,KAAK,EAAE;UAAEG,QAAQ,EAAE;QAAG,CAAE;QAAAT,QAAA,GAAC,iBACrC,EAAC,GAAG,EAClBa,UAAU,KAAK,SAAS,iBACvB3N,OAAA;UAAMoN,KAAK,EAAE;YAAEQ,KAAK,EAAE,OAAO;YAAEL,QAAQ,EAAE;UAAG,CAAE;UAAAT,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC/D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAGTnN,OAAA;QACEoN,KAAK,EAAE;UACLS,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBC,GAAG,EAAE,EAAE;UACPC,MAAM,EAAE,QAAQ;UAChBC,QAAQ,EAAE,MAAM;UAChBV,QAAQ,EAAE;QACZ,CAAE;QAAAT,QAAA,GAED,CACC;UAAEoB,KAAK,EAAE,aAAa;UAAEC,EAAE,EAAEC,YAAY;UAAEC,MAAM,EAAEC;QAAY,CAAC,EAC/D;UAAEJ,KAAK,EAAE,WAAW;UAAKC,EAAE,EAAEI,UAAU;UAAIF,MAAM,EAAEG;QAAY,CAAC,EAChE;UAAEN,KAAK,EAAE,WAAW;UAAKC,EAAE,EAAEM,YAAY;UAAEJ,MAAM,EAAEK;QAAY,CAAC,EAChE;UAAER,KAAK,EAAE,MAAM;UAAUC,EAAE,EAAE,KAAK;UAASE,MAAM,EAAE;QAAY,CAAC,CACjE,CAAC5I,GAAG,CAAC,CAACkJ,IAAI,EAAEC,CAAC,kBACZ5O,OAAA;UAAaoN,KAAK,EAAE;YAAES,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAAjB,QAAA,gBACpE9M,OAAA;YACEoN,KAAK,EAAE;cACLyB,KAAK,EAAE,EAAE;cACTC,MAAM,EAAE,EAAE;cACVC,UAAU,EAAEJ,IAAI,CAACR,EAAE;cACnBE,MAAM,EAAE,aAAaM,IAAI,CAACN,MAAM,EAAE;cAClCW,YAAY,EAAE;YAChB;UAAE;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACDwB,IAAI,CAACT,KAAK;QAAA,GAVHU,CAAC;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWN,CACN,CAAC,eACFnN,OAAA;UAAKoN,KAAK,EAAE;YAAES,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAAjB,QAAA,gBAC5D9M,OAAA;YAAMoN,KAAK,EAAE;cAAEG,QAAQ,EAAE;YAAG,CAAE;YAAAT,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,SAC1C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnN,OAAA;UAAKoN,KAAK,EAAE;YAAES,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAAjB,QAAA,gBAC5D9M,OAAA;YAAMoN,KAAK,EAAE;cAAEG,QAAQ,EAAE;YAAG,CAAE;YAAAT,QAAA,EAAC;UAAC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,WACzC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACL,CAAC,OAAO,EAAC,WAAW,EAAC,gBAAgB,CAAC,CAAC1H,GAAG,CAAC,CAACwJ,GAAG,EAACL,CAAC,KAAK;UACrD,MAAMhB,KAAK,GAAGgB,CAAC,KAAG,CAAC,GAACM,YAAY,GAACN,CAAC,KAAG,CAAC,GAACO,UAAU,GAACC,YAAY;UAC9D,oBACEpP,OAAA;YAAaoN,KAAK,EAAE;cAAES,OAAO,EAAE,MAAM;cAAEC,UAAU,EAAE,QAAQ;cAAEC,GAAG,EAAE;YAAE,CAAE;YAAAjB,QAAA,gBACpE9M,OAAA;cAAMoN,KAAK,EAAE;gBAAEyB,KAAK,EAAC,EAAE;gBAAEC,MAAM,EAAC,EAAE;gBAAEC,UAAU,EAACnB,KAAK;gBAAEoB,YAAY,EAAC;cAAE;YAAE;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,EACxE8B,GAAG;UAAA,GAFIL,CAAC;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGN,CAAC;QAEV,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNnN,OAAA,CAACL,eAAe;QAACiM,SAAS,EAAEA,SAAU;QAAAkB,QAAA,eACpC9M,OAAA;UAAKoN,KAAK,EAAE;YAAES,OAAO,EAAE,MAAM;YAAEE,GAAG,EAAE,EAAE;YAAEsB,SAAS,EAAE;UAAG,CAAE;UAAAvC,QAAA,EACrD,CAAC,OAAO,EAAC,UAAU,EAAC,UAAU,CAAC,CAACrH,GAAG,CAAC0E,KAAK,IAAI;YAC5C,MAAMzB,GAAG,GAAGF,OAAO,CAAC2B,KAAK,CAAC,IAAI,CAAC,CAAC;YAChC,MAAMpJ,IAAI,GAAGsL,KAAK,CAACiD,OAAO,CAAC5G,GAAG,CAAC3H,IAAI,CAAC,GAAG2H,GAAG,CAAC3H,IAAI,GAAG,EAAE;;YAEpD;YACA,MAAMwO,QAAQ,GAAG,EAAE;YACnB,IAAIX,CAAC,GAAG,CAAC;YACT,OAAOA,CAAC,GAAG7N,IAAI,CAACyD,MAAM,EAAE;cACtB,MAAMqD,KAAK,GAAGP,QAAQ,CAACvG,IAAI,EAAEA,IAAI,CAAC6N,CAAC,CAAC,CAACzN,EAAE,CAAC;cACxC,MAAMqO,GAAG,GAAG3H,KAAK,CAACrD,MAAM,GAAG,CAAC,GAAGqD,KAAK,CAACrD,MAAM,GAAG,CAAC;cAC/C+K,QAAQ,CAACxH,IAAI,CAAC;gBAAE7E,KAAK,EAAE0L,CAAC;gBAAEY;cAAI,CAAC,CAAC;cAChCZ,CAAC,IAAIY,GAAG;YACV;YACA,MAAMC,GAAG,GAAG,CAAC;cAAEC,OAAO,GAAG,CAAC;YAE1B,oBACE1P,OAAA,CAACJ,SAAS;cAAasM,WAAW,EAAE/B,KAAM;cAAA2C,QAAA,EACvC6C,QAAQ,iBACP3P,OAAA;gBACE4P,GAAG,EAAED,QAAQ,CAACE,QAAS;gBAAA,GACnBF,QAAQ,CAACG,cAAc;gBAC3B1C,KAAK,EAAE;kBACLpC,QAAQ,EAAE,UAAU;kBACpBqD,MAAM,EAAE,gBAAgB;kBACxBW,YAAY,EAAE,CAAC;kBACfH,KAAK,EAAE1E,KAAK,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG;kBACpC4F,SAAS,EAAE,GAAG;kBACd1C,OAAO,EAAE,EAAE;kBACX0B,UAAU,EAAE;gBACd,CAAE;gBAAAjC,QAAA,gBAEF9M,OAAA;kBAAIoN,KAAK,EAAE;oBAAE4C,SAAS,EAAE,QAAQ;oBAAEhC,MAAM,EAAE,OAAO;oBAAET,QAAQ,EAAE;kBAAG,CAAE;kBAAAT,QAAA,EAC/DpE,GAAG,CAACuH;gBAAK;kBAAAjD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC,EAEJoC,QAAQ,CAAC9J,GAAG,CAAC,CAACyK,GAAG,EAAEC,EAAE,kBACpBnQ,OAAA;kBAEEoN,KAAK,EAAE;oBACLpC,QAAQ,EAAE,UAAU;oBACpBoF,YAAY,EAAEX,GAAG;oBACjBY,MAAM,EAAEH,GAAG,CAACV,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;oBAC3Bc,OAAO,EAAEJ,GAAG,CAACV,GAAG,GAAG,CAAC,GAAG,GAAGE,OAAO,kBAAkB,GAAGa,SAAS;oBAC/DC,aAAa,EAAEN,GAAG,CAACV,GAAG,GAAG,CAAC,GAAG,KAAK,GAAGe,SAAS;oBAC9CvB,YAAY,EAAE;kBAChB,CAAE;kBAAAlC,QAAA,GAED/L,IAAI,CAACmB,KAAK,CAACgO,GAAG,CAAChN,KAAK,EAAEgN,GAAG,CAAChN,KAAK,GAAGgN,GAAG,CAACV,GAAG,CAAC,CAAC/J,GAAG,CAAC,CAACC,GAAG,EAAE+K,IAAI,KAAK;oBAC7D,MAAM9K,GAAG,GAAGuK,GAAG,CAAChN,KAAK,GAAGuN,IAAI;oBAC5B,MAAMC,IAAI,GAAGhL,GAAG,CAACvE,EAAE,CAACwP,UAAU,CAAC,KAAK,CAAC;oBACrC,MAAMC,MAAM,GAAGlL,GAAG,CAACoE,QAAQ,KAAK,WAAW;oBAC3C,MAAM+G,IAAI,GAAGH,IAAI,GACbtC,YAAY,GACZwC,MAAM,GACNrC,UAAU,GACVE,YAAY;oBAChB,IAAIN,EAAE,GAAG0C,IAAI;oBACb,IAAIC,IAAI,GAAGJ,IAAI,GACXpC,WAAW,GACXsC,MAAM,GACNpC,SAAS,GACTE,WAAW;oBACf,IAAIhJ,GAAG,CAACmB,MAAM,EAAE;sBACdsH,EAAE,GAAG;AACjC;AACA,gCAAgC0C,IAAI,KAAKA,IAAI;AAC7C;AACA;AACA,8BAA8B;sBACFC,IAAI,GAAG,KAAK;oBACd;oBAEA,oBACE9Q,OAAA,CAACH,SAAS;sBAAcmM,WAAW,EAAEtG,GAAG,CAACvE,EAAG;sBAACiL,KAAK,EAAEzG,GAAI;sBAAAmH,QAAA,EACrDiE,IAAI;wBAAA,IAAAC,KAAA;wBAAA,oBACHhR,OAAA;0BACE4P,GAAG,EAAEmB,IAAI,CAAClB,QAAS;0BAAA,GACfkB,IAAI,CAACE,cAAc;0BAAA,GACnBF,IAAI,CAACG,eAAe;0BACxB9D,KAAK,EAAE;4BACLpC,QAAQ,EAAE,UAAU;4BACpB6C,OAAO,EAAE,MAAM;4BACfsD,mBAAmB,EAAE,UAAU;4BAC/BC,gBAAgB,EAAE,qBAAqB;4BACvCC,SAAS,EAAE,CAAC;4BACZC,MAAM,EAAE,CAAC;4BACTjE,OAAO,EAAE,kBAAkB;4BAC3BW,MAAM,EAAE,OAAOyC,IAAI,GAAGP,GAAG,CAACV,GAAG,GAAG,CAAC,GAAGC,GAAG,GAAG,CAAC,MAAM;4BACjDV,UAAU,EAAEZ,EAAE;4BACdE,MAAM,EAAE,aAAayC,IAAI,EAAE;4BAC3B9B,YAAY,EAAE,CAAC;4BACfqB,MAAM,EAAE,CAAC;4BACT,GAAGU,IAAI,CAACE,cAAc,CAAC7D;0BACzB,CAAE;0BAAAN,QAAA,GAED2D,IAAI,KAAK,CAAC,IAAIP,GAAG,CAACV,GAAG,GAAG,CAAC,iBACxBxP,OAAA;4BACEoN,KAAK,EAAE;8BACLpC,QAAQ,EAAE,UAAU;8BACpBuG,GAAG,EAAE,CAAC;8BACNC,KAAK,EAAE,CAAC;8BACR3C,KAAK,EAAE,CAAC;8BACRC,MAAM,EAAE,MAAM;8BACdC,UAAU,EAAE,SAAS;8BACrBsB,MAAM,EAAE;4BACV;0BAAE;4BAAArD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACH,CACF,eAGDnN,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACb3C,UAAU,EAAE8B,IAAI;8BAChBxD,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,CAAC;8BACf2C,UAAU,EAAE,QAAQ;8BACpBC,QAAQ,EAAE,QAAQ;8BAClBC,YAAY,EAAE,UAAU;8BACxBtE,QAAQ,EAAE,EAAE;8BACZuE,UAAU,EAAE;4BACd,CAAE;4BAAAhF,QAAA,gBAEF9M,OAAA;8BACEoN,KAAK,EAAE;gCACLS,OAAO,EAAE,cAAc;gCACvBgB,KAAK,EAAE,EAAE;gCACTC,MAAM,EAAE,EAAE;gCACVE,YAAY,EAAE,KAAK;gCACnBD,UAAU,EAAE,MAAM;gCAClBnB,KAAK,EAAEiD,IAAI;gCACXkB,UAAU,EAAE,MAAM;gCAClB/B,SAAS,EAAE,QAAQ;gCACnBzC,QAAQ,EAAEmD,IAAI,GAAG,EAAE,GAAG,EAAE;gCACxBoB,UAAU,EAAE,MAAM;gCAClBrE,WAAW,EAAE;8BACf,CAAE;8BAAAX,QAAA,EAED4D,IAAI,GAAG,GAAG,GAAGhL,GAAG,CAACvE;4BAAE;8BAAA6L,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAChB,CAAC,EACNzH,GAAG,CAACjF,OAAO;0BAAA;4BAAAuM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACR,CAAC,eAGPnN,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACbM,WAAW,EAAE,KAAK;8BAClBjD,UAAU,EAAE8B,IAAI;8BAChBxD,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,CAAC;8BACfzB,QAAQ,EAAE,EAAE;8BACZuE,UAAU,EAAE,MAAM;8BAClBH,UAAU,EAAE,QAAQ;8BACpBC,QAAQ,EAAE,QAAQ;8BAClBC,YAAY,EAAE;4BAChB,CAAE;4BAAA/E,QAAA,EAEDpH,GAAG,CAAC/E;0BAAQ;4BAAAqM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACT,CAAC,eAGPnN,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACb3C,UAAU,EAAE8B,IAAI;8BAChBxD,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,CAAC;8BACf2C,UAAU,EAAE,QAAQ;8BACpBC,QAAQ,EAAE,QAAQ;8BAClBC,YAAY,EAAE,UAAU;8BACxBtE,QAAQ,EAAE;4BACZ,CAAE;4BAAAT,QAAA,EAEDpH,GAAG,CAAChF;0BAAU;4BAAAsM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACX,CAAC,EAGNzH,GAAG,CAACxC,KAAK,iBACRlD,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACbM,WAAW,EAAE,KAAK;8BAClBjD,UAAU,EAAEG,YAAY;8BACxB7B,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,EAAE;8BAChB2C,UAAU,EAAE,QAAQ;8BACpBpE,QAAQ,EAAE;4BACZ,CAAE;4BAAAT,QAAA,EAEDpH,GAAG,CAACxC;0BAAK;4BAAA8J,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACN,CACP,eAGDnN,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACb3C,UAAU,EAAEI,UAAU;8BACtB9B,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,CAAC;8BACf2C,UAAU,EAAE,QAAQ;8BACpBC,QAAQ,EAAE,QAAQ;8BAClBC,YAAY,EAAE,UAAU;8BACxBtE,QAAQ,EAAE;4BACZ,CAAE;4BAAAT,QAAA,EAED,QAAQ5H,OAAO,CAACF,WAAW,CAACZ,YAAY,CAACsB,GAAG,CAACL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;0BAAE;4BAAA2H,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAC1D,CAAC,EAGNzH,GAAG,CAACe,GAAG,iBACNzG,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACbM,WAAW,EAAE,KAAK;8BAClBjD,UAAU,EAAEI,UAAU;8BACtB9B,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,EAAE;8BAChB2C,UAAU,EAAE,QAAQ;8BACpBpE,QAAQ,EAAE;4BACZ,CAAE;4BAAAT,QAAA,EAEDpH,GAAG,CAACe;0BAAG;4BAAAuG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACJ,CACP,eAGDnN,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACb3C,UAAU,EAAEK,YAAY;8BACxB/B,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,CAAC;8BACf2C,UAAU,EAAE,QAAQ;8BACpBpE,QAAQ,EAAE;4BACZ,CAAE;4BAAAT,QAAA,EAED,QAAQ5H,OAAO,CAACQ,GAAG,CAACL,QAAQ,CAAC;0BAAE;4BAAA2H,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAC5B,CAAC,EAGNzH,GAAG,CAACkB,QAAQ,iBACX5G,OAAA;4BACEoN,KAAK,EAAE;8BACLqE,OAAO,EAAE,CAAC;8BACVC,UAAU,EAAE,CAAC;8BACbM,WAAW,EAAE,KAAK;8BAClBjD,UAAU,EAAEK,YAAY;8BACxB/B,OAAO,EAAE,OAAO;8BAChB2B,YAAY,EAAE,EAAE;8BAChB2C,UAAU,EAAE,QAAQ;8BACpBpE,QAAQ,EAAE;4BACZ,CAAE;4BAAAT,QAAA,EAEDpH,GAAG,CAACkB;0BAAQ;4BAAAoG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACT,CACP,eAGDnN,OAAA;4BACEoN,KAAK,EAAE;8BACLpC,QAAQ,EAAE,UAAU;8BACpBuG,GAAG,EAAE,CAAC;8BACNC,KAAK,EAAE,CAAC;8BACR3C,KAAK,EAAE,EAAE;8BACTC,MAAM,EAAE,EAAE;8BACVjB,OAAO,EAAE,MAAM;8BACfC,UAAU,EAAE,QAAQ;8BACpBmE,cAAc,EAAE,QAAQ;8BACxBlD,UAAU,EAAE8B,IAAI;8BAChBqB,oBAAoB,EAAE,CAAC;8BACvBC,sBAAsB,EAAE,CAAC;8BACzB9B,MAAM,EAAE,CAAC;8BACT9C,QAAQ,EAAE,EAAE;8BACZuE,UAAU,EAAE;4BACd,CAAE;4BAAAhF,QAAA,EAED,CAACpH,GAAG,CAACoE,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI;0BAAE;4BAAAkD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAC3B,CAAC,EAGLsD,IAAI,GAAGP,GAAG,CAACV,GAAG,GAAG,CAAC,iBACjBxP,OAAA;4BACEwN,OAAO,EAAEA,CAAA,KAAMjC,UAAU,CAACpB,KAAK,EAAExE,GAAG,CAAE;4BACtCyH,KAAK,EAAE;8BACLpC,QAAQ,EAAE,UAAU;8BACpBuG,GAAG,EAAE,EAAE;8BACPC,KAAK,EAAE,CAAC;8BACR3C,KAAK,EAAE,EAAE;8BACTC,MAAM,EAAE,mBAAmB;8BAC3BjB,OAAO,EAAE,MAAM;8BACfuE,aAAa,EAAE,QAAQ;8BACvBtE,UAAU,EAAE,QAAQ;8BACpBmE,cAAc,EAAE,QAAQ;8BACxBI,MAAM,EAAE,SAAS;8BACjBtD,UAAU,EAAE8B,IAAI;8BAChByB,uBAAuB,EAAE,CAAC;8BAC1BjC,MAAM,EAAE;4BACV,CAAE;4BAAAvD,QAAA,EAEDpH,GAAG,CAACiC,QAAQ,OAAAqJ,KAAA,GAAKjQ,IAAI,CAAC4E,GAAG,GAAG,CAAC,CAAC,cAAAqL,KAAA,uBAAbA,KAAA,CAAe7P,EAAE,IAAG,GAAG,GAAG;0BAAI;4BAAA6L,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAC7C,CACN,EAGAuD,IAAI,iBACH1Q,OAAA;4BACEoN,KAAK,EAAE;8BACLpC,QAAQ,EAAE,UAAU;8BACpBuG,GAAG,EAAE,CAAC;8BACNC,KAAK,EAAE,CAAC;8BACR3C,KAAK,EAAE,EAAE;8BACTC,MAAM,EAAE,MAAM;8BACdjB,OAAO,EAAE,MAAM;8BACfuE,aAAa,EAAE,QAAQ;8BACvBtE,UAAU,EAAE,QAAQ;8BACpBmE,cAAc,EAAE,YAAY;8BAC5BlD,UAAU,EAAE8B,IAAI;8BAChBqB,oBAAoB,EAAE,CAAC;8BACvBI,uBAAuB,EAAE,CAAC;8BAC1BjC,MAAM,EAAE;4BACV,CAAE;4BAAAvD,QAAA,gBAEF9M,OAAA;8BACEwN,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAAC5F,GAAG,CAAE;8BACpC0H,KAAK,EAAE;gCAAEiF,MAAM,EAAE,SAAS;gCAAE9E,QAAQ,EAAE,EAAE;gCAAES,MAAM,EAAE;8BAAE,CAAE;8BAAAlB,QAAA,EACvD;4BAED;8BAAAE,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC,eACPnN,OAAA;8BACEwN,OAAO,EAAEA,CAAA,KAAMnC,iBAAiB,CAAC3F,GAAG,CAACvE,EAAE,CAAE;8BACzCiM,KAAK,EAAE;gCAAEiF,MAAM,EAAE,SAAS;gCAAE9E,QAAQ,EAAE,EAAE;gCAAES,MAAM,EAAE;8BAAE,CAAE;8BAAAlB,QAAA,EACvD;4BAED;8BAAAE,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACJ,CACN;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACE,CAAC;sBAAA;oBACP,GAjRazH,GAAG,CAACvE,EAAE;sBAAA6L,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAkRX,CAAC;kBAEhB,CAAC,CAAC,EACDwC,QAAQ,CAAC4C,WAAW;gBAAA,GAzThBpC,EAAE;kBAAAnD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OA0TJ,CACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YACN,GAlVahD,KAAK;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmVV,CAAC;UAEhB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA,eACN,CAAC;AAEL;AACA;AAAA/M,EAAA,CAx7BSD,GAAG;AAAAqS,EAAA,GAAHrS,GAAG;AAy7BZ,SAAS4M,mBAAmBA,CAAC;EAAExM,EAAE;EAAEC,KAAK;EAAES,iBAAiB;EAAEX;AAAa,CAAC,EAAE;EAC3E,oBACEN,OAAA;IACEoN,KAAK,EAAE;MACLpC,QAAQ,EAAE,OAAO;MACjBuG,GAAG,EAAE,CAAC;MAAEkB,IAAI,EAAE,CAAC;MACf5D,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACf4D,eAAe,EAAE,iBAAiB;MAClC7E,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBmE,cAAc,EAAE,QAAQ;MACxB5B,MAAM,EAAE;IACV,CAAE;IAAAvD,QAAA,eAEF9M,OAAA;MACEoN,KAAK,EAAE;QACL2B,UAAU,EAAE,MAAM;QAClB1B,OAAO,EAAE,EAAE;QACX2B,YAAY,EAAE,CAAC;QACfH,KAAK,EAAE,GAAG;QACV8D,SAAS,EAAE;MACb,CAAE;MAAA7F,QAAA,gBAEF9M,OAAA;QAAIoN,KAAK,EAAE;UAAEiC,SAAS,EAAE;QAAE,CAAE;QAAAvC,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAErDnN,OAAA;QAAKoN,KAAK,EAAE;UAAEgD,YAAY,EAAE;QAAG,CAAE;QAAAtD,QAAA,gBAC/B9M,OAAA;UAAA8M,QAAA,EAAO;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtBnN,OAAA;UACE4S,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtS,EAAE,CAACE,OAAQ;UAClBqS,QAAQ,EAAEC,CAAC,IAAIvS,KAAK,CAAC;YAAE,GAAGD,EAAE;YAAEE,OAAO,EAAEsS,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UACzDzF,KAAK,EAAE;YAAEyB,KAAK,EAAE,MAAM;YAAExB,OAAO,EAAE,CAAC;YAAEgC,SAAS,EAAE;UAAE;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENnN,OAAA;QAAKoN,KAAK,EAAE;UAAEgD,YAAY,EAAE;QAAG,CAAE;QAAAtD,QAAA,gBAC/B9M,OAAA;UAAA8M,QAAA,EAAO;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BnN,OAAA;UACE4S,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtS,EAAE,CAACG,UAAW;UACrBoS,QAAQ,EAAEC,CAAC,IAAIvS,KAAK,CAAC;YAAE,GAAGD,EAAE;YAAEG,UAAU,EAAEqS,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAC5DzF,KAAK,EAAE;YAAEyB,KAAK,EAAE,MAAM;YAAExB,OAAO,EAAE,CAAC;YAAEgC,SAAS,EAAE;UAAE;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENnN,OAAA;QAAKoN,KAAK,EAAE;UAAEgD,YAAY,EAAE;QAAG,CAAE;QAAAtD,QAAA,gBAC/B9M,OAAA;UAAA8M,QAAA,EAAO;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBnN,OAAA;UACE4S,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEtS,EAAE,CAACI,QAAS;UACnBmS,QAAQ,EAAEC,CAAC,IAAIvS,KAAK,CAAC;YAAE,GAAGD,EAAE;YAAEI,QAAQ,EAAEoS,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAC1DzF,KAAK,EAAE;YAAEyB,KAAK,EAAE,MAAM;YAAExB,OAAO,EAAE,CAAC;YAAEgC,SAAS,EAAE;UAAE;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENnN,OAAA;QAAKoN,KAAK,EAAE;UAAEgD,YAAY,EAAE;QAAG,CAAE;QAAAtD,QAAA,gBAC/B9M,OAAA;UAAA8M,QAAA,EAAO;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BnN,OAAA;UACE4S,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEtS,EAAE,CAACK,WAAY;UACtBkS,QAAQ,EAAEC,CAAC,IAAIvS,KAAK,CAAC;YAAE,GAAGD,EAAE;YAAEK,WAAW,EAAEmS,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAC7DzF,KAAK,EAAE;YAAEyB,KAAK,EAAE,MAAM;YAAExB,OAAO,EAAE,CAAC;YAAEgC,SAAS,EAAE;UAAE;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENnN,OAAA;QAAKoN,KAAK,EAAE;UAAEgD,YAAY,EAAE;QAAG,CAAE;QAAAtD,QAAA,gBAC/B9M,OAAA;UAAA8M,QAAA,EAAO;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BnN,OAAA;UACE4S,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtS,EAAE,CAACM,MAAO;UACjBiS,QAAQ,EAAEC,CAAC,IAAIvS,KAAK,CAAC;YAAE,GAAGD,EAAE;YAAEM,MAAM,EAAEkS,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UACxDzF,KAAK,EAAE;YAAEyB,KAAK,EAAE,MAAM;YAAExB,OAAO,EAAE,CAAC;YAAEgC,SAAS,EAAE;UAAE;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENnN,OAAA;QAAKoN,KAAK,EAAE;UAAEgD,YAAY,EAAE;QAAG,CAAE;QAAAtD,QAAA,gBAC/B9M,OAAA;UAAA8M,QAAA,EAAO;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBnN,OAAA;UACE6S,KAAK,EAAEtS,EAAE,CAACO,OAAQ;UAClBgS,QAAQ,EAAEC,CAAC,IAAIvS,KAAK,CAAC;YAAE,GAAGD,EAAE;YAAEO,OAAO,EAAEiS,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UACzDzF,KAAK,EAAE;YAAEyB,KAAK,EAAE,MAAM;YAAExB,OAAO,EAAE,CAAC;YAAEgC,SAAS,EAAE;UAAE,CAAE;UAAAvC,QAAA,gBAEnD9M,OAAA;YAAA8M,QAAA,EAAQ;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1BnN,OAAA;YAAA8M,QAAA,EAAQ;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENnN,OAAA;QAAKoN,KAAK,EAAE;UAAES,OAAO,EAAE,MAAM;UAAEoE,cAAc,EAAE,UAAU;UAAElE,GAAG,EAAE;QAAE,CAAE;QAAAjB,QAAA,gBAClE9M,OAAA;UACEwN,OAAO,EAAEA,CAAA,KAAMlN,YAAY,CAAC,KAAK,CAAE;UACnC8M,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAW,CAAE;UAAAP,QAAA,EAChC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnN,OAAA;UACEwN,OAAO,EAAEvM,iBAAkB;UAC3BmM,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAW,CAAE;UAAAP,QAAA,EAChC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC8F,GAAA,GAzGQlG,mBAAmB;AA2G5B,eAAe5M,GAAG;AAAC,IAAAqS,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}