{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// —————————————————————————————\n// CONFIGURATION\n// —————————————————————————————\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// — Color constants — you can tweak these if you like\nconst LIGHT_YELLOW = '#FFF9C4';\nconst DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1';\nconst DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7';\nconst DARK_PURPLE = '#6A1B9A';\nconst LATE_FILL = '#FFCDD2';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\nfunction isHoliday(dt) {/*…*/}\nfunction isWorkday(dt) {/*…*/}\nfunction clampToWorkHours(dt) {/*…*/}\nfunction addWorkTime(start, ms) {/*…*/}\nfunction fmtDT(dt) {/*…*/}\nfunction fmtDate(dt) {/*…*/}\nfunction parseDueDate(d) {/*…*/}\nfunction addWorkDays(start, days) {/*…*/}\nfunction subWorkDays(start, days) {/*…*/}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App() {\n  _s();\n  // columns state\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n\n  // placeholders in localStorage\n  const [placeholders, setPlaceholders] = useState(() => {\n    const s = localStorage.getItem('placeholders');\n    return s ? JSON.parse(s) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  // modal + form state for placeholders\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // — Add new placeholder\n  const addPlaceholder = () => {\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`;\n    const job = {\n      id,\n      title,\n      company: ph.company,\n      quantity: Number(ph.quantity) || 1,\n      stitchCount: Number(ph.stitchCount) || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      start: '',\n      end: '',\n      delivery: ''\n    };\n    setPlaceholders(ps => [job, ...ps]);\n    setShowModal(false);\n    setPh({\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n\n  // — Remove placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(j => j.id !== id));\n  };\n\n  // — Edit placeholder (prefill modal)\n  const editPlaceholder = job => {\n    setPh({\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setPlaceholders(ps => ps.filter(j => j.id !== job.id));\n    setShowModal(true);\n  };\n\n  // — Fetch + merge from API (with position-based ordering)\n  const fetchAll = () => {\n    axios.get(`${API_ROOT}/orders`).then(({\n      data\n    }) => {\n      const cols = {\n        queue: {\n          ...columns.queue,\n          jobs: []\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: []\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: []\n        }\n      };\n      data.forEach(o => {\n        if (!o.title) return;\n        cols[o.machineId || 'queue'].jobs.push({\n          ...o,\n          id: o.id.toString(),\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date || '',\n          end: o.end_date || '',\n          delivery: o.delivery || '',\n          position: o.position // from server\n        });\n      });\n\n      // — Queue: placeholders (by due) + real jobs (by due)\n      const realJobs = cols.queue.jobs.filter(j => !j.id.startsWith('ph-')).sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        return da && db ? da - db : 0;\n      });\n      const sortedPlaceholders = [...placeholders].sort((a, b) => {\n        const pa = parseDueDate(a.due_date),\n          pb = parseDueDate(b.due_date);\n        return pa && pb ? pa - pb : 0;\n      });\n      cols.queue.jobs = [...sortedPlaceholders, ...realJobs];\n\n      // — Machines: sort by persisted position, then recalc times\n      ['machine1', 'machine2'].forEach(mid => {\n        cols[mid].jobs.sort((a, b) => {\n          if (a.position != null && b.position != null) return a.position - b.position;\n          if (a.position != null) return -1;\n          if (b.position != null) return 1;\n          return 0;\n        });\n        let prevEnd = null;\n        cols[mid].jobs.forEach((job, i) => {\n          let start;\n          if (i === 0 && job.embroidery_start) {\n            start = clampToWorkHours(new Date(job.embroidery_start));\n          } else {\n            start = i === 0 ? clampToWorkHours(new Date()) : clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n          }\n          const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n          const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n          const end = addWorkTime(start, runMs);\n          const delivery = fmtDate(addWorkDays(end, 6));\n          job._rawStart = start;\n          job._rawEnd = end;\n          job.start = fmtDT(start);\n          job.end = fmtDT(end);\n          job.delivery = delivery;\n          prevEnd = end;\n        });\n      });\n      setColumns(cols);\n    }).catch(console.error);\n  };\n  useEffect(fetchAll, []);\n\n  // — Drag & Drop handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const [moved] = cols[source.droppableId].jobs.splice(source.index, 1);\n      cols[destination.droppableId].jobs.splice(destination.index, 0, moved);\n      if (destination.droppableId === 'queue') {\n        // clear dates on any job\n        moved.start = moved.end = moved.delivery = '';\n        if (!draggableId.startsWith('ph-')) {\n          axios.put(`${API_ROOT}/orders/${draggableId}`, {\n            machineId: null,\n            start_date: '',\n            end_date: '',\n            delivery: '',\n            position: null\n          }).catch(console.error);\n        }\n        // re-sort\n        const real = cols.queue.jobs.filter(j => !j.id.startsWith('ph-')).sort((a, b) => {\n          const da = parseDueDate(a.due_date),\n            db = parseDueDate(b.due_date);\n          return da && db ? da - db : 0;\n        });\n        const sortedPh = [...placeholders].sort((a, b) => {\n          const pa = parseDueDate(a.due_date),\n            pb = parseDueDate(b.due_date);\n          return pa && pb ? pa - pb : 0;\n        });\n        cols.queue.jobs = [...sortedPh, ...real];\n      } else {\n        // schedule on machine & persist position\n        let prev = null;\n        cols[destination.droppableId].jobs.forEach((j, i) => {\n          const start = i === 0 && j.embroidery_start ? clampToWorkHours(new Date(j.embroidery_start)) : clampToWorkHours(new Date((prev || Date.now()) + 30 * 60000));\n          const qty = j.quantity % 6 === 0 ? j.quantity : Math.ceil(j.quantity / 6) * 6;\n          const runMs = j.stitchCount / 30000 * (qty / 6) * 3600000;\n          const end = addWorkTime(start, runMs);\n          const delivery = fmtDate(addWorkDays(end, 6));\n          j._rawStart = start;\n          j._rawEnd = end;\n          j.start = fmtDT(start);\n          j.end = fmtDT(end);\n          j.delivery = delivery;\n          prev = end;\n          if (!j.id.startsWith('ph-')) {\n            axios.put(`${API_ROOT}/orders/${j.id}`, {\n              machineId: destination.droppableId,\n              start_date: j.start,\n              end_date: j.end,\n              delivery,\n              position: i\n            }).catch(console.error);\n          }\n        });\n      }\n      setColumns(cols);\n    }, 0);\n  };\n\n  // — RENDER\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 14\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAll,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: \"Add Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addPlaceholder,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                textAlign: 'center',\n                margin: '8px 0'\n              },\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const dueDt = parseDueDate(job.due_date);\n              const dueMinus6 = dueDt ? subWorkDays(dueDt, 6) : null;\n              const endDt = job._rawEnd || null;\n              const isLate = endDt && dueMinus6 && endDt > dueMinus6;\n              const isHard = job.due_type === 'Hard Date';\n              const isSoft = job.due_type === 'Soft Date';\n              const isPh = job.id.startsWith('ph-');\n\n              // determine fill & outline\n              let bg, bdr;\n              if (isPh) {\n                bg = LIGHT_YELLOW;\n                bdr = `2px solid ${DARK_YELLOW}`;\n              } else if (isSoft) {\n                bg = LIGHT_GREY;\n                bdr = `2px solid ${DARK_GREY}`;\n              } else if (isHard) {\n                bg = LIGHT_PURPLE;\n                bdr = `2px solid ${DARK_PURPLE}`;\n              } else {\n                bg = '#fff';\n                bdr = '1px solid #ccc';\n              }\n\n              // override fill if late\n              if (isLate) {\n                if (isPh) {\n                  bg = `repeating-linear-gradient(\n                          45deg,\n                          transparent,\n                          transparent 6px,\n                          rgba(255,0,0,0.5) 6px,\n                          rgba(255,0,0,0.5) 12px\n                        )`;\n                } else {\n                  bg = LATE_FILL;\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    position: 'relative',\n                    userSelect: 'none',\n                    padding: 8,\n                    margin: '0 0 8px 0',\n                    background: bg,\n                    border: bdr,\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    ...p.draggableProps.style\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      width: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        flex: 1,\n                        paddingRight: 6\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontWeight: 'bold'\n                        },\n                        children: job.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-end',\n                        gap: 2,\n                        fontSize: 12\n                      },\n                      children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          padding: '2px 4px',\n                          background: '#e0f7fa',\n                          borderRadius: 10\n                        },\n                        children: job.start\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 364,\n                        columnNumber: 50\n                      }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          padding: '2px 4px',\n                          background: '#ffe0b2',\n                          borderRadius: 10\n                        },\n                        children: job.end\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 50\n                      }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          padding: '2px 4px',\n                          background: '#c8e6c9',\n                          borderRadius: 10\n                        },\n                        children: job.delivery\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 50\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 31\n                    }, this), isPh && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: 4,\n                        marginLeft: 8\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => removePlaceholder(job.id),\n                        children: \"\\u2715\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => editPlaceholder(job),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aQvzeAvMhxsODWf6Is0x+cBXtIU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","LATE_FILL","isHoliday","dt","isWorkday","clampToWorkHours","addWorkTime","start","ms","fmtDT","fmtDate","parseDueDate","d","addWorkDays","days","subWorkDays","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","placeholders","setPlaceholders","s","localStorage","getItem","JSON","parse","setItem","stringify","showModal","setShowModal","ph","setPh","company","quantity","stitchCount","inHand","dueType","addPlaceholder","Date","now","job","Number","due_date","due_type","end","delivery","ps","removePlaceholder","filter","j","editPlaceholder","fetchAll","get","then","data","cols","forEach","o","machineId","push","toString","stitch_count","start_date","end_date","position","realJobs","startsWith","sort","a","b","da","db","sortedPlaceholders","pa","pb","mid","prevEnd","i","embroidery_start","getTime","qty","Math","ceil","runMs","_rawStart","_rawEnd","catch","console","error","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","moved","splice","put","real","sortedPh","prev","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","gap","Object","values","map","col","prov","ref","innerRef","droppableProps","border","width","minHeight","margin","idx","dueDt","dueMinus6","endDt","isLate","isHard","isSoft","isPh","bg","bdr","p","draggableProps","dragHandleProps","userSelect","boxShadow","flex","paddingRight","fontWeight","flexDirection","marginLeft","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// —————————————————————————————\n// CONFIGURATION\n// —————————————————————————————\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6];\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// — Color constants — you can tweak these if you like\nconst LIGHT_YELLOW = '#FFF9C4';\nconst DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY   = '#ECEFF1';\nconst DARK_GREY    = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7';\nconst DARK_PURPLE  = '#6A1B9A';\nconst LATE_FILL    = '#FFCDD2';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\nfunction isHoliday(dt){ /*…*/ }\nfunction isWorkday(dt){ /*…*/ }\nfunction clampToWorkHours(dt){ /*…*/ }\nfunction addWorkTime(start, ms){ /*…*/ }\nfunction fmtDT(dt){ /*…*/ }\nfunction fmtDate(dt){ /*…*/ }\nfunction parseDueDate(d){ /*…*/ }\nfunction addWorkDays(start, days){ /*…*/ }\nfunction subWorkDays(start, days){ /*…*/ }\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App(){\n  // columns state\n  const [columns, setColumns] = useState({\n    queue:     { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1:  { id:'machine1', title:'Machine 1',   jobs:[] },\n    machine2:  { id:'machine2', title:'Machine 2',   jobs:[] },\n  });\n\n  // placeholders in localStorage\n  const [placeholders, setPlaceholders] = useState(()=>{\n    const s = localStorage.getItem('placeholders');\n    return s ? JSON.parse(s) : [];\n  });\n  useEffect(()=>{\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  // modal + form state for placeholders\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n\n  // — Add new placeholder\n  const addPlaceholder = ()=>{\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`;\n    const job = {\n      id,\n      title,\n      company:     ph.company,\n      quantity:    Number(ph.quantity)||1,\n      stitchCount: Number(ph.stitchCount)||30000,\n      due_date:    ph.inHand,\n      due_type:    ph.dueType,\n      start:'', end:'', delivery:''\n    };\n    setPlaceholders(ps=>[job, ...ps]);\n    setShowModal(false);\n    setPh({company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n  };\n\n  // — Remove placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(j=>j.id!==id));\n  };\n\n  // — Edit placeholder (prefill modal)\n  const editPlaceholder = job => {\n    setPh({\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setPlaceholders(ps=>ps.filter(j=>j.id!==job.id));\n    setShowModal(true);\n  };\n\n  // — Fetch + merge from API (with position-based ordering)\n  const fetchAll = () => {\n    axios.get(`${API_ROOT}/orders`)\n      .then(({data})=>{\n        const cols = {\n          queue:     { ...columns.queue,    jobs:[] },\n          machine1:  { ...columns.machine1, jobs:[] },\n          machine2:  { ...columns.machine2, jobs:[] },\n        };\n\n        data.forEach(o=>{\n          if (!o.title) return;\n          cols[o.machineId||'queue'].jobs.push({\n            ...o,\n            id:                o.id.toString(),\n            stitchCount:       o.stitch_count,\n            quantity:          o.quantity,\n            due_date:          o.due_date,\n            due_type:          o.due_type,\n            start:             o.start_date  || '',\n            end:               o.end_date    || '',\n            delivery:          o.delivery    || '',\n            position:          o.position    // from server\n          });\n        });\n\n        // — Queue: placeholders (by due) + real jobs (by due)\n        const realJobs = cols.queue.jobs\n          .filter(j=>!j.id.startsWith('ph-'))\n          .sort((a,b)=>{\n            const da=parseDueDate(a.due_date), db=parseDueDate(b.due_date);\n            return da&&db ? da-db : 0;\n          });\n        const sortedPlaceholders = [...placeholders].sort((a,b)=>{\n          const pa=parseDueDate(a.due_date), pb=parseDueDate(b.due_date);\n          return pa&&pb ? pa-pb : 0;\n        });\n        cols.queue.jobs = [...sortedPlaceholders, ...realJobs];\n\n        // — Machines: sort by persisted position, then recalc times\n        ['machine1','machine2'].forEach(mid=>{\n          cols[mid].jobs.sort((a,b)=>{\n            if (a.position!=null && b.position!=null) return a.position-b.position;\n            if (a.position!=null) return -1;\n            if (b.position!=null) return 1;\n            return 0;\n          });\n\n          let prevEnd = null;\n          cols[mid].jobs.forEach((job,i)=>{\n            let start;\n            if (i===0 && job.embroidery_start) {\n              start = clampToWorkHours(new Date(job.embroidery_start));\n            } else {\n              start = i===0\n                ? clampToWorkHours(new Date())\n                : clampToWorkHours(new Date(prevEnd.getTime()+30*60000));\n            }\n\n            const qty = job.quantity % 6 === 0\n              ? job.quantity\n              : Math.ceil(job.quantity/6)*6;\n            const runMs = (job.stitchCount/30000)*(qty/6)*3600000;\n            const end   = addWorkTime(start, runMs);\n            const delivery = fmtDate(addWorkDays(end,6));\n\n            job._rawStart = start;\n            job._rawEnd   = end;\n            job.start     = fmtDT(start);\n            job.end       = fmtDT(end);\n            job.delivery  = delivery;\n            prevEnd       = end;\n          });\n        });\n\n        setColumns(cols);\n      })\n      .catch(console.error);\n  };\n  useEffect(fetchAll, []);\n\n  // — Drag & Drop handler\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason!=='DROP' || !destination) return;\n    if (source.droppableId===destination.droppableId && source.index===destination.index) return;\n\n    setTimeout(()=>{\n      const cols = JSON.parse(JSON.stringify(columns));\n      const [moved] = cols[source.droppableId].jobs.splice(source.index,1);\n      cols[destination.droppableId].jobs.splice(destination.index,0,moved);\n\n      if (destination.droppableId === 'queue') {\n        // clear dates on any job\n        moved.start = moved.end = moved.delivery = '';\n        if (!draggableId.startsWith('ph-')) {\n          axios.put(`${API_ROOT}/orders/${draggableId}`, {\n            machineId: null,\n            start_date: '', end_date: '', delivery: '',\n            position: null\n          }).catch(console.error);\n        }\n        // re-sort\n        const real = cols.queue.jobs\n          .filter(j=>!j.id.startsWith('ph-'))\n          .sort((a,b)=>{\n            const da=parseDueDate(a.due_date), db=parseDueDate(b.due_date);\n            return da&&db ? da-db : 0;\n          });\n        const sortedPh = [...placeholders].sort((a,b)=>{\n          const pa=parseDueDate(a.due_date), pb=parseDueDate(b.due_date);\n          return pa&&pb ? pa-pb : 0;\n        });\n        cols.queue.jobs = [...sortedPh, ...real];\n\n      } else {\n        // schedule on machine & persist position\n        let prev = null;\n        cols[destination.droppableId].jobs.forEach((j,i)=>{\n          const start = i===0 && j.embroidery_start\n            ? clampToWorkHours(new Date(j.embroidery_start))\n            : clampToWorkHours(new Date((prev||Date.now()) + 30*60000));\n          const qty = j.quantity % 6 === 0 ? j.quantity : Math.ceil(j.quantity/6)*6;\n          const runMs = (j.stitchCount/30000)*(qty/6)*3600000;\n          const end   = addWorkTime(start, runMs);\n          const delivery = fmtDate(addWorkDays(end,6));\n\n          j._rawStart = start;\n          j._rawEnd   = end;\n          j.start     = fmtDT(start);\n          j.end       = fmtDT(end);\n          j.delivery  = delivery;\n          prev        = end;\n\n          if (!j.id.startsWith('ph-')) {\n            axios.put(`${API_ROOT}/orders/${j.id}`, {\n              machineId: destination.droppableId,\n              start_date: j.start,\n              end_date:   j.end,\n              delivery,\n              position: i\n            }).catch(console.error);\n          }\n        });\n      }\n\n      setColumns(cols);\n    }, 0);\n  };\n\n  // — RENDER\n  return (\n    <div style={{padding:16,fontFamily:'sans-serif',fontSize:14}}>\n      <button onClick={()=>setShowModal(true)} style={{marginRight:8}}>+ Add Placeholder</button>\n      <button onClick={fetchAll}>Refresh Data</button>\n\n      {showModal && (\n        <div style={{\n          position:'fixed',top:0,left:0,right:0,bottom:0,\n          background:'rgba(0,0,0,0.3)',\n          display:'flex',alignItems:'center',justifyContent:'center',\n          zIndex:1000\n        }}>\n          <div style={{background:'#fff',padding:20,borderRadius:4,minWidth:300}}>\n            <h3 style={{marginTop:0,textAlign:'center'}}>Add Placeholder</h3>\n            {/* form fields */}\n            {/* ...existing inputs bound to ph.company etc. */}\n            <div style={{textAlign:'right'}}>\n              <button onClick={()=>setShowModal(false)} style={{marginRight:8}}>Cancel</button>\n              <button onClick={addPlaceholder}>Submit</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{display:'flex',gap:16,marginTop:16}}>\n          {Object.values(columns).map(col=>(\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov=>(\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4 style={{textAlign:'center',margin:'8px 0'}}>{col.title}</h4>\n\n                  {col.jobs.map((job,idx)=>{\n                    const dueDt     = parseDueDate(job.due_date);\n                    const dueMinus6 = dueDt ? subWorkDays(dueDt, 6) : null;\n                    const endDt     = job._rawEnd || null;\n                    const isLate    = endDt && dueMinus6 && endDt > dueMinus6;\n                    const isHard    = job.due_type === 'Hard Date';\n                    const isSoft    = job.due_type === 'Soft Date';\n                    const isPh      = job.id.startsWith('ph-');\n\n                    // determine fill & outline\n                    let bg, bdr;\n                    if (isPh) {\n                      bg  = LIGHT_YELLOW;\n                      bdr = `2px solid ${DARK_YELLOW}`;\n                    } else if (isSoft) {\n                      bg  = LIGHT_GREY;\n                      bdr = `2px solid ${DARK_GREY}`;\n                    } else if (isHard) {\n                      bg  = LIGHT_PURPLE;\n                      bdr = `2px solid ${DARK_PURPLE}`;\n                    } else {\n                      bg  = '#fff';\n                      bdr = '1px solid #ccc';\n                    }\n\n                    // override fill if late\n                    if (isLate) {\n                      if (isPh) {\n                        bg = `repeating-linear-gradient(\n                          45deg,\n                          transparent,\n                          transparent 6px,\n                          rgba(255,0,0,0.5) 6px,\n                          rgba(255,0,0,0.5) 12px\n                        )`;\n                      } else {\n                        bg = LATE_FILL;\n                      }\n                    }\n\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p=>(\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              position:'relative',\n                              userSelect:'none',\n                              padding:8,\n                              margin:'0 0 8px 0',\n                              background:bg,\n                              border:bdr,\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            <div style={{display:'flex',alignItems:'center',width:'100%'}}>\n                              <div style={{flex:1,paddingRight:6}}>\n                                <div style={{fontWeight:'bold'}}>{job.title}</div>\n                              </div>\n                              <div style={{\n                                display:'flex',\n                                flexDirection:'column',\n                                alignItems:'flex-end',\n                                gap:2,\n                                fontSize:12\n                              }}>\n                                {job.start    && <div style={{padding:'2px 4px',background:'#e0f7fa',borderRadius:10}}>{job.start}</div>}\n                                {job.end      && <div style={{padding:'2px 4px',background:'#ffe0b2',borderRadius:10}}>{job.end}</div>}\n                                {job.delivery && <div style={{padding:'2px 4px',background:'#c8e6c9',borderRadius:10}}>{job.delivery}</div>}\n                              </div>\n                              {isPh && (\n                                <div style={{display:'flex',flexDirection:'column',gap:4,marginLeft:8}}>\n                                  <button onClick={()=>removePlaceholder(job.id)}>✕</button>\n                                  <button onClick={()=>editPlaceholder(job)}>Edit</button>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}