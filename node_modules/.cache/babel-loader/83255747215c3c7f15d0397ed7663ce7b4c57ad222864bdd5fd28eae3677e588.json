{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/orders').then(r => setEvents(r.data.map(o => ({\n      id: o.id,\n      title: o.title,\n      start: o.start,\n      end: o.end\n    }))));\n  }, []);\n  function handleEventDrop({\n    event\n  }) {\n    // snap to 30 min increments\n    const d = new Date(event.start);\n    d.setMinutes(Math.round(d.getMinutes() / 30) * 30);\n    event.setStart(d);\n    event.setEnd(new Date(d.getTime() + (new Date(event.end) - new Date(event.start))));\n    axios.put(`http://localhost:5000/api/orders/${event.id}`, {\n      start: event.start,\n      end: event.end\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [timeGridPlugin, interactionPlugin],\n    initialView: \"timeGridWeek\",\n    editable: true,\n    events: events,\n    eventDrop: handleEventDrop,\n    slotDuration: \"00:30:00\",\n    slotLabelInterval: \"01:00\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","timeGridPlugin","interactionPlugin","axios","jsxDEV","_jsxDEV","App","_s","events","setEvents","get","then","r","data","map","o","id","title","start","end","handleEventDrop","event","d","Date","setMinutes","Math","round","getMinutes","setStart","setEnd","getTime","put","plugins","initialView","editable","eventDrop","slotDuration","slotLabelInterval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\n\nexport default function App(){\n  const [events, setEvents] = useState([]);\n\n  useEffect(()=>{\n    axios.get('http://localhost:5000/api/orders')\n      .then(r=> setEvents(r.data.map(o=>({\n        id: o.id,\n        title: o.title,\n        start: o.start,\n        end: o.end\n      }))))\n  },[])\n\n  function handleEventDrop({ event }){\n    // snap to 30 min increments\n    const d = new Date(event.start);\n    d.setMinutes(Math.round(d.getMinutes()/30)*30);\n    event.setStart(d);\n    event.setEnd(new Date(d.getTime() + (new Date(event.end)-new Date(event.start))));\n    axios.put(`http://localhost:5000/api/orders/${event.id}`, {\n      start: event.start,\n      end: event.end\n    });\n  }\n\n  return (\n    <FullCalendar\n      plugins={[ timeGridPlugin, interactionPlugin ]}\n      initialView=\"timeGridWeek\"\n      editable={true}\n      events={events}\n      eventDrop={handleEventDrop}\n      slotDuration=\"00:30:00\"\n      slotLabelInterval=\"01:00\"\n    />\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAI;IACZI,KAAK,CAACO,GAAG,CAAC,kCAAkC,CAAC,CAC1CC,IAAI,CAACC,CAAC,IAAGH,SAAS,CAACG,CAAC,CAACC,IAAI,CAACC,GAAG,CAACC,CAAC,KAAG;MACjCC,EAAE,EAAED,CAAC,CAACC,EAAE;MACRC,KAAK,EAAEF,CAAC,CAACE,KAAK;MACdC,KAAK,EAAEH,CAAC,CAACG,KAAK;MACdC,GAAG,EAAEJ,CAAC,CAACI;IACT,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,EAAC,EAAE,CAAC;EAEL,SAASC,eAAeA,CAAC;IAAEC;EAAM,CAAC,EAAC;IACjC;IACA,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,KAAK,CAACH,KAAK,CAAC;IAC/BI,CAAC,CAACE,UAAU,CAACC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACK,UAAU,CAAC,CAAC,GAAC,EAAE,CAAC,GAAC,EAAE,CAAC;IAC9CN,KAAK,CAACO,QAAQ,CAACN,CAAC,CAAC;IACjBD,KAAK,CAACQ,MAAM,CAAC,IAAIN,IAAI,CAACD,CAAC,CAACQ,OAAO,CAAC,CAAC,IAAI,IAAIP,IAAI,CAACF,KAAK,CAACF,GAAG,CAAC,GAAC,IAAII,IAAI,CAACF,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IACjFf,KAAK,CAAC4B,GAAG,CAAC,oCAAoCV,KAAK,CAACL,EAAE,EAAE,EAAE;MACxDE,KAAK,EAAEG,KAAK,CAACH,KAAK;MAClBC,GAAG,EAAEE,KAAK,CAACF;IACb,CAAC,CAAC;EACJ;EAEA,oBACEd,OAAA,CAACL,YAAY;IACXgC,OAAO,EAAE,CAAE/B,cAAc,EAAEC,iBAAiB,CAAG;IAC/C+B,WAAW,EAAC,cAAc;IAC1BC,QAAQ,EAAE,IAAK;IACf1B,MAAM,EAAEA,MAAO;IACf2B,SAAS,EAAEf,eAAgB;IAC3BgB,YAAY,EAAC,UAAU;IACvBC,iBAAiB,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN;AAAClC,EAAA,CApCuBD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}