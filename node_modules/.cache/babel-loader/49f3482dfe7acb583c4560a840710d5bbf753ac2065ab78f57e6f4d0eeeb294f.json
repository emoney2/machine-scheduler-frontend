{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` + ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n\n  // Merge-only fetch\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders').then(({\n      data: orders\n    }) => {\n      setColumns(prev => {\n        // 1) Clone previous columns\n        const cols = {\n          queue: {\n            ...prev.queue,\n            jobs: [...prev.queue.jobs]\n          },\n          machine1: {\n            ...prev.machine1,\n            jobs: [...prev.machine1.jobs]\n          },\n          machine2: {\n            ...prev.machine2,\n            jobs: [...prev.machine2.jobs]\n          }\n        };\n        // 2) Build map of existing jobs\n        const existing = {};\n        Object.values(cols).forEach(col => col.jobs.forEach(job => {\n          existing[job.id] = job;\n        }));\n        // 3) Merge in each order\n        orders.forEach(o => {\n          const job = existing[o.id];\n          if (job) {\n            // update static fields\n            job.title = o.title;\n            job.stitchCount = o.stitch_count;\n            job.quantity = o.quantity;\n            job.due_date = o.due_date;\n          } else {\n            // new job â†’ unscheduled\n            cols.queue.jobs.push({\n              id: o.id,\n              title: o.title,\n              stitchCount: o.stitch_count,\n              quantity: o.quantity,\n              due_date: o.due_date,\n              start: '',\n              end: ''\n            });\n          }\n        });\n        return cols;\n      });\n    }).catch(console.error);\n  }, []);\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n\n  // Drag-and-drop handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n    // defer to let animation finish\n    setTimeout(() => {\n      const cols = {\n        ...columns\n      };\n      const fromCol = cols[source.droppableId];\n      const toCol = cols[destination.droppableId];\n      const fromJobs = Array.from(fromCol.jobs);\n      const [dragged] = fromJobs.splice(source.index, 1);\n      const toJobs = Array.from(toCol.jobs);\n      toJobs.splice(destination.index, 0, dragged);\n\n      // recalc start/end for destination column\n      let prevEnd = null;\n      for (let i = destination.index; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          prevEnd = toJobs[i - 1].end ? new Date(toJobs[i - 1].end) : prevEnd;\n          start = prevEnd ? new Date(prevEnd.getTime() + 30 * 60000) : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = job.stitchCount / 30000 * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n        job.start = fmtDT(start);\n        job.end = fmtDT(end);\n        prevEnd = end;\n      }\n      cols[source.droppableId] = {\n        ...fromCol,\n        jobs: fromJobs\n      };\n      cols[destination.droppableId] = {\n        ...toCol,\n        jobs: toJobs\n      };\n      setColumns(cols);\n\n      // persist dragged and cascaded updates\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId: destination.droppableId,\n        start_date: dragged.start,\n        end_date: dragged.end\n      }).catch(console.error);\n      for (let i = destination.index + 1; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          start_date: job.start,\n          end_date: job.end\n        }).catch(console.error);\n      }\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const due = new Date(job.due_date);\n              const end = new Date(job.end);\n              const isLate = job.due_date && job.end && !isNaN(due) && !isNaN(end) && end > due;\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    userSelect: 'none',\n                    padding: '10px',\n                    margin: '0 0 10px 0',\n                    background: isLate ? '#ffe6e6' : '#fff',\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    ...p.draggableProps.style\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 8\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 4\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#e0f7fa',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 33\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#ffe0b2',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"llFL86/SkY7acTo9h2CkxeWng0U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","available","getTime","fmtDT","pad","n","String","padStart","getFullYear","getMonth","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","fetchOrders","get","then","data","orders","prev","cols","existing","Object","values","forEach","col","job","o","stitchCount","stitch_count","quantity","due_date","push","start","end","catch","console","error","iv","setInterval","clearInterval","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","fromCol","toCol","fromJobs","Array","from","dragged","splice","toJobs","prevEnd","i","length","runMs","put","machineId","start_date","end_date","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginTop","map","prov","ref","innerRef","droppableProps","border","borderRadius","width","minHeight","background","idx","due","isLate","p","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","flexDirection","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HOUR ||\n    (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HOUR ||\n    (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth()+1)}-${pad(dt.getDate())}` +\n         ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\n\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',    jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',    jobs:[] },\n  });\n\n  // Merge-only fetch\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders')\n      .then(({ data: orders }) => {\n        setColumns(prev => {\n          // 1) Clone previous columns\n          const cols = {\n            queue:    { ...prev.queue,    jobs: [...prev.queue.jobs]    },\n            machine1: { ...prev.machine1, jobs: [...prev.machine1.jobs] },\n            machine2: { ...prev.machine2, jobs: [...prev.machine2.jobs] },\n          };\n          // 2) Build map of existing jobs\n          const existing = {};\n          Object.values(cols).forEach(col =>\n            col.jobs.forEach(job => { existing[job.id] = job; })\n          );\n          // 3) Merge in each order\n          orders.forEach(o => {\n            const job = existing[o.id];\n            if (job) {\n              // update static fields\n              job.title       = o.title;\n              job.stitchCount = o.stitch_count;\n              job.quantity    = o.quantity;\n              job.due_date    = o.due_date;\n            } else {\n              // new job â†’ unscheduled\n              cols.queue.jobs.push({\n                id:           o.id,\n                title:        o.title,\n                stitchCount:  o.stitch_count,\n                quantity:     o.quantity,\n                due_date:     o.due_date,\n                start:        '',\n                end:          ''\n              });\n            }\n          });\n          return cols;\n        });\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n\n  // Drag-and-drop handler\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) return;\n\n    // defer to let animation finish\n    setTimeout(() => {\n      const cols = { ...columns };\n      const fromCol = cols[source.droppableId];\n      const toCol   = cols[destination.droppableId];\n      const fromJobs = Array.from(fromCol.jobs);\n      const [dragged] = fromJobs.splice(source.index, 1);\n      const toJobs   = Array.from(toCol.jobs);\n      toJobs.splice(destination.index, 0, dragged);\n\n      // recalc start/end for destination column\n      let prevEnd = null;\n      for (let i = destination.index; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          prevEnd = toJobs[i - 1].end ? new Date(toJobs[i - 1].end) : prevEnd;\n          start = prevEnd\n            ? new Date(prevEnd.getTime() + 30 * 60000)\n            : new Date();\n        }\n        start = clampToWorkHours(start);\n\n        const runMs = (job.stitchCount / 30000) * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n\n        job.start = fmtDT(start);\n        job.end   = fmtDT(end);\n        prevEnd = end;\n      }\n\n      cols[source.droppableId]      = { ...fromCol, jobs: fromJobs };\n      cols[destination.droppableId] = { ...toCol,   jobs: toJobs };\n      setColumns(cols);\n\n      // persist dragged and cascaded updates\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId:  destination.droppableId,\n        start_date: dragged.start,\n        end_date:   dragged.end\n      }).catch(console.error);\n      for (let i = destination.index + 1; i < toJobs.length; i++) {\n        const job = toJobs[i];\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          start_date: job.start,\n          end_date:   job.end\n        }).catch(console.error);\n      }\n    }, 0);\n  };\n\n  return (\n    <div style={{ padding:16 }}>\n      <button onClick={fetchOrders}>Refresh Data</button>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display:'flex', gap:16, marginTop:16 }}>\n          {Object.values(columns).map(col => (\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov => (\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4>{col.title}</h4>\n                  {col.jobs.map((job, idx) => {\n                    const due = new Date(job.due_date);\n                    const end = new Date(job.end);\n                    const isLate = job.due_date && job.end &&\n                                   !isNaN(due) && !isNaN(end) &&\n                                   end > due;\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p => (\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              userSelect:'none',\n                              padding:'10px',\n                              margin:'0 0 10px 0',\n                              background: isLate ? '#ffe6e6' : '#fff',\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            <div style={{ flex:1, paddingRight:8 }}>\n                              {job.title}\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:4\n                            }}>\n                              {job.start && (\n                                <div style={{\n                                  padding:'2px 6px',\n                                  background:'#e0f7fa',\n                                  borderRadius:12,\n                                  fontSize:'0.75em'\n                                }}>{job.start}</div>\n                              )}\n                              {job.end && (\n                                <div style={{\n                                  padding:'2px 6px',\n                                  background:'#ffe0b2',\n                                  borderRadius:12,\n                                  fontSize:'0.75em'\n                                }}>{job.end}</div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}