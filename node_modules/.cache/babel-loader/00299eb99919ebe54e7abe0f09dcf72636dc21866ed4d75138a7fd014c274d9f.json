{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const month = pad(dt.getMonth() + 1);\n  const day = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0],\n      da = +parts[1],\n      yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start),\n    removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth() + 1).padStart(2, '0');\n  const da = String(dt.getDate()).padStart(2, '0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date),\n      db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start ? clampToWorkHours(new Date(job.embroidery_start)) : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = fmtDT(start);\n    job.end = fmtDT(end);\n    job.delivery = fmtMMDD(addWorkDays(end, 6));\n    job.isLate = end > cutoff;\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {},\n    rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id] = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState(() => JSON.parse(localStorage.getItem('placeholders') || '[]'));\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => {\n    saveLinks(links);\n  }, [links]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE (modified to persist placeholder order)\n  const fetchAll = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_ROOT}/orders`);\n      const real = {\n        queue: [],\n        machine1: [],\n        machine2: []\n      };\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = o.machineId === 'machine1' || o.machineId === 'machine2' ? o.machineId : 'queue';\n        real[col].push({\n          ...o,\n          id: o.id.toString(),\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date || '',\n          end: o.end_date || '',\n          delivery: o.delivery || '',\n          position: o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo: links[o.id] || null\n        });\n      });\n\n      // preserve API positions for real machine jobs\n      ['machine1', 'machine2'].forEach(c => {\n        real[c].sort((a, b) => {\n          var _a$position, _b$position;\n          return ((_a$position = a.position) !== null && _a$position !== void 0 ? _a$position : Infinity) - ((_b$position = b.position) !== null && _b$position !== void 0 ? _b$position : Infinity);\n        });\n      });\n\n      // merge placeholders (sorted by saved position) before real jobs\n      const merged = {};\n      ['queue', 'machine1', 'machine2'].forEach(c => {\n        merged[c] = [...placeholders.filter(p => p.machineId === c).sort((a, b) => {\n          var _a$position2, _b$position2;\n          return ((_a$position2 = a.position) !== null && _a$position2 !== void 0 ? _a$position2 : 0) - ((_b$position2 = b.position) !== null && _b$position2 !== void 0 ? _b$position2 : 0);\n        }), ...real[c]];\n      });\n      setColumns({\n        queue: {\n          ...columns.queue,\n          jobs: sortQueue(merged.queue)\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(merged.machine1)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(merged.machine2)\n        }\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // initial fetch only once\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: onDragEnd ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const sc = source.droppableId;\n    const dc = destination.droppableId;\n\n    // Helper: clone & schedule columns\n    const applyColumns = updates => {\n      const newCols = {\n        queue: {\n          ...columns.queue,\n          jobs: updates.queue\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(updates.machine1)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(updates.machine2)\n        }\n      };\n      // always sort queue\n      newCols.queue.jobs = sortQueue(newCols.queue.jobs);\n      setColumns(newCols);\n    };\n\n    // 1) Same-list reorder\n    if (sc === dc) {\n      // reorder jobs array\n      const arr = Array.from(columns[sc].jobs);\n      const [moved] = arr.splice(source.index, 1);\n      arr.splice(destination.index, 0, moved);\n\n      // update placeholder positions\n      setPlaceholders(ps => ps.map(p => p.id === draggableId ? {\n        ...p,\n        machineId: dc,\n        position: destination.index\n      } : p));\n\n      // build updated lists for each column\n      const updated = {\n        queue: sc === 'queue' ? arr : columns.queue.jobs,\n        machine1: sc === 'machine1' ? arr : columns.machine1.jobs,\n        machine2: sc === 'machine2' ? arr : columns.machine2.jobs\n      };\n      applyColumns(updated);\n      return;\n    }\n\n    // 2) Cross-list move\n    const srcArr = Array.from(columns[sc].jobs);\n    const dstArr = Array.from(columns[dc].jobs);\n\n    // detach chain\n    const chain = getChain(srcArr, draggableId);\n    const movedJobs = srcArr.filter(j => chain.includes(j.id));\n    const newSrc = srcArr.filter(j => !chain.includes(j.id));\n\n    // auto-split links if dropping into a linked gap\n    const before = dstArr[destination.index - 1];\n    const after = dstArr[destination.index];\n    if (before && after && before.linkedTo === after.id && draggableId !== before.id) {\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        delete m[before.id];\n        return m;\n      });\n      before.linkedTo = null;\n    }\n\n    // insert chain into destination\n    dstArr.splice(destination.index, 0, ...movedJobs);\n\n    // update placeholder positions & machineId\n    setPlaceholders(ps => ps.map(p => chain.includes(p.id) ? {\n      ...p,\n      machineId: dc,\n      position: dstArr.findIndex(j => j.id === p.id)\n    } : p));\n\n    // if moving back to queue, also clear all timing & link state\n    if (dc === 'queue') {\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        chain.forEach(id => {\n          delete m[id];\n        });\n        return m;\n      });\n      dstArr.forEach(job => {\n        if (chain.includes(job.id)) {\n          job.linkedTo = null;\n          job._rawStart = job._rawEnd = null;\n          job.start = job.end = job.delivery = '';\n          job.isLate = false;\n          job.embroidery_start = '';\n          job.position = null;\n        }\n      });\n    }\n\n    // persist to API\n    movedJobs.forEach((job, i) => {\n      const newPos = dc === 'queue' ? null : destination.index + i;\n      axios.put(`${API_ROOT}/orders/${job.id}`, {\n        machineId: dc === 'queue' ? null : dc,\n        start_date: job.start || '',\n        end_date: job.end || '',\n        delivery: job.delivery || '',\n        position: newPos,\n        embroidery_start: job.embroidery_start || ''\n      }).catch(console.error);\n    });\n\n    // apply new columns\n    applyColumns({\n      queue: newSrc.concat(dc === 'queue' ? dstArr.filter(j => chain.includes(j.id)) : []),\n      machine1: sc === 'machine1' ? newSrc : dc === 'machine1' ? dstArr : columns.machine1.jobs,\n      machine2: sc === 'machine2' ? newSrc : dc === 'machine2' ? dstArr : columns.machine2.jobs\n    });\n  };\n\n  // === Section 9: Render / Return ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 13\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8,\n        fontSize: 13\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      style: {\n        fontSize: 13\n      },\n      children: [\"Sync from Sheet \", syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green',\n          fontSize: 13\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 5\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center',\n            fontSize: 13\n          },\n          children: \"Add/Edit Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: 13\n          },\n          children: [\"Company\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%',\n              fontSize: 13\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: 13\n          },\n          children: [\"In Hand Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%',\n              fontSize: 13\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: 13\n          },\n          children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%',\n              fontSize: 13\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: 13\n          },\n          children: [\"Stitch Count\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%',\n              fontSize: 13\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: 13\n          },\n          children: [\"Due Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%',\n              fontSize: 13\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8,\n              fontSize: 13\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitPlaceholder,\n            style: {\n              fontSize: 13\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n          // build linked segments\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({\n              start: i,\n              len\n            });\n            i += len;\n          }\n          const GAP = 6,\n            OUTLINE = 6;\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                position: 'relative',\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: colId === 'queue' ? 260 : 300,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0',\n                  fontSize: 13\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 19\n              }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  marginBottom: GAP,\n                  zIndex: seg.len > 1 ? 3 : 1,\n                  outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                  outlineOffset: seg.len > 1 ? '0px' : undefined,\n                  borderRadius: 4\n                },\n                children: jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                  const idx = seg.start + jIdx;\n                  const isPh = job.id.startsWith('ph-');\n                  const isSoft = job.due_type === 'Soft Date';\n                  const base = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                  let bg = base,\n                    bCol = isPh ? DARK_YELLOW : isSoft ? DARK_GREY : DARK_PURPLE;\n                  if (job.isLate) {\n                    bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                    bCol = 'red';\n                  }\n                  const dt0 = (job.due_type || '')[0] || '';\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job.id,\n                    index: idx,\n                    children: prov => {\n                      var _job$design, _jobs;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: prov.innerRef,\n                        ...prov.draggableProps,\n                        ...prov.dragHandleProps,\n                        style: {\n                          position: 'relative',\n                          display: 'grid',\n                          gridTemplateColumns: '1fr auto',\n                          gridTemplateRows: 'auto auto auto auto',\n                          columnGap: 6,\n                          rowGap: 4,\n                          padding: '6px 28px 6px 6px',\n                          margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                          background: bg,\n                          border: `2px solid ${bCol}`,\n                          borderRadius: 4,\n                          zIndex: 2,\n                          ...prov.draggableProps.style\n                        },\n                        children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 4,\n                            height: '100%',\n                            background: '#0288d1',\n                            zIndex: 4\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 645,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13,\n                            fontWeight: 'bold'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              display: 'inline-block',\n                              width: 20,\n                              height: 20,\n                              borderRadius: '50%',\n                              background: '#000',\n                              color: base,\n                              lineHeight: '20px',\n                              textAlign: 'center',\n                              fontSize: isPh ? 13 : 11,\n                              fontWeight: 'bold',\n                              marginRight: 4\n                            },\n                            children: isPh ? '*' : job.id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 664,\n                            columnNumber: 35\n                          }, this), job.company]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 652,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            fontSize: 15,\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis'\n                          },\n                          children: job.quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 678,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: (_job$design = job.design) === null || _job$design === void 0 ? void 0 : _job$design.slice(0, 22)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 694,\n                          columnNumber: 33\n                        }, this), job.start && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_START,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.start\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 710,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 724,\n                          columnNumber: 33\n                        }, this), job.end && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.end\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 740,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: `IHD: ${fmtMMDD(job.due_date)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 754,\n                          columnNumber: 33\n                        }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.delivery\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 768,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: 28,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomLeftRadius: 4,\n                            zIndex: 4,\n                            fontSize: 11,\n                            fontWeight: 'bold'\n                          },\n                          children: dt0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 782,\n                          columnNumber: 33\n                        }, this), idx < jobs.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => toggleLink(colId, idx),\n                          style: {\n                            position: 'absolute',\n                            top: 28,\n                            right: 0,\n                            width: 28,\n                            height: `calc(100% - 28px)`,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer',\n                            background: base,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: job.linkedTo === ((_jobs = jobs[idx + 1]) === null || _jobs === void 0 ? void 0 : _jobs.id) ? '❌' : '🔗'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 798,\n                          columnNumber: 35\n                        }, this), job.id.startsWith('ph-') && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: '100%',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'start',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => editPlaceholder(job),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u270E\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 826,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => removePlaceholder(job.id),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u2716\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 827,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 816,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 625,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, si, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 492,\n    columnNumber: 3\n  }, this);\n\n  // ← end of App component\n}\n_s(App, \"MfB4a6MgKBieyrdo+unzb0fCu3g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","jobs","prevEnd","map","job","idx","embroidery_start","qty","quantity","Math","ceil","runMs","stitchCount","end","eedDay","cutoff","_rawStart","_rawEnd","delivery","isLate","loadLinks","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","id","fwd","rev","forEach","j","linkedTo","root","chain","cur","push","App","_s","columns","setColumns","queue","title","machine1","machine2","placeholders","setPlaceholders","links","setLinks","showModal","setShowModal","ph","setPh","company","inHand","dueType","syncStatus","setSyncStatus","fetchAll","data","get","real","o","col","machineId","toString","stitch_count","design","due_type","start_date","end_date","position","c","_a$position","_b$position","Infinity","merged","filter","p","_a$position2","_b$position2","err","console","error","catch","handleSync","setTimeout","submitPlaceholder","now","ps","removePlaceholder","editPlaceholder","toggleLink","colId","cols","below","l","onDragEnd","result","source","destination","draggableId","sc","droppableId","dc","applyColumns","updates","newCols","Array","from","moved","splice","index","updated","srcArr","dstArr","movedJobs","newSrc","before","after","findIndex","i","newPos","put","concat","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","type","value","onChange","e","target","width","gap","isArray","segments","len","GAP","OUTLINE","provided","ref","innerRef","droppableProps","border","minHeight","margin","seg","si","marginBottom","outline","undefined","outlineOffset","jIdx","isPh","startsWith","isSoft","base","bg","bCol","dt0","prov","_job$design","_jobs","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","height","gridRow","gridColumn","whiteSpace","overflow","textOverflow","fontWeight","lineHeight","justifySelf","borderTopRightRadius","borderBottomLeftRadius","flexDirection","cursor","borderBottomRightRadius","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo)&&!isNaN(da)&&!isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start\n        ? clampToWorkHours(new Date(job.embroidery_start))\n        : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30*60000));\n    }\n    const qty   = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity/6)*6;\n    const runMs = (job.stitchCount/30000) * (qty/6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks')||'{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]       = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',   jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',   jobs:[] },\n  });\n  const [placeholders, setPlaceholders] = useState(() =>\n    JSON.parse(localStorage.getItem('placeholders')||'[]')\n  );\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => { saveLinks(links); }, [links]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id:null, company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE (modified to persist placeholder order)\n  const fetchAll = async () => {\n    try {\n      const { data } = await axios.get(`${API_ROOT}/orders`);\n      const real = { queue: [], machine1: [], machine2: [] };\n\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = (o.machineId === 'machine1' || o.machineId === 'machine2')\n                      ? o.machineId\n                      : 'queue';\n        real[col].push({\n          ...o,\n          id:               o.id.toString(),\n          stitchCount:      o.stitch_count,\n          quantity:         o.quantity,\n          company:          o.company,\n          design:           o.design,\n          due_date:         o.due_date,\n          due_type:         o.due_type,\n          start:            o.start_date || '',\n          end:              o.end_date   || '',\n          delivery:         o.delivery   || '',\n          position:         o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo:         links[o.id] || null\n        });\n      });\n\n      // preserve API positions for real machine jobs\n      ['machine1','machine2'].forEach(c => {\n        real[c].sort((a,b) => (a.position ?? Infinity) - (b.position ?? Infinity));\n      });\n\n      // merge placeholders (sorted by saved position) before real jobs\n      const merged = {};\n      ['queue','machine1','machine2'].forEach(c => {\n        merged[c] = [\n          ...placeholders\n            .filter(p => p.machineId === c)\n            .sort((a,b) => (a.position ?? 0) - (b.position ?? 0)),\n          ...real[c]\n        ];\n      });\n\n      setColumns({\n        queue:    { ...columns.queue,    jobs: sortQueue(merged.queue) },\n        machine1: { ...columns.machine1, jobs: scheduleMachineJobs(merged.machine1) },\n        machine2: { ...columns.machine2, jobs: scheduleMachineJobs(merged.machine2) },\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // initial fetch only once\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n// === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id:         ph.id || `ph-${Date.now()}`,\n      company:    ph.company,\n      quantity:   +ph.quantity || 1,\n      stitchCount:+ph.stitchCount||30000,\n      due_date:   ph.inHand,\n      due_type:   ph.dueType,\n      machineId:  'queue',\n      position:   null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p=>p.id===ph.id?job:p));\n      setColumns(c => ({\n        ...c,\n        queue:    {...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)},\n        machine1: {...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j)},\n        machine2: {...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j)},\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {...c.queue, jobs: [job, ...c.queue.jobs]}\n      }));\n    }\n    setShowModal(false);\n    setPh({id:null,company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p=>p.id!==id));\n    setColumns(c => ({\n      ...c,\n      queue:    {...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)},\n      machine1: {...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id)},\n      machine2: {...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id)},\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: onDragEnd ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const sc = source.droppableId;\n  const dc = destination.droppableId;\n\n  // Helper: clone & schedule columns\n  const applyColumns = (updates) => {\n    const newCols = {\n      queue:    { ...columns.queue,    jobs: updates.queue },\n      machine1: { ...columns.machine1, jobs: scheduleMachineJobs(updates.machine1) },\n      machine2: { ...columns.machine2, jobs: scheduleMachineJobs(updates.machine2) },\n    };\n    // always sort queue\n    newCols.queue.jobs = sortQueue(newCols.queue.jobs);\n    setColumns(newCols);\n  };\n\n  // 1) Same-list reorder\n  if (sc === dc) {\n    // reorder jobs array\n    const arr = Array.from(columns[sc].jobs);\n    const [moved] = arr.splice(source.index, 1);\n    arr.splice(destination.index, 0, moved);\n\n    // update placeholder positions\n    setPlaceholders(ps =>\n      ps.map(p =>\n        p.id === draggableId\n          ? { ...p, machineId: dc, position: destination.index }\n          : p\n      )\n    );\n\n    // build updated lists for each column\n    const updated = {\n      queue:    sc === 'queue'    ? arr : columns.queue.jobs,\n      machine1: sc === 'machine1' ? arr : columns.machine1.jobs,\n      machine2: sc === 'machine2' ? arr : columns.machine2.jobs,\n    };\n    applyColumns(updated);\n    return;\n  }\n\n  // 2) Cross-list move\n  const srcArr  = Array.from(columns[sc].jobs);\n  const dstArr  = Array.from(columns[dc].jobs);\n\n  // detach chain\n  const chain = getChain(srcArr, draggableId);\n  const movedJobs = srcArr.filter(j => chain.includes(j.id));\n  const newSrc = srcArr.filter(j => !chain.includes(j.id));\n\n  // auto-split links if dropping into a linked gap\n  const before = dstArr[destination.index - 1];\n  const after  = dstArr[destination.index];\n  if (before && after && before.linkedTo === after.id && draggableId !== before.id) {\n    setLinks(l => { const m = { ...l }; delete m[before.id]; return m; });\n    before.linkedTo = null;\n  }\n\n  // insert chain into destination\n  dstArr.splice(destination.index, 0, ...movedJobs);\n\n  // update placeholder positions & machineId\n  setPlaceholders(ps =>\n    ps.map(p =>\n      chain.includes(p.id)\n        ? { ...p, machineId: dc, position: dstArr.findIndex(j => j.id === p.id) }\n        : p\n    )\n  );\n\n  // if moving back to queue, also clear all timing & link state\n  if (dc === 'queue') {\n    setLinks(l => {\n      const m = { ...l };\n      chain.forEach(id => { delete m[id]; });\n      return m;\n    });\n    dstArr.forEach(job => {\n      if (chain.includes(job.id)) {\n        job.linkedTo = null;\n        job._rawStart = job._rawEnd = null;\n        job.start = job.end = job.delivery = '';\n        job.isLate = false;\n        job.embroidery_start = '';\n        job.position = null;\n      }\n    });\n  }\n\n  // persist to API\n  movedJobs.forEach((job, i) => {\n    const newPos = dc === 'queue' ? null : destination.index + i;\n    axios.put(`${API_ROOT}/orders/${job.id}`, {\n      machineId: dc === 'queue' ? null : dc,\n      start_date: job.start || '',\n      end_date:   job.end   || '',\n      delivery:   job.delivery || '',\n      position:   newPos,\n      embroidery_start: job.embroidery_start || ''\n    }).catch(console.error);\n  });\n\n  // apply new columns\n  applyColumns({\n    queue:    newSrc.concat(dc === 'queue' ? dstArr.filter(j => chain.includes(j.id)) : []),\n    machine1: sc === 'machine1' ? newSrc : (dc === 'machine1' ? dstArr : columns.machine1.jobs),\n    machine2: sc === 'machine2' ? newSrc : (dc === 'machine2' ? dstArr : columns.machine2.jobs),\n  });\n};\n\n\n// === Section 9: Render / Return ===\nreturn (\n  <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 13 }}>\n    {/* Add / Sync Buttons */}\n    <button onClick={() => setShowModal(true)} style={{ marginRight: 8, fontSize: 13 }}>\n      + Add Placeholder\n    </button>\n    <button onClick={handleSync} style={{ fontSize: 13 }}>\n      Sync from Sheet {syncStatus === 'updated' && <span style={{ color: 'green', fontSize: 13 }}>✓ Updated</span>}\n    </button>\n\n    {/* Modal */}\n    {showModal && (\n      <div style={{\n        position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex', alignItems: 'center', justifyContent: 'center',\n        zIndex: 1000\n      }}>\n        <div style={{ background: '#fff', padding: 20, borderRadius: 4, minWidth: 300 }}>\n          <h3 style={{ marginTop: 0, textAlign: 'center', fontSize: 13 }}>Add/Edit Placeholder</h3>\n          <label style={{ fontSize: 13 }}>Company<br/>\n            <input\n              type=\"text\"\n              value={ph.company}\n              onChange={e => setPh({ ...ph, company: e.target.value })}\n              style={{ width: '100%', fontSize: 13 }}\n            />\n          </label><br/><br/>\n          <label style={{ fontSize: 13 }}>In Hand Date<br/>\n            <input\n              type=\"date\"\n              value={ph.inHand}\n              onChange={e => setPh({ ...ph, inHand: e.target.value })}\n              style={{ width: '100%', fontSize: 13 }}\n            />\n          </label><br/><br/>\n          <label style={{ fontSize: 13 }}>Quantity<br/>\n            <input\n              type=\"number\"\n              value={ph.quantity}\n              onChange={e => setPh({ ...ph, quantity: e.target.value })}\n              style={{ width: '100%', fontSize: 13 }}\n            />\n          </label><br/><br/>\n          <label style={{ fontSize: 13 }}>Stitch Count<br/>\n            <input\n              type=\"number\"\n              value={ph.stitchCount}\n              onChange={e => setPh({ ...ph, stitchCount: e.target.value })}\n              style={{ width: '100%', fontSize: 13 }}\n            />\n          </label><br/><br/>\n          <label style={{ fontSize: 13 }}>Due Type<br/>\n            <select\n              value={ph.dueType}\n              onChange={e => setPh({ ...ph, dueType: e.target.value })}\n              style={{ width: '100%', fontSize: 13 }}\n            >\n              <option>Hard Date</option>\n              <option>Soft Date</option>\n            </select>\n          </label><br/><br/>\n          <div style={{ textAlign: 'right' }}>\n            <button onClick={() => setShowModal(false)} style={{ marginRight: 8, fontSize: 13 }}>Cancel</button>\n            <button onClick={submitPlaceholder} style={{ fontSize: 13 }}>Submit</button>\n          </div>\n        </div>\n      </div>\n    )}\n\n    {/* Drag & Drop Columns */}\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n        {['queue','machine1','machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n          // build linked segments\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({ start: i, len });\n            i += len;\n          }\n\n          const GAP = 6, OUTLINE = 6;\n\n          return (\n            <Droppable key={colId} droppableId={colId}>\n              {provided => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    position: 'relative',\n                    border: '1px solid #ccc',\n                    borderRadius: 4,\n                    width: colId==='queue'?260:300,\n                    minHeight: 400,\n                    padding: 12,\n                    background: '#fafafa'\n                  }}\n                >\n                  <h4 style={{ textAlign: 'center', margin: '8px 0', fontSize: 13 }}>{col.title}</h4>\n\n                  {segments.map((seg, si) => (\n                    <div\n                      key={si}\n                      style={{\n                        position: 'relative',\n                        marginBottom: GAP,\n                        zIndex: seg.len>1?3:1,\n                        outline: seg.len>1?`${OUTLINE}px solid #0288d1`:undefined,\n                        outlineOffset: seg.len>1?'0px':undefined,\n                        borderRadius:4\n                      }}\n                    >\n                      {jobs.slice(seg.start, seg.start+seg.len).map((job, jIdx) => {\n                        const idx = seg.start + jIdx;\n                        const isPh = job.id.startsWith('ph-');\n                        const isSoft = job.due_type==='Soft Date';\n                        const base = isPh ? LIGHT_YELLOW : (isSoft?LIGHT_GREY:LIGHT_PURPLE);\n                        let bg = base, bCol = isPh?DARK_YELLOW:(isSoft?DARK_GREY:DARK_PURPLE);\n                        if(job.isLate){\n                          bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                          bCol='red';\n                        }\n                        const dt0 = (job.due_type||'')[0] || '';\n\n                        return (\n                          <Draggable key={job.id} draggableId={job.id} index={idx}>\n                            {prov => (\n                              <div\n                                ref={prov.innerRef}\n                                {...prov.draggableProps}\n                                {...prov.dragHandleProps}\n                                style={{\n                                  position: 'relative',\n                                  display: 'grid',\n                                  gridTemplateColumns: '1fr auto',\n                                  gridTemplateRows: 'auto auto auto auto',\n                                  columnGap:6, rowGap:4,\n                                  padding:'6px 28px 6px 6px',\n                                  margin:`0 0 ${jIdx<seg.len-1?GAP:0}px 0`,\n                                  background:bg,\n                                  border:`2px solid ${bCol}`,\n                                  borderRadius:4,\n                                  zIndex:2,\n                                  ...prov.draggableProps.style\n                                }}\n                              >\n                                {jIdx===0 && seg.len>1 && (\n                                  <div style={{\n                                    position:'absolute', top:0, right:0,\n                                    width:4, height:'100%', background:'#0288d1', zIndex:4\n                                  }} />\n                                )}\n\n                                {/* Row1 Col1: ID + Company */}\n                                <span style={{\n                                  gridRow:1, gridColumn:1,\n                                  display:'inline-block',\n                                  background:base,\n                                  padding:'0 4px',\n                                  borderRadius:4,\n                                  whiteSpace:'nowrap',\n                                  overflow:'hidden',\n                                  textOverflow:'ellipsis',\n                                  fontSize:13,\n                                  fontWeight:'bold'\n                                }}>\n                                  <span style={{\n                                    display:'inline-block',\n                                    width:20, height:20, borderRadius:'50%',\n                                    background:'#000', color:base,\n                                    lineHeight:'20px', textAlign:'center',\n                                    fontSize:isPh?13:11, fontWeight:'bold',\n                                    marginRight:4\n                                  }}>\n                                    {isPh?'*':job.id}\n                                  </span>\n                                  {job.company}\n                                </span>\n\n                                {/* Row1 Col2: Quantity (font increased +2) */}\n                                <span style={{\n                                  gridRow:1, gridColumn:2, justifySelf:'end',\n                                  display:'inline-block',\n                                  background: base,\n                                  padding: '0 4px',\n                                  borderRadius:4,\n                                  fontSize:15,\n                                  fontWeight:'bold',\n                                  whiteSpace:'nowrap',\n                                  overflow:'hidden',\n                                  textOverflow:'ellipsis'\n                                }}>\n                                  {job.quantity}\n                                </span>\n\n                                {/* Row2 Col1: Design only, truncated to 22 chars */}\n                                <span style={{\n                                  gridRow:2, gridColumn:1,\n                                  display:'inline-block',\n                                  background:base,\n                                  padding:'0 4px',\n                                  borderRadius:4,\n                                  whiteSpace:'nowrap',\n                                  overflow:'hidden',\n                                  textOverflow:'ellipsis',\n                                  fontSize:13\n                                }}>\n                                  {job.design?.slice(0,22)}\n                                </span>\n\n                                {/* Row2 Col2: Start */}\n                                {job.start && (\n                                  <span style={{\n                                    gridRow:2, gridColumn:2, justifySelf:'end',\n                                    display:'inline-block',\n                                    background:BUBBLE_START,\n                                    padding:'0 4px',\n                                    borderRadius:10,\n                                    whiteSpace:'nowrap',\n                                    fontSize:13\n                                  }}>\n                                    {job.start}\n                                  </span>\n                                )}\n\n                                {/* Row3 Col1: EED */}\n                                <span style={{\n                                  gridRow:3, gridColumn:1,\n                                  display:'inline-block',\n                                  background:BUBBLE_END,\n                                  padding:'0 4px',\n                                  borderRadius:4,\n                                  whiteSpace:'nowrap',\n                                  overflow:'hidden',\n                                  textOverflow:'ellipsis',\n                                  fontSize:13\n                                }}>\n                                  {`EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date),6))}`}\n                                </span>\n\n                                {/* Row3 Col2: End */}\n                                {job.end && (\n                                  <span style={{\n                                    gridRow:3, gridColumn:2, justifySelf:'end',\n                                    display:'inline-block',\n                                    background:BUBBLE_END,\n                                    padding:'0 4px',\n                                    borderRadius:10,\n                                    whiteSpace:'nowrap',\n                                    fontSize:13\n                                  }}>\n                                    {job.end}\n                                  </span>\n                                )}\n\n                                {/* Row4 Col1: IHD */}\n                                <span style={{\n                                  gridRow:4, gridColumn:1,\n                                  display:'inline-block',\n                                  background:BUBBLE_DELIV,\n                                  padding:'0 4px',\n                                  borderRadius:4,\n                                  whiteSpace:'nowrap',\n                                  fontSize:13\n                                }}>\n                                  {`IHD: ${fmtMMDD(job.due_date)}`}\n                                </span>\n\n                                {/* Row4 Col2: Delivery */}\n                                {job.delivery && (\n                                  <span style={{\n                                    gridRow:4, gridColumn:2, justifySelf:'end',\n                                    display:'inline-block',\n                                    background:BUBBLE_DELIV,\n                                    padding:'0 4px',\n                                    borderRadius:10,\n                                    whiteSpace:'nowrap',\n                                    fontSize:13\n                                  }}>\n                                    {job.delivery}\n                                  </span>\n                                )}\n\n                                {/* Top-right tab: Due-Type initial */}\n                                <div style={{\n                                  position:'absolute', top:0, right:0,\n                                  width:28, height:28,\n                                  display:'flex', alignItems:'center', justifyContent:'center',\n                                  background: base,\n                                  borderTopRightRadius:4,\n                                  borderBottomLeftRadius:4,\n                                  zIndex:4,\n                                  fontSize:11,\n                                  fontWeight:'bold'\n                                }}>\n                                  {dt0}\n                                </div>\n\n                                {/* 🔗/❌ Toggle below it */}\n                                {idx < jobs.length - 1 && (\n                                  <div onClick={() => toggleLink(colId, idx)}\n                                    style={{\n                                      position:'absolute', top:28, right:0,\n                                      width:28, height:`calc(100% - 28px)`,\n                                      display:'flex', flexDirection:'column',\n                                      alignItems:'center', justifyContent:'center',\n                                      cursor:'pointer',\n                                      background: base,\n                                      borderBottomRightRadius:4,\n                                      zIndex:4\n                                    }}\n                                  >\n                                    {job.linkedTo === jobs[idx+1]?.id ? '❌' : '🔗'}\n                                  </div>\n                                )}\n\n                                {/* Placeholder edit/delete */}\n                                {job.id.startsWith('ph-') && (\n                                  <div style={{\n                                    position:'absolute', top:0, right:0,\n                                    width:28, height:'100%',\n                                    display:'flex', flexDirection:'column',\n                                    alignItems:'center', justifyContent:'start',\n                                    background: base,\n                                    borderTopRightRadius:4,\n                                    borderBottomRightRadius:4,\n                                    zIndex:4\n                                  }}>\n                                    <span onClick={() => editPlaceholder(job)} style={{ cursor:'pointer', fontSize:12, margin:4 }}>✎</span>\n                                    <span onClick={() => removePlaceholder(job.id)} style={{ cursor:'pointer', fontSize:12, margin:4 }}>✖</span>\n                                  </div>\n                                )}\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                    </div>\n                  ))}\n\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n        })}\n      </div>\n    </DragDropContext>\n  </div>\n);\n\n// ← end of App component\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}