{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // advance to next work start\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // roll past end into next day\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const avail = endOfDay - current;\n    if (avail <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= avail) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= avail;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` + ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\n// Parse due_date strings like \"M/D\" into a Date in the current year\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length === 2) {\n    const [m, d] = parts.map(x => parseInt(x, 10));\n    if (!isNaN(m) && !isNaN(d)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), m - 1, d, 0, 0, 0, 0);\n      return dt;\n    }\n  }\n  const dt = new Date(due);\n  return isNaN(dt) ? null : dt;\n}\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n\n  // Fetch & rebuild columns wholesale from API (preserving machineId + start/end)\n  function fetchOrders() {\n    axios.get('http://localhost:5000/api/orders').then(res => {\n      const cols = {\n        queue: {\n          id: 'queue',\n          title: 'Unscheduled',\n          jobs: []\n        },\n        machine1: {\n          id: 'machine1',\n          title: 'Machine 1',\n          jobs: []\n        },\n        machine2: {\n          id: 'machine2',\n          title: 'Machine 2',\n          jobs: []\n        }\n      };\n      res.data.forEach(o => {\n        const job = {\n          id: o.id,\n          title: o.title,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          due_date: o.due_date,\n          start: o.start_date,\n          end: o.end_date\n        };\n        const col = cols[o.machineId] || cols.queue;\n        col.jobs.push(job);\n      });\n      // sort unscheduled by due_date\n      cols.queue.jobs.sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        return da && db ? da - db : 0;\n      });\n      // sort machine columns by start time\n      ['machine1', 'machine2'].forEach(id => {\n        cols[id].jobs.sort((a, b) => {\n          const sa = new Date(a.start),\n            sb = new Date(b.start);\n          return sa && sb ? sa - sb : 0;\n        });\n      });\n      setColumns(cols);\n    }).catch(console.error);\n  }\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, []);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const fromJobs = cols[source.droppableId].jobs;\n      const [moved] = fromJobs.splice(source.index, 1);\n      const toJobs = cols[destination.droppableId].jobs;\n      toJobs.splice(destination.index, 0, moved);\n\n      // recalc start/end on that machine\n      let prevEnd = null;\n      toJobs.forEach((job, i) => {\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          prevEnd = toJobs[i - 1].end ? new Date(toJobs[i - 1].end) : prevEnd;\n          start = prevEnd ? new Date(prevEnd.getTime() + 30 * 60000) : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = job.stitchCount / 30000 * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n        job.start = fmtDT(start);\n        job.end = fmtDT(end);\n        prevEnd = end;\n      });\n\n      // update state\n      cols[source.droppableId].jobs = fromJobs;\n      cols[destination.droppableId].jobs = toJobs;\n      setColumns(cols);\n\n      // persist moved job + cascade\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId: destination.droppableId,\n        start_date: moved.start,\n        end_date: moved.end\n      }).catch(console.error);\n      toJobs.slice(destination.index + 1).forEach(job => {\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          start_date: job.start,\n          end_date: job.end\n        }).catch(console.error);\n      });\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const dueDt = parseDueDate(job.due_date);\n              const endDt = job.end ? new Date(job.end) : null;\n              const isLate = dueDt && endDt && endDt > dueDt;\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    userSelect: 'none',\n                    padding: '10px',\n                    margin: '0 0 10px 0',\n                    background: isLate ? '#ffe6e6' : '#fff',\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    ...p.draggableProps.style\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 8\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 4\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#e0f7fa',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 33\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#ffe0b2',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w3oso2PJPiQ2XVLs1AwrK0qg3sM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","avail","getTime","fmtDT","pad","n","String","padStart","getFullYear","getMonth","parseDueDate","due","parts","split","length","m","map","x","parseInt","setFullYear","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","fetchOrders","get","then","res","cols","data","forEach","o","job","stitchCount","stitch_count","quantity","due_date","start","start_date","end","end_date","col","machineId","push","sort","a","b","da","db","sa","sb","catch","console","error","iv","setInterval","clearInterval","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","JSON","parse","stringify","fromJobs","moved","splice","toJobs","prevEnd","i","runMs","put","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginTop","Object","values","prov","ref","innerRef","droppableProps","border","borderRadius","width","minHeight","background","idx","dueDt","endDt","isLate","p","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","flexDirection","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt)\n    && !WEEKENDS.includes(dt.getDay())\n    && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // advance to next work start\n  while (!isWorkday(d)\n      || d.getHours()  < WORK_START_HOUR\n      || (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // roll past end into next day\n  if (d.getHours()  > WORK_END_HOUR\n   || (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current   = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const avail = endOfDay - current;\n    if (avail <= 0) {\n      current.setDate(current.getDate()+1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= avail) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= avail;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth()+1)}-${pad(dt.getDate())}`\n       + ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\n// Parse due_date strings like \"M/D\" into a Date in the current year\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length === 2) {\n    const [m,d] = parts.map(x=>parseInt(x,10));\n    if (!isNaN(m) && !isNaN(d)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), m-1, d, 0,0,0,0);\n      return dt;\n    }\n  }\n  const dt = new Date(due);\n  return isNaN(dt) ? null : dt;\n}\n\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',    jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',    jobs:[] },\n  });\n\n  // Fetch & rebuild columns wholesale from API (preserving machineId + start/end)\n  function fetchOrders() {\n    axios.get('http://localhost:5000/api/orders')\n      .then(res => {\n        const cols = {\n          queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n          machine1: { id:'machine1', title:'Machine 1',    jobs:[] },\n          machine2: { id:'machine2', title:'Machine 2',    jobs:[] },\n        };\n        res.data.forEach(o => {\n          const job = {\n            id:          o.id,\n            title:       o.title,\n            stitchCount: o.stitch_count,\n            quantity:    o.quantity,\n            due_date:    o.due_date,\n            start:       o.start_date,\n            end:         o.end_date\n          };\n          const col = cols[o.machineId] || cols.queue;\n          col.jobs.push(job);\n        });\n        // sort unscheduled by due_date\n        cols.queue.jobs.sort((a,b)=>{\n          const da = parseDueDate(a.due_date),\n                db = parseDueDate(b.due_date);\n          return da && db ? da - db : 0;\n        });\n        // sort machine columns by start time\n        ['machine1','machine2'].forEach(id=>{\n          cols[id].jobs.sort((a,b)=>{\n            const sa = new Date(a.start),\n                  sb = new Date(b.start);\n            return sa && sb ? sa - sb : 0;\n          });\n        });\n        setColumns(cols);\n      })\n      .catch(console.error);\n  }\n\n  useEffect(()=>{\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return ()=>clearInterval(iv);\n  },[]);\n\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason!=='DROP' || !destination) return;\n    if (source.droppableId===destination.droppableId && source.index===destination.index) return;\n\n    setTimeout(()=>{\n      const cols = JSON.parse(JSON.stringify(columns));\n      const fromJobs = cols[source.droppableId].jobs;\n      const [moved]  = fromJobs.splice(source.index,1);\n      const toJobs   = cols[destination.droppableId].jobs;\n      toJobs.splice(destination.index,0,moved);\n\n      // recalc start/end on that machine\n      let prevEnd = null;\n      toJobs.forEach((job,i)=>{\n        let start;\n        if (i===0) {\n          start = new Date(); start.setHours(WORK_START_HOUR, WORK_START_MIN,0,0);\n        } else {\n          prevEnd = toJobs[i-1].end ? new Date(toJobs[i-1].end) : prevEnd;\n          start = prevEnd\n            ? new Date(prevEnd.getTime() + 30*60000)\n            : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = (job.stitchCount/30000)*(job.quantity/6)*3600000;\n        const end   = addWorkTime(start, runMs);\n        job.start  = fmtDT(start);\n        job.end    = fmtDT(end);\n        prevEnd    = end;\n      });\n\n      // update state\n      cols[source.droppableId].jobs      = fromJobs;\n      cols[destination.droppableId].jobs = toJobs;\n      setColumns(cols);\n\n      // persist moved job + cascade\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId: destination.droppableId,\n        start_date: moved.start,\n        end_date: moved.end\n      }).catch(console.error);\n      toJobs.slice(destination.index+1).forEach(job=>{\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          start_date: job.start,\n          end_date: job.end\n        }).catch(console.error);\n      });\n    },0);\n  };\n\n  return (\n    <div style={{padding:16}}>\n      <button onClick={fetchOrders}>Refresh Data</button>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{display:'flex', gap:16, marginTop:16}}>\n          {Object.values(columns).map(col=>(\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov=>(\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4>{col.title}</h4>\n                  {col.jobs.map((job,idx)=>{\n                    const dueDt = parseDueDate(job.due_date);\n                    const endDt = job.end ? new Date(job.end) : null;\n                    const isLate = dueDt && endDt && endDt > dueDt;\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p=>(\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              userSelect:'none',\n                              padding:'10px',\n                              margin:'0 0 10px 0',\n                              background: isLate ? '#ffe6e6' : '#fff',\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            <div style={{flex:1, paddingRight:8}}>\n                              {job.title}\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:4\n                            }}>\n                              {job.start && (\n                                <div style={{\n                                  padding:'2px 6px',\n                                  background:'#e0f7fa',\n                                  borderRadius:12,\n                                  fontSize:'0.75em'\n                                }}>{job.start}</div>\n                              )}\n                              {job.end && (\n                                <div style={{\n                                  padding:'2px 6px',\n                                  background:'#ffe0b2',\n                                  borderRadius:12,\n                                  fontSize:'0.75em'\n                                }}>{job.end}</div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}