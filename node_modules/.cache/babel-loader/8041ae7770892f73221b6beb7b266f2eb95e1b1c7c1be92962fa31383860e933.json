{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// —————————————————————————————\n// CONFIGURATION\n// —————————————————————————————\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// —————————————————————————————\n// HELPERS\n// —————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay - current;\n    if (free <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n// Format \"MM/DD hh:mm AM/PM\"\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const mo = pad(dt.getMonth() + 1),\n    da = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ap}`;\n}\n// Format delivery \"MM/DD/YYYY\"\nfunction fmtDate(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${pad(dt.getMonth() + 1)}/${pad(dt.getDate())}/${dt.getFullYear()}`;\n}\n// Parse MM/DD hh:mm AM/PM back to Date\nfunction parseDateTime(s) {\n  if (!s) return null;\n  const [datePart, timePart, ampm] = s.split(' ');\n  const [mo, da] = datePart.split('/').map(x => parseInt(x, 10));\n  let [hh, mm] = timePart.split(':').map(x => parseInt(x, 10));\n  if (ampm === 'PM' && hh < 12) hh += 12;\n  if (ampm === 'AM' && hh === 12) hh = 0;\n  const dt = new Date();\n  dt.setFullYear(dt.getFullYear(), mo - 1, da, hh, mm, 0, 0);\n  return dt;\n}\n// Parse due date \"M/D\" or ISO\nfunction parseDueDate(d) {\n  if (!d) return null;\n  const parts = d.split('/');\n  if (parts.length === 2) {\n    const [mo, da] = parts.map(x => parseInt(x, 10));\n    if (!isNaN(mo) && !isNaN(da)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), mo - 1, da, 0, 0, 0, 0);\n      return dt;\n    }\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n\n  // placeholders persisted in localStorage\n  const [placeholders, setPlaceholders] = useState(() => {\n    const s = localStorage.getItem('placeholders');\n    return s ? JSON.parse(s) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // — Fetch + Merge (preserving machine order!)\n  const fetchAll = () => {\n    axios.get(`${API_ROOT}/orders`).then(({\n      data\n    }) => {\n      // 1) Rebuild the queue\n      const queueReal = data.filter(o => !o.id.toString().startsWith('ph-')).filter(o => (o.machineId || 'queue') === 'queue').map(o => ({\n        ...o,\n        id: o.id.toString(),\n        stitchCount: o.stitch_count,\n        quantity: o.quantity,\n        due_date: o.due_date,\n        due_type: o.due_type,\n        start: o.start_date || '',\n        end: o.end_date || '',\n        delivery: o.delivery || '',\n        embroidery_start: o.embroidery_start || ''\n      }));\n      queueReal.sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        return da && db ? da - db : 0;\n      });\n      const newQueue = [...placeholders, ...queueReal];\n\n      // 2) For each machine, preserve existing order & update data\n      const newCols = {\n        queue: {\n          ...columns.queue,\n          jobs: newQueue\n        }\n      };\n      ['machine1', 'machine2'].forEach(mid => {\n        // gather fresh rows for this machine\n        const assigned = data.filter(o => o.machineId === mid).reduce((acc, o) => {\n          acc[o.id.toString()] = o;\n          return acc;\n        }, {});\n\n        // start by walking current order\n        const updated = [];\n        columns[mid].jobs.forEach(oldJob => {\n          const id = oldJob.id;\n          const row = assigned[id];\n          if (row) {\n            updated.push({\n              id,\n              title: row.title,\n              stitchCount: row.stitch_count,\n              quantity: row.quantity,\n              due_date: row.due_date,\n              due_type: row.due_type,\n              start: row.start_date || '',\n              end: row.end_date || '',\n              delivery: row.delivery || '',\n              embroidery_start: row.embroidery_start || ''\n            });\n            delete assigned[id];\n          }\n        });\n        // append any brand-new ones\n        Object.values(assigned).forEach(row => {\n          updated.push({\n            id: row.id.toString(),\n            title: row.title,\n            stitchCount: row.stitch_count,\n            quantity: row.quantity,\n            due_date: row.due_date,\n            due_type: row.due_type,\n            start: row.start_date || '',\n            end: row.end_date || '',\n            delivery: row.delivery || '',\n            embroidery_start: row.embroidery_start || ''\n          });\n        });\n\n        // recalc times *in that preserved order*\n        let prev = null;\n        updated.forEach((job, i) => {\n          let start = i === 0 ? job.embroidery_start ? clampToWorkHours(new Date(job.embroidery_start)) : (() => {\n            const z = new Date();\n            z.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n            return clampToWorkHours(z);\n          })() : clampToWorkHours(new Date(prev.getTime() + 30 * 60000));\n          const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n          const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n          const end = addWorkTime(start, runMs);\n          const delivery = fmtDate(addWorkDays(end, 6));\n          job.start = fmtDT(start);\n          job.end = fmtDT(end);\n          job.delivery = delivery;\n          prev = end;\n        });\n        newCols[mid] = {\n          id: mid,\n          title: columns[mid].title,\n          jobs: updated\n        };\n      });\n      setColumns(newCols);\n    }).catch(console.error);\n  };\n  useEffect(fetchAll, []);\n\n  // — Drag & Drop\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const [moved] = cols[source.droppableId].jobs.splice(source.index, 1);\n      cols[destination.droppableId].jobs.splice(destination.index, 0, moved);\n      if (destination.droppableId === 'queue') {\n        if (!draggableId.startsWith('ph-')) {\n          moved.start = moved.end = moved.delivery = '';\n          axios.put(`${API_ROOT}/orders/${draggableId}`, {\n            machineId: null,\n            start_date: '',\n            end_date: '',\n            delivery: ''\n          }).catch(console.error);\n        }\n        const real = cols.queue.jobs.filter(j => !j.id.startsWith('ph-')).sort((a, b) => {\n          const da = parseDueDate(a.due_date),\n            db = parseDueDate(b.due_date);\n          return da && db ? da - db : 0;\n        });\n        cols.queue.jobs = [...placeholders, ...real];\n      } else {\n        let prev = null;\n        cols[destination.droppableId].jobs.forEach((j, i) => {\n          let start = i === 0 && j.embroidery_start ? clampToWorkHours(new Date(j.embroidery_start)) : clampToWorkHours(i === 0 ? (() => {\n            const z = new Date();\n            z.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n            return z;\n          })() : new Date(prev.getTime() + 30 * 60000));\n          const qty = j.quantity % 6 === 0 ? j.quantity : Math.ceil(j.quantity / 6) * 6;\n          const runMs = j.stitchCount / 30000 * (qty / 6) * 3600000;\n          const end = addWorkTime(start, runMs);\n          const delivery = fmtDate(addWorkDays(end, 6));\n          j.start = fmtDT(start);\n          j.end = fmtDT(end);\n          j.delivery = delivery;\n          prev = end;\n          if (!j.id.startsWith('ph-')) {\n            axios.put(`${API_ROOT}/orders/${j.id}`, {\n              machineId: destination.droppableId,\n              start_date: j.start,\n              end_date: j.end,\n              delivery\n            }).catch(console.error);\n          }\n        });\n      }\n      setColumns(cols);\n    }, 0);\n  };\n\n  // — Placeholders\n  const addPlaceholder = () => {\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`;\n    const job = {\n      id,\n      title,\n      stitchCount: Number(ph.stitchCount) || 30000,\n      quantity: Number(ph.quantity) || 1,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      start: '',\n      end: '',\n      delivery: ''\n    };\n    setPlaceholders(ps => [job, ...ps]);\n    setShowModal(false);\n    setPh({\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(j => j.id !== id));\n  };\n\n  // — Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 14\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAll,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: \"Add Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Stitch Count\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"In Hand Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Due Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addPlaceholder,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                textAlign: 'center',\n                margin: '8px 0'\n              },\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const dueDt = parseDueDate(job.due_date);\n              const dueEnd = dueDt ? (() => {\n                const x = new Date(dueDt);\n                x.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n                return x;\n              })() : null;\n              const endDt = job.end ? parseDateTime(job.end) : null;\n              const isLate = dueEnd && endDt && endDt > dueEnd;\n              const isHard = job.due_type === 'Hard Date';\n              const isPh = job.id.startsWith('ph-');\n              let bg = '#fff',\n                bdr = '1px solid #ccc';\n              if (isLate) bg = '#ffe6e6';else if (isPh) bg = '#e8f5e9';else if (isHard) bg = '#f3e5f5';\n              if (isHard || isPh) {\n                bdr = `2px solid ${isPh ? '#388e3c' : '#8e24aa'}`;\n              }\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    position: 'relative',\n                    userSelect: 'none',\n                    padding: 8,\n                    margin: '0 0 8px 0',\n                    background: bg,\n                    border: bdr,\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    fontSize: 14,\n                    ...p.draggableProps.style\n                  },\n                  children: [isPh && /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => removePlaceholder(job.id),\n                    style: {\n                      position: 'absolute',\n                      top: 4,\n                      left: 4,\n                      cursor: 'pointer',\n                      color: '#1976d2',\n                      fontWeight: 'bold'\n                    },\n                    children: \"\\u270E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 6\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 2,\n                      fontSize: 12\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#e0f7fa',\n                        borderRadius: 10\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 48\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#ffe0b2',\n                        borderRadius: 10\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 48\n                    }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#c8e6c9',\n                        borderRadius: 10\n                      },\n                      children: job.delivery\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G2e48U8jSdOsv/qBdGRSZd2ce6E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","mo","getMonth","da","h","m","ap","fmtDate","getFullYear","parseDateTime","s","datePart","timePart","ampm","split","map","x","parseInt","hh","mm","setFullYear","parseDueDate","parts","length","addWorkDays","days","added","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","placeholders","setPlaceholders","localStorage","getItem","JSON","parse","setItem","stringify","showModal","setShowModal","ph","setPh","company","quantity","stitchCount","inHand","dueType","fetchAll","get","then","data","queueReal","filter","o","toString","startsWith","machineId","stitch_count","due_date","due_type","start_date","end","end_date","delivery","embroidery_start","sort","a","b","db","newQueue","newCols","forEach","mid","assigned","reduce","acc","updated","oldJob","row","push","Object","values","prev","job","i","z","qty","Math","ceil","runMs","catch","console","error","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","cols","moved","splice","put","real","j","addPlaceholder","now","Number","ps","removePlaceholder","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","value","onChange","e","target","width","type","gap","col","prov","ref","innerRef","droppableProps","border","minHeight","margin","idx","dueDt","dueEnd","endDt","isLate","isHard","isPh","bg","bdr","p","draggableProps","dragHandleProps","userSelect","boxShadow","cursor","color","fontWeight","flex","paddingRight","flexDirection","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// —————————————————————————————\n// CONFIGURATION\n// —————————————————————————————\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// —————————————————————————————\n// HELPERS\n// —————————————————————————————\nfunction isHoliday(dt){\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt){\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt){\n  let d = new Date(dt);\n  while(\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ){\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms){\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay - current;\n    if (free <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n// Format \"MM/DD hh:mm AM/PM\"\nfunction fmtDT(dt){\n  const pad = n => String(n).padStart(2,'0');\n  const mo = pad(dt.getMonth()+1),\n        da = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${mo}/${da} ${pad(h)}:${m} ${ap}`;\n}\n// Format delivery \"MM/DD/YYYY\"\nfunction fmtDate(dt){\n  const pad = n => String(n).padStart(2,'0');\n  return `${pad(dt.getMonth()+1)}/${pad(dt.getDate())}/${dt.getFullYear()}`;\n}\n// Parse MM/DD hh:mm AM/PM back to Date\nfunction parseDateTime(s) {\n  if (!s) return null;\n  const [datePart, timePart, ampm] = s.split(' ');\n  const [mo, da] = datePart.split('/').map(x=>parseInt(x,10));\n  let [hh, mm] = timePart.split(':').map(x=>parseInt(x,10));\n  if (ampm === 'PM' && hh < 12) hh += 12;\n  if (ampm === 'AM' && hh === 12) hh = 0;\n  const dt = new Date();\n  dt.setFullYear(dt.getFullYear(), mo-1, da, hh, mm, 0, 0);\n  return dt;\n}\n// Parse due date \"M/D\" or ISO\nfunction parseDueDate(d){\n  if (!d) return null;\n  const parts = d.split('/');\n  if (parts.length === 2) {\n    const [mo, da] = parts.map(x=>parseInt(x,10));\n    if (!isNaN(mo)&&!isNaN(da)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), mo-1, da, 0,0,0,0);\n      return dt;\n    }\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days){\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate()+1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\nexport default function App(){\n  const [columns, setColumns] = useState({\n    queue:     { id:'queue',     title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',    jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',    jobs:[] },\n  });\n\n  // placeholders persisted in localStorage\n  const [placeholders, setPlaceholders] = useState(()=>{\n    const s = localStorage.getItem('placeholders');\n    return s ? JSON.parse(s) : [];\n  });\n  useEffect(()=>{\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n\n  // — Fetch + Merge (preserving machine order!)\n  const fetchAll = () => {\n    axios.get(`${API_ROOT}/orders`)\n      .then(({data})=>{\n        // 1) Rebuild the queue\n        const queueReal = data\n          .filter(o => !o.id.toString().startsWith('ph-'))\n          .filter(o => (o.machineId||'queue') === 'queue')\n          .map(o => ({ ...o,\n            id:            o.id.toString(),\n            stitchCount:   o.stitch_count,\n            quantity:      o.quantity,\n            due_date:      o.due_date,\n            due_type:      o.due_type,\n            start:         o.start_date || '',\n            end:           o.end_date   || '',\n            delivery:      o.delivery   || '',\n            embroidery_start: o.embroidery_start||''\n          }));\n        queueReal.sort((a,b)=>{\n          const da=parseDueDate(a.due_date), db=parseDueDate(b.due_date);\n          return da&&db ? da-db : 0;\n        });\n        const newQueue = [...placeholders, ...queueReal];\n\n        // 2) For each machine, preserve existing order & update data\n        const newCols = { queue: { ...columns.queue, jobs:newQueue } };\n        ['machine1','machine2'].forEach(mid=>{\n          // gather fresh rows for this machine\n          const assigned = data\n            .filter(o=>o.machineId===mid)\n            .reduce((acc,o)=>{ acc[o.id.toString()]=o; return acc; }, {});\n\n          // start by walking current order\n          const updated = [];\n          columns[mid].jobs.forEach(oldJob => {\n            const id = oldJob.id;\n            const row = assigned[id];\n            if (row) {\n              updated.push({\n                id,\n                title: row.title,\n                stitchCount: row.stitch_count,\n                quantity:    row.quantity,\n                due_date:    row.due_date,\n                due_type:    row.due_type,\n                start:       row.start_date || '',\n                end:         row.end_date   || '',\n                delivery:    row.delivery   || '',\n                embroidery_start: row.embroidery_start||''\n              });\n              delete assigned[id];\n            }\n          });\n          // append any brand-new ones\n          Object.values(assigned).forEach(row => {\n            updated.push({\n              id:           row.id.toString(),\n              title:        row.title,\n              stitchCount:  row.stitch_count,\n              quantity:     row.quantity,\n              due_date:     row.due_date,\n              due_type:     row.due_type,\n              start:        row.start_date || '',\n              end:          row.end_date   || '',\n              delivery:     row.delivery   || '',\n              embroidery_start: row.embroidery_start||''\n            });\n          });\n\n          // recalc times *in that preserved order*\n          let prev = null;\n          updated.forEach((job,i) => {\n            let start = i===0\n              ? (job.embroidery_start\n                  ? clampToWorkHours(new Date(job.embroidery_start))\n                  : (()=>{const z=new Date(); z.setHours(WORK_START_HR,WORK_START_MIN,0,0); return clampToWorkHours(z); })()\n                )\n              : clampToWorkHours(new Date(prev.getTime()+30*60000));\n\n            const qty = job.quantity % 6 === 0\n              ? job.quantity\n              : Math.ceil(job.quantity/6)*6;\n            const runMs = (job.stitchCount/30000)*(qty/6)*3600000;\n            const end = addWorkTime(start, runMs);\n            const delivery = fmtDate(addWorkDays(end,6));\n\n            job.start    = fmtDT(start);\n            job.end      = fmtDT(end);\n            job.delivery = delivery;\n            prev         = end;\n          });\n\n          newCols[mid] = { id:mid, title:columns[mid].title, jobs:updated };\n        });\n\n        setColumns(newCols);\n      })\n      .catch(console.error);\n  };\n  useEffect(fetchAll, []);\n\n  // — Drag & Drop\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason!=='DROP' || !destination) return;\n    if (\n      source.droppableId===destination.droppableId &&\n      source.index===destination.index\n    ) return;\n\n    setTimeout(()=>{\n      const cols = JSON.parse(JSON.stringify(columns));\n      const [moved] = cols[source.droppableId].jobs.splice(source.index,1);\n      cols[destination.droppableId].jobs.splice(destination.index, 0, moved);\n\n      if (destination.droppableId === 'queue') {\n        if (!draggableId.startsWith('ph-')) {\n          moved.start = moved.end = moved.delivery = '';\n          axios.put(`${API_ROOT}/orders/${draggableId}`, {\n            machineId: null,\n            start_date:'', end_date:'', delivery:''\n          }).catch(console.error);\n        }\n        const real = cols.queue.jobs\n          .filter(j=>!j.id.startsWith('ph-'))\n          .sort((a,b)=>{\n            const da=parseDueDate(a.due_date), db=parseDueDate(b.due_date);\n            return da&&db ? da-db : 0;\n          });\n        cols.queue.jobs = [...placeholders, ...real];\n      } else {\n        let prev = null;\n        cols[destination.droppableId].jobs.forEach((j,i)=>{\n          let start = (i===0 && j.embroidery_start)\n            ? clampToWorkHours(new Date(j.embroidery_start))\n            : clampToWorkHours(\n                i===0\n                  ? (()=>{const z=new Date(); z.setHours(WORK_START_HR,WORK_START_MIN,0,0); return z; })()\n                  : new Date(prev.getTime()+30*60000)\n              );\n\n          const qty = j.quantity % 6 === 0\n            ? j.quantity\n            : Math.ceil(j.quantity/6)*6;\n          const runMs = (j.stitchCount/30000)*(qty/6)*3600000;\n          const end = addWorkTime(start, runMs);\n          const delivery = fmtDate(addWorkDays(end,6));\n\n          j.start    = fmtDT(start);\n          j.end      = fmtDT(end);\n          j.delivery = delivery;\n          prev       = end;\n\n          if (!j.id.startsWith('ph-')) {\n            axios.put(`${API_ROOT}/orders/${j.id}`, {\n              machineId: destination.droppableId,\n              start_date: j.start,\n              end_date:   j.end,\n              delivery\n            }).catch(console.error);\n          }\n        });\n      }\n\n      setColumns(cols);\n    },0);\n  };\n\n  // — Placeholders\n  const addPlaceholder = () => {\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`;\n    const job = {\n      id, title,\n      stitchCount: Number(ph.stitchCount)||30000,\n      quantity:    Number(ph.quantity)   ||1,\n      due_date:    ph.inHand,\n      due_type:    ph.dueType,\n      start:'', end:'', delivery:''\n    };\n    setPlaceholders(ps => [job, ...ps]);\n    setShowModal(false);\n    setPh({company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(j=>j.id!==id));\n  };\n\n  // — Render\n  return (\n    <div style={{padding:16,fontFamily:'sans-serif',fontSize:14}}>\n      <button onClick={()=>setShowModal(true)} style={{marginRight:8}}>\n        + Add Placeholder\n      </button>\n      <button onClick={fetchAll}>Refresh Data</button>\n\n      {showModal && (\n        <div style={{\n          position:'fixed',top:0,left:0,right:0,bottom:0,\n          background:'rgba(0,0,0,0.3)',\n          display:'flex',alignItems:'center',justifyContent:'center',\n          zIndex:1000\n        }}>\n          <div style={{background:'#fff',padding:20,borderRadius:4,minWidth:300}}>\n            <h3 style={{marginTop:0,textAlign:'center'}}>Add Placeholder</h3>\n            <label>Company Name<br/>\n              <input value={ph.company}\n                     onChange={e=>setPh({...ph,company:e.target.value})}\n                     style={{width:'100%'}}/>\n            </label><br/><br/>\n            <label>Quantity<br/>\n              <input type=\"number\" value={ph.quantity}\n                     onChange={e=>setPh({...ph,quantity:e.target.value})}\n                     style={{width:'100%'}}/>\n            </label><br/><br/>\n            <label>Stitch Count<br/>\n              <input type=\"number\" value={ph.stitchCount}\n                     onChange={e=>setPh({...ph,stitchCount:e.target.value})}\n                     style={{width:'100%'}}/>\n            </label><br/><br/>\n            <label>In Hand Date<br/>\n              <input type=\"date\" value={ph.inHand}\n                     onChange={e=>setPh({...ph,inHand:e.target.value})}\n                     style={{width:'100%'}}/>\n            </label><br/><br/>\n            <label>Due Type<br/>\n              <select value={ph.dueType}\n                      onChange={e=>setPh({...ph,dueType:e.target.value})}\n                      style={{width:'100%'}}>\n                <option>Hard Date</option>\n                <option>Soft Date</option>\n              </select>\n            </label><br/><br/>\n            <div style={{textAlign:'right'}}>\n              <button onClick={()=>setShowModal(false)} style={{marginRight:8}}>Cancel</button>\n              <button onClick={addPlaceholder}>Submit</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{display:'flex',gap:16,marginTop:16}}>\n          {Object.values(columns).map(col=>(\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov=>(\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4 style={{textAlign:'center',margin:'8px 0'}}>{col.title}</h4>\n                  {col.jobs.map((job, idx) => {\n                    const dueDt = parseDueDate(job.due_date);\n                    const dueEnd = dueDt\n                      ? (()=>{const x=new Date(dueDt); x.setHours(WORK_END_HR,WORK_END_MIN,0,0); return x;})()\n                      : null;\n                    const endDt = job.end ? parseDateTime(job.end) : null;\n                    const isLate = dueEnd && endDt && endDt > dueEnd;\n                    const isHard = job.due_type === 'Hard Date';\n                    const isPh   = job.id.startsWith('ph-');\n                    let bg='#fff', bdr='1px solid #ccc';\n                    if (isLate)      bg='#ffe6e6';\n                    else if (isPh)   bg='#e8f5e9';\n                    else if (isHard) bg='#f3e5f5';\n                    if (isHard||isPh){\n                      bdr = `2px solid ${isPh?'#388e3c':'#8e24aa'}`;\n                    }\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p=>(\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              position:'relative',\n                              userSelect:'none',\n                              padding:8,\n                              margin:'0 0 8px 0',\n                              background:bg,\n                              border:bdr,\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              fontSize:14,\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            {isPh && (\n                              <span\n                                onClick={()=>removePlaceholder(job.id)}\n                                style={{\n                                  position:'absolute',top:4,left:4,\n                                  cursor:'pointer',color:'#1976d2',fontWeight:'bold'\n                                }}\n                              >✎</span>\n                            )}\n                            <div style={{flex:1,paddingRight:6}}>\n                              {job.title}\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:2,\n                              fontSize:12\n                            }}>\n                              {job.start    && <div style={{padding:'2px 4px',background:'#e0f7fa',borderRadius:10}}>{job.start}</div>}\n                              {job.end      && <div style={{padding:'2px 4px',background:'#ffe0b2',borderRadius:10}}>{job.end}</div>}\n                              {job.delivery && <div style={{padding:'2px 4px',background:'#c8e6c9',borderRadius:10}}>{job.delivery}</div>}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}