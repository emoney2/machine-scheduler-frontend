{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'\n// add more YYYY-MM-DD here\n];\n\n// Helpers\nconst isHoliday = dt => HOLIDAYS.includes(dt.toISOString().slice(0, 10));\nconst isWorkday = dt => !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // If before workday or weekend/holiday, bump to next 8:30\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    // move to next day at 8:30\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // If after end time, move to next business day start\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    // and re-check holiday/weekend\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction formatDT(dt) {\n  // e.g. \"2025-04-23 14:30\"\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())} ` + `${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({});\n\n  // fetch + poll\n  useEffect(() => {\n    const fetchOrders = () => axios.get('/api/orders').then(res => {\n      const data = res.data;\n      const cols = {\n        queue: {\n          id: 'queue',\n          title: 'Unscheduled',\n          jobs: []\n        },\n        machine1: {\n          id: 'machine1',\n          title: 'Machine 1',\n          jobs: []\n        },\n        machine2: {\n          id: 'machine2',\n          title: 'Machine 2',\n          jobs: []\n        }\n      };\n      data.forEach(o => {\n        const col = cols[o.machineId] || cols.queue;\n        col.jobs.push({\n          id: o.id.toString(),\n          title: o.title,\n          start: o.start_date || '',\n          end: o.end_date || ''\n        });\n      });\n      // sort each col by start date\n      Object.values(cols).forEach(c => {\n        c.jobs.sort((a, b) => {\n          return a.start && b.start ? new Date(a.start) - new Date(b.start) : 0;\n        });\n      });\n      setColumns(cols);\n    });\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, []);\n\n  // When dropped, compute start/end based on position\n  const onDragEnd = ({\n    source,\n    destination,\n    draggableId\n  }) => {\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    const cols = {\n      ...columns\n    };\n    const from = cols[source.droppableId];\n    const to = cols[destination.droppableId];\n    const jobListFrom = Array.from(from.jobs);\n    const [moved] = jobListFrom.splice(source.index, 1);\n    const jobListTo = Array.from(to.jobs);\n    jobListTo.splice(destination.index, 0, moved);\n\n    // Determine new start:\n    let newStart;\n    if (destination.index > 0) {\n      // take end of previous job + 30 min\n      const prev = jobListTo[destination.index - 1];\n      newStart = new Date(prev.end);\n      newStart.setMinutes(newStart.getMinutes() + 30);\n    } else {\n      // first job: today at 8:30\n      newStart = new Date();\n      newStart.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    }\n    // clamp to work hours/weekdays\n    newStart = clampToWorkHours(newStart);\n    // set duration (e.g. 1h)\n    const durationMs = 60 * 60 * 1000;\n    let newEnd = new Date(newStart.getTime() + durationMs);\n    newEnd = clampToWorkHours(newEnd);\n    moved.start = formatDT(newStart);\n    moved.end = formatDT(newEnd);\n\n    // update state\n    cols[source.droppableId] = {\n      ...from,\n      jobs: jobListFrom\n    };\n    cols[destination.droppableId] = {\n      ...to,\n      jobs: jobListTo\n    };\n    setColumns(cols);\n\n    // persist\n    axios.put(`/api/orders/${draggableId}`, {\n      machineId: destination.droppableId,\n      start_date: moved.start,\n      end_date: moved.end\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 16,\n        padding: 16\n      },\n      children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: col.id,\n        children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: prov.innerRef,\n          ...prov.droppableProps,\n          style: {\n            border: '1px solid #ccc',\n            borderRadius: 4,\n            width: 260,\n            minHeight: 400,\n            padding: 12,\n            background: '#fafafa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: col.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), col.jobs.map((job, i) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: job.id,\n            index: i,\n            children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: p.innerRef,\n              ...p.draggableProps,\n              ...p.dragHandleProps,\n              style: {\n                userSelect: 'none',\n                padding: '10px',\n                margin: '0 0 10px 0',\n                background: '#fff',\n                borderRadius: 4,\n                boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                ...p.draggableProps.style\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1,\n                  paddingRight: 8\n                },\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'flex-end',\n                  gap: 4\n                },\n                children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '2px 6px',\n                    background: '#e0f7fa',\n                    borderRadius: 12,\n                    fontSize: '0.75em'\n                  },\n                  children: job.start\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 29\n                }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '2px 6px',\n                    background: '#ffe0b2',\n                    borderRadius: 12,\n                    fontSize: '0.75em'\n                  },\n                  children: job.end\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 23\n            }, this)\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this)), prov.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)\n      }, col.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9hsVabetJn4SdlqWOd41pD0I99g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","Date","getHours","getMinutes","setDate","getDate","setHours","formatDT","pad","n","String","padStart","getFullYear","getMonth","App","_s","columns","setColumns","fetchOrders","get","then","res","data","cols","queue","id","title","jobs","machine1","machine2","forEach","o","col","machineId","push","toString","start","start_date","end","end_date","Object","values","c","sort","a","b","iv","setInterval","clearInterval","onDragEnd","source","destination","draggableId","droppableId","index","from","to","jobListFrom","Array","moved","splice","jobListTo","newStart","prev","setMinutes","durationMs","newEnd","getTime","put","children","style","display","gap","padding","map","prov","ref","innerRef","droppableProps","border","borderRadius","width","minHeight","background","fileName","_jsxFileName","lineNumber","columnNumber","job","i","p","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","flexDirection","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = [\n  '2025-01-01',\n  '2025-12-25',\n  // add more YYYY-MM-DD here\n];\n\n// Helpers\nconst isHoliday = dt => HOLIDAYS.includes(dt.toISOString().slice(0,10));\nconst isWorkday = dt => !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // If before workday or weekend/holiday, bump to next 8:30\n  while (!isWorkday(d) || (d.getHours()<WORK_START_HOUR || (d.getHours()===WORK_START_HOUR && d.getMinutes()<WORK_START_MIN))) {\n    // move to next day at 8:30\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // If after end time, move to next business day start\n  if (d.getHours()>WORK_END_HOUR || (d.getHours()===WORK_END_HOUR && d.getMinutes()>=WORK_END_MIN)) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    // and re-check holiday/weekend\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n\nfunction formatDT(dt) {\n  // e.g. \"2025-04-23 14:30\"\n  const pad=n=>String(n).padStart(2,'0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth()+1)}-${pad(dt.getDate())} ` +\n         `${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\n\nexport default function App() {\n  const [columns, setColumns] = useState({});\n\n  // fetch + poll\n  useEffect(() => {\n    const fetchOrders = () =>\n      axios.get('/api/orders').then(res => {\n        const data = res.data;\n        const cols = {\n          queue:    { id:'queue', title:'Unscheduled', jobs:[] },\n          machine1: { id:'machine1', title:'Machine 1', jobs:[] },\n          machine2: { id:'machine2', title:'Machine 2', jobs:[] },\n        };\n        data.forEach(o => {\n          const col = cols[o.machineId] || cols.queue;\n          col.jobs.push({\n            id: o.id.toString(),\n            title: o.title,\n            start: o.start_date || '',\n            end:   o.end_date   || ''\n          });\n        });\n        // sort each col by start date\n        Object.values(cols).forEach(c => {\n          c.jobs.sort((a,b)=>{\n            return a.start && b.start ? new Date(a.start) - new Date(b.start) : 0;\n          });\n        });\n        setColumns(cols);\n      });\n    fetchOrders();\n    const iv = setInterval(fetchOrders,60000);\n    return ()=>clearInterval(iv);\n  }, []);\n\n  // When dropped, compute start/end based on position\n  const onDragEnd = ({ source,destination,draggableId })=>{\n    if (!destination) return;\n    if (source.droppableId===destination.droppableId && source.index===destination.index) return;\n\n    const cols = {...columns};\n    const from = cols[source.droppableId];\n    const to   = cols[destination.droppableId];\n    const jobListFrom = Array.from(from.jobs);\n    const [moved] = jobListFrom.splice(source.index,1);\n    const jobListTo = Array.from(to.jobs);\n    jobListTo.splice(destination.index,0,moved);\n\n    // Determine new start:\n    let newStart;\n    if (destination.index>0) {\n      // take end of previous job + 30 min\n      const prev = jobListTo[destination.index-1];\n      newStart = new Date(prev.end);\n      newStart.setMinutes(newStart.getMinutes()+30);\n    } else {\n      // first job: today at 8:30\n      newStart = new Date();\n      newStart.setHours(WORK_START_HOUR, WORK_START_MIN,0,0);\n    }\n    // clamp to work hours/weekdays\n    newStart = clampToWorkHours(newStart);\n    // set duration (e.g. 1h)\n    const durationMs = 60*60*1000;\n    let newEnd = new Date(newStart.getTime()+durationMs);\n    newEnd = clampToWorkHours(newEnd);\n\n    moved.start = formatDT(newStart);\n    moved.end   = formatDT(newEnd);\n\n    // update state\n    cols[source.droppableId] = {...from, jobs: jobListFrom};\n    cols[destination.droppableId] = {...to, jobs: jobListTo};\n    setColumns(cols);\n\n    // persist\n    axios.put(`/api/orders/${draggableId}`,{\n      machineId: destination.droppableId,\n      start_date: moved.start,\n      end_date:   moved.end\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{display:'flex',gap:16,padding:16}}>\n        {Object.values(columns).map(col=>(\n          <Droppable droppableId={col.id} key={col.id}>\n            {prov=>(\n              <div ref={prov.innerRef} {...prov.droppableProps}\n                   style={{border:'1px solid #ccc',borderRadius:4,width:260,minHeight:400,padding:12,background:'#fafafa'}}>\n                <h4>{col.title}</h4>\n                {col.jobs.map((job,i)=>(\n                  <Draggable key={job.id} draggableId={job.id} index={i}>\n                    {p=>(\n                      <div ref={p.innerRef} {...p.draggableProps} {...p.dragHandleProps}\n                        style={{\n                          userSelect:'none',padding:'10px',margin:'0 0 10px 0',\n                          background:'#fff',borderRadius:4,boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                          display:'flex',justifyContent:'space-between',alignItems:'center',\n                          ...p.draggableProps.style\n                        }}>\n                        <div style={{flex:1,paddingRight:8}}>{job.title}</div>\n                        <div style={{display:'flex',flexDirection:'column',alignItems:'flex-end',gap:4}}>\n                          {job.start && (\n                            <div style={{\n                              padding:'2px 6px',background:'#e0f7fa',borderRadius:12,fontSize:'0.75em'\n                            }}>{job.start}</div>\n                          )}\n                          {job.end && (\n                            <div style={{\n                              padding:'2px 6px',background:'#ffe0b2',borderRadius:12,fontSize:'0.75em'\n                            }}>{job.end}</div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {prov.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}