{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === BEGIN SECTION 1 ===\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Configuration constants\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa',\n  BUBBLE_END = '#ffe0b2',\n  BUBBLE_DELIV = '#c8e6c9';\nfunction App() {\n  _s();\n  // Sync button handler\n  const [syncStatus, setSyncStatus] = useState(''); // ← added\n  const handleSync = useCallback(() => {\n    console.log('🔄 Sync clicked');\n    // your sync logic here...\n    // when done:\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  }, []);\n\n  // Modal visibility\n  const [showModal, setShowModal] = useState(false);\n\n  // Placeholder form state\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    designName: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // Jobs list\n  const [jobs, setJobs] = useState([]);\n\n  // Add or update placeholder job\n  const addPlaceholderJob = () => {\n    if (ph.id) {\n      setJobs(prev => prev.map(j => j.id === ph.id ? {\n        ...j,\n        ...ph\n      } : j).sort((a, b) => a.inHand.localeCompare(b.inHand)));\n    } else {\n      const newJob = {\n        id: `ph-${Date.now()}`,\n        ...ph\n      };\n      setJobs(prev => [...prev, newJob].sort((a, b) => a.inHand.localeCompare(b.inHand)));\n    }\n    setPh({\n      id: null,\n      company: '',\n      designName: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n    setShowModal(false);\n  };\n\n  // Edit placeholder\n  const editPlaceholder = job => {\n    setPh({\n      ...job\n    });\n    setShowModal(true);\n  };\n\n  // Remove placeholder — only one declaration\n  const removePlaceholder = id => {\n    setJobs(prev => prev.filter(j => j.id !== id));\n  };\n\n  // ... existing onDragEnd, getChain, parseDueDate, subWorkDays, fmtMMDD, columns derivation ...\n  // === END SECTION 1 ===\n\n  // === Section 2: Helpers ===\n\n  function isHoliday(dt) {\n    return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n  }\n  function isWorkday(dt) {\n    return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n  }\n  function clampToWorkHours(dt) {\n    let d = new Date(dt);\n    while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    }\n    if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n      d.setDate(d.getDate() + 1);\n      d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n      return clampToWorkHours(d);\n    }\n    return d;\n  }\n  function addWorkTime(start, ms) {\n    let remaining = ms;\n    let current = clampToWorkHours(start);\n    while (remaining > 0) {\n      const endOfDay = new Date(current);\n      endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n      const free = endOfDay.getTime() - current.getTime();\n      if (free <= 0) {\n        current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n      } else if (remaining <= free) {\n        current = new Date(current.getTime() + remaining);\n        remaining = 0;\n      } else {\n        remaining -= free;\n        current = new Date(endOfDay);\n      }\n    }\n    return current;\n  }\n  function fmtDT(dt) {\n    const pad = n => String(n).padStart(2, '0');\n    const month = pad(dt.getMonth() + 1);\n    const day = pad(dt.getDate());\n    let h = dt.getHours(),\n      m = pad(dt.getMinutes()),\n      ap = h >= 12 ? 'PM' : 'AM';\n    h = h % 12 || 12;\n    return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n  }\n  function parseDueDate(d) {\n    if (!d) return null;\n    if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n    const parts = d.split('/');\n    if (parts.length >= 2) {\n      const mo = +parts[0],\n        da = +parts[1],\n        yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n      if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n    }\n    const dt = new Date(d);\n    return isNaN(dt) ? null : dt;\n  }\n  function addWorkDays(start, days) {\n    let d = new Date(start),\n      added = 0;\n    while (added < days) {\n      d.setDate(d.getDate() + 1);\n      if (isWorkday(d)) added++;\n    }\n    return d;\n  }\n  function subWorkDays(start, days) {\n    let d = new Date(start),\n      removed = 0;\n    while (removed < days) {\n      d.setDate(d.getDate() - 1);\n      if (isWorkday(d)) removed++;\n    }\n    return d;\n  }\n  function fmtMMDD(d) {\n    const dt = new Date(d);\n    const mo = String(dt.getMonth() + 1).padStart(2, '0');\n    const da = String(dt.getDate()).padStart(2, '0');\n    return `${mo}/${da}`;\n  }\n  function sortQueue(arr) {\n    return [...arr].sort((a, b) => {\n      const da = parseDueDate(a.due_date),\n        db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    });\n  }\n\n  // —————————————————————————————\n  // SCHEDULING + LATE (persist embroidery_start)\n  // —————————————————————————————\n\n  // —————————————————————————————\n  // === Section 3: Scheduling & Late (using embroidery_start) ===\n  function scheduleMachineJobs(jobs) {\n    let prevEnd = null;\n    return jobs.map((job, idx) => {\n      // 1) Calculate cutoff for lateness (6 work-days before due)\n      const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n      const cutoff = new Date(eedDay);\n      cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n      // 2) Determine this job’s start time\n      let start;\n      if (idx === 0) {\n        // First job: prefer Embroidery List timestamp\n        if (job.embroidery_start) {\n          start = clampToWorkHours(new Date(job.embroidery_start));\n        } else {\n          // Fallback: stamp “now” into embroidery_start and persist\n          const nowIso = new Date().toISOString();\n          job.embroidery_start = nowIso;\n          start = clampToWorkHours(new Date(nowIso));\n          axios.put(`${API_ROOT}/orders/${job.id}`, {\n            embroidery_start: nowIso\n          }).catch(console.error);\n        }\n      } else {\n        // Subsequent jobs: 30 minutes after the prior end\n        start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n      }\n\n      // 3) Calculate run time → end\n      const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n      const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n      const end = addWorkTime(start, runMs);\n\n      // 4) Decorate for display\n      job._rawStart = start;\n      job._rawEnd = end;\n      job.start = fmtDT(start);\n      job.end = fmtDT(end);\n      job.delivery = fmtMMDD(addWorkDays(end, 6));\n      job.isLate = end > cutoff;\n      prevEnd = end;\n      return job;\n    });\n  }\n\n  // === Section 4: Link Utilities ===\n  function loadLinks() {\n    try {\n      return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n    } catch {\n      return {};\n    }\n  }\n  function saveLinks(map) {\n    localStorage.setItem('jobLinks', JSON.stringify(map));\n  }\n  function getChain(jobs, id) {\n    const fwd = {},\n      rev = {};\n    jobs.forEach(j => {\n      if (j.linkedTo) {\n        fwd[j.id] = j.linkedTo;\n        rev[j.linkedTo] = j.id;\n      }\n    });\n\n    // find root of the chain\n    let root = id;\n    while (rev[root]) {\n      root = rev[root];\n    }\n\n    // build the chain array\n    const chain = [];\n    let cur = root;\n    while (cur) {\n      chain.push(cur);\n      cur = fwd[cur];\n    }\n    return chain;\n  }\n\n  // === Section 5: FETCH & MERGE (with Manual Assignment & Ordering) ===\n  const fetchAll = async () => {\n    console.log('▶️ fetchAll: starting data load');\n    try {\n      // 1) Load manual state from localStorage\n      const manualState = JSON.parse(localStorage.getItem('manualState') || JSON.stringify({\n        machine1: [],\n        machine2: []\n      }));\n      console.log('  – manualState:', manualState);\n\n      // 2) Preserve any existing embroidery_start\n      const prevEmb = {};\n      Object.values(columns).flatMap(col => col.jobs).forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n\n      // 3) Fetch orders + embroideryList\n      const [{\n        data: orders\n      }, {\n        data: embList\n      }] = await Promise.all([axios.get(`${API_ROOT}/orders`), axios.get(`${API_ROOT}/embroideryList`)]);\n\n      // 4) Build embroidery-start map\n      const embMap = {};\n      embList.forEach(row => {\n        const id = String(row['Order #'] || '').trim();\n        if (id) embMap[id] = row['Embroidery Start Time'] || '';\n      });\n\n      // 5) Build up jobById\n      const jobById = {};\n      orders.forEach(o => {\n        var _ref, _embMap$id, _ref2, _o$machineId;\n        if (o.id == null) return;\n        const id = String(o.id).trim();\n        const rawTs = (_ref = (_embMap$id = embMap[id]) !== null && _embMap$id !== void 0 ? _embMap$id : prevEmb[id]) !== null && _ref !== void 0 ? _ref : '';\n        jobById[id] = {\n          ...o,\n          id,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          embroidery_start: rawTs,\n          start_date: rawTs,\n          linkedTo: links[o.id] || null,\n          // server-side machine assignment:\n          machineId: (_ref2 = (_o$machineId = o.machineId) !== null && _o$machineId !== void 0 ? _o$machineId : o.machine) !== null && _ref2 !== void 0 ? _ref2 : ''\n        };\n      });\n\n      // 6) Override with any manualState assignment\n      ;\n      ['machine1', 'machine2'].forEach(col => {\n        (manualState[col] || []).forEach(id => {\n          if (jobById[id]) jobById[id].machineId = col;\n        });\n      });\n\n      // 7) Build each machine in manual order + append new arrivals\n      const buildMachine = colId => {\n        const manualList = manualState[colId] || [];\n        const existing = manualList.filter(id => jobById[id]).map(id => jobById[id]);\n        const appended = Object.values(jobById).filter(j => j.machineId === colId && !manualList.includes(j.id));\n        return [...existing, ...appended];\n      };\n      const machine1Jobs = buildMachine('machine1');\n      const machine2Jobs = buildMachine('machine2');\n\n      // 8) Build queue: everything else, sorted by due date\n      const queueJobs = Object.values(jobById).filter(j => !['machine1', 'machine2'].includes(j.machineId)).map(j => ({\n        ...j,\n        start_date: '',\n        _rawStart: null,\n        _rawEnd: null,\n        start: '',\n        end: '',\n        delivery: '',\n        isLate: false\n      })).sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n\n      // 9) Schedule runtimes (machines only)\n      const next = {\n        queue: {\n          ...columns.queue,\n          jobs: queueJobs\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(machine1Jobs)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(machine2Jobs)\n        }\n      };\n      console.log('▶️ fetchAll: setting columns →', next);\n      setColumns(next);\n    } catch (err) {\n      console.error('⚠️ fetchAll error:', err);\n    }\n  };\n\n  // === BEGIN SECTION 6: Placeholder CRUD ===\n  /*\n    Only one “submitPlaceholder” handler here.\n    All add/edit/remove logic lives in Section 1.\n  */\n  const submitPlaceholder = () => {\n    // Re-use Section 1’s add/update logic:\n    addPlaceholderJob();\n  };\n  // === END SECTION 6 ===\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: Drag & Drop Handler (with Manual Assignment/Order) ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const srcId = source.droppableId;\n    const dstId = destination.droppableId;\n    // no-op if dropped back in same position\n    if (srcId === dstId && source.index === destination.index) return;\n\n    // 1) Load manualState\n    const manualState = JSON.parse(localStorage.getItem('manualState') || JSON.stringify({\n      machine1: [],\n      machine2: []\n    }));\n\n    // 2) If same machine, just reorder its array\n    if (srcId === dstId && (srcId === 'machine1' || srcId === 'machine2')) {\n      const arr = Array.from(manualState[srcId] || []);\n      // find & remove\n      const from = arr.indexOf(draggableId);\n      if (from > -1) {\n        arr.splice(from, 1);\n        arr.splice(destination.index, 0, draggableId);\n        manualState[srcId] = arr;\n      }\n    } else {\n      // 3) Cross-column move: remove from any machine lists\n      ['machine1', 'machine2'].forEach(col => {\n        manualState[col] = (manualState[col] || []).filter(id => id !== draggableId);\n      });\n      // 4) If dropped into a machine, insert into that machine’s manual list\n      if (dstId === 'machine1' || dstId === 'machine2') {\n        const arr = Array.from(manualState[dstId] || []);\n        arr.splice(destination.index, 0, draggableId);\n        manualState[dstId] = arr;\n      }\n    }\n\n    // 5) Persist manualState\n    localStorage.setItem('manualState', JSON.stringify(manualState));\n\n    // 6) Now update UI immediately (same as before)\n    const srcJobs = Array.from(columns[srcId].jobs);\n    const [moved] = srcJobs.splice(source.index, 1);\n\n    // clear schedule when moving into queue\n    const jobForDest = dstId === 'queue' ? {\n      ...moved,\n      start_date: '',\n      _rawStart: null,\n      _rawEnd: null,\n      start: '',\n      end: '',\n      delivery: '',\n      isLate: false\n    } : moved;\n    const dstJobs = Array.from(columns[dstId].jobs);\n    dstJobs.splice(destination.index, 0, jobForDest);\n    const finalDst = dstId === 'queue' ? dstJobs.sort((a, b) => {\n      const da = parseDueDate(a.due_date),\n        db = parseDueDate(b.due_date);\n      if (da && db) return da - db;\n      if (da) return -1;\n      if (db) return 1;\n      return 0;\n    }) : scheduleMachineJobs(dstJobs);\n    setColumns({\n      ...columns,\n      [srcId]: {\n        ...columns[srcId],\n        jobs: srcJobs\n      },\n      [dstId]: {\n        ...columns[dstId],\n        jobs: finalDst\n      }\n    });\n  };\n\n  // === BEGIN SECTION 9 ===\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 24,\n          borderRadius: 8,\n          width: 360,\n          boxShadow: '0 2px 10px rgba(0,0,0,0.2)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0\n          },\n          children: ph.id ? 'Edit Placeholder' : 'New Placeholder'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: 6,\n              marginTop: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Design Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ph.designName,\n            onChange: e => setPh({\n              ...ph,\n              designName: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: 6,\n              marginTop: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: 6,\n              marginTop: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Stitch Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: 6,\n              marginTop: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"In-Hand Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: 6,\n              marginTop: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: 6,\n              marginTop: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              padding: '6px 12px'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addPlaceholderJob,\n            style: {\n              padding: '6px 12px'\n            },\n            children: ph.id ? 'Update' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16,\n        fontFamily: 'sans-serif',\n        fontSize: 13\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        style: {\n          marginRight: 8,\n          fontSize: 13\n        },\n        children: \"+ Add Placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSync,\n        style: {\n          fontSize: 13\n        },\n        children: [\"Sync from Sheet\", ' ', syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green',\n            fontSize: 13\n          },\n          children: \"\\u2713 Updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 16,\n          margin: '12px 0',\n          flexWrap: 'wrap',\n          fontSize: 12\n        },\n        children: [[{\n          label: 'Placeholder',\n          bg: LIGHT_YELLOW,\n          border: DARK_YELLOW\n        }, {\n          label: 'Soft Date',\n          bg: LIGHT_GREY,\n          border: DARK_GREY\n        }, {\n          label: 'Hard Date',\n          bg: LIGHT_PURPLE,\n          border: DARK_PURPLE\n        }, {\n          label: 'Late',\n          bg: 'red',\n          border: 'red'\n        }].map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: 12,\n              height: 12,\n              background: item.bg,\n              border: `2px solid ${item.border}`,\n              borderRadius: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this), item.label]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 14\n            },\n            children: \"\\uD83D\\uDD17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 11\n          }, this), \" Link\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 14\n            },\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 11\n          }, this), \" Unlink\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 9\n        }, this), ['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n          const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                width: 12,\n                height: 12,\n                background: color,\n                borderRadius: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 15\n            }, this), txt]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 16,\n            marginTop: 16\n          },\n          children: ['queue', 'machine1', 'machine2'].map(colId => {\n            const col = columns[colId] || {};\n            const jobsList = Array.isArray(col.jobs) ? col.jobs : [];\n\n            // build segments of linked chains\n            const segments = [];\n            let idx = 0;\n            while (idx < jobsList.length) {\n              const chain = getChain(jobsList, jobsList[idx].id);\n              const len = chain.length > 1 ? chain.length : 1;\n              segments.push({\n                start: idx,\n                len\n              });\n              idx += len;\n            }\n            const GAP = 6,\n              OUTLINE = 6;\n            return /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: colId,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                style: {\n                  position: 'relative',\n                  border: '1px solid #ccc',\n                  borderRadius: 4,\n                  width: colId === 'queue' ? 260 : 300,\n                  minHeight: 400,\n                  padding: 12,\n                  background: '#fafafa'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    textAlign: 'center',\n                    margin: '8px 0',\n                    fontSize: 13\n                  },\n                  children: col.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 21\n                }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'relative',\n                    marginBottom: GAP,\n                    zIndex: seg.len > 1 ? 3 : 1,\n                    outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                    outlineOffset: seg.len > 1 ? '0px' : undefined,\n                    borderRadius: 4\n                  },\n                  children: [jobsList.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                    const posIndex = seg.start + jIdx;\n                    const isPhJob = job.id.startsWith('ph-');\n                    const isSoftJob = job.dueType === 'Soft Date';\n                    const baseColor = isPhJob ? LIGHT_YELLOW : isSoftJob ? LIGHT_GREY : LIGHT_PURPLE;\n                    let bgColor = baseColor;\n                    let borderColor = isPhJob ? DARK_YELLOW : isSoftJob ? DARK_GREY : DARK_PURPLE;\n                    if (job.isLate) {\n                      bgColor = `repeating-linear-gradient(\n                              45deg,\n                              ${baseColor}, ${baseColor} 6px,\n                              rgba(255,0,0,0.5) 6px,\n                              rgba(255,0,0,0.5) 12px\n                            )`;\n                      borderColor = 'red';\n                    }\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: job.id,\n                      index: posIndex,\n                      children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: prov.innerRef,\n                        ...prov.draggableProps,\n                        ...prov.dragHandleProps,\n                        style: {\n                          position: 'relative',\n                          display: 'grid',\n                          gridTemplateColumns: '1fr auto',\n                          gridTemplateRows: 'auto auto auto auto',\n                          columnGap: 6,\n                          rowGap: 4,\n                          padding: '6px 28px 6px 6px',\n                          margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                          background: bgColor,\n                          border: `2px solid ${borderColor}`,\n                          borderRadius: 4,\n                          zIndex: 2,\n                          ...prov.draggableProps.style\n                        },\n                        children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 4,\n                            height: '100%',\n                            background: '#0288d1',\n                            zIndex: 4\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 794,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 1,\n                            background: baseColor,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13,\n                            fontWeight: 'bold'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              display: 'inline-block',\n                              width: 20,\n                              height: 20,\n                              borderRadius: '50%',\n                              background: '#000',\n                              color: baseColor,\n                              lineHeight: '20px',\n                              textAlign: 'center',\n                              fontSize: isPhJob ? 13 : 11,\n                              fontWeight: 'bold',\n                              marginRight: 4\n                            },\n                            children: isPhJob ? '*' : job.id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 822,\n                            columnNumber: 37\n                          }, this), job.company]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 808,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 773,\n                        columnNumber: 33\n                      }, this)\n                    }, job.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 29\n                    }, this);\n                  }), provided.placeholder]\n                }, si, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 19\n              }, this)\n            }, colId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n// === END SECTION 9 ===\n\n// === Section 10: AddPlaceholderModal Component ===\n_s(App, \"VkUt2Pvv6W1nQGXDS7wle/C/OZ0=\");\n_c = App;\nfunction AddPlaceholderModal({\n  ph,\n  setPh,\n  addPlaceholderJob,\n  setShowModal\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fff',\n        padding: 24,\n        borderRadius: 8,\n        width: 360,\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: ph.id ? 'Edit Placeholder Job' : 'New Placeholder Job'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ph.company,\n          onChange: e => setPh({\n            ...ph,\n            company: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Design Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ph.designName,\n          onChange: e => setPh({\n            ...ph,\n            designName: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ph.quantity,\n          onChange: e => setPh({\n            ...ph,\n            quantity: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Stitch Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ph.stitchCount,\n          onChange: e => setPh({\n            ...ph,\n            stitchCount: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"In-Hand Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: ph.inHand,\n          onChange: e => setPh({\n            ...ph,\n            inHand: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Due Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: ph.dueType,\n          onChange: e => setPh({\n            ...ph,\n            dueType: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: 6,\n            marginTop: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Hard Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Soft Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          style: {\n            padding: '6px 12px'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPlaceholderJob,\n          style: {\n            padding: '6px 12px'\n          },\n          children: ph.id ? 'Update' : 'Add'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 866,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AddPlaceholderModal;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddPlaceholderModal\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","App","_s","syncStatus","setSyncStatus","handleSync","console","log","setTimeout","showModal","setShowModal","ph","setPh","id","company","designName","quantity","stitchCount","inHand","dueType","jobs","setJobs","addPlaceholderJob","prev","map","j","sort","a","b","localeCompare","newJob","Date","now","editPlaceholder","job","removePlaceholder","filter","isHoliday","dt","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","due_date","db","scheduleMachineJobs","prevEnd","idx","eedDay","cutoff","embroidery_start","nowIso","put","API_ROOT","catch","error","qty","Math","ceil","runMs","end","_rawStart","_rawEnd","delivery","isLate","loadLinks","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","fwd","rev","forEach","linkedTo","root","chain","cur","push","fetchAll","manualState","machine1","machine2","prevEmb","Object","values","columns","flatMap","col","start_date","data","orders","embList","Promise","all","get","embMap","row","trim","jobById","o","_ref","_embMap$id","_ref2","_o$machineId","rawTs","stitch_count","design","due_type","links","machineId","machine","buildMachine","colId","manualList","existing","appended","machine1Jobs","machine2Jobs","queueJobs","next","queue","setColumns","err","submitPlaceholder","toggleLink","cols","below","setLinks","l","onDragEnd","result","source","destination","draggableId","srcId","droppableId","dstId","index","Array","from","indexOf","splice","srcJobs","moved","jobForDest","dstJobs","finalDst","children","style","position","top","left","width","height","backgroundColor","display","alignItems","justifyContent","zIndex","background","padding","borderRadius","boxShadow","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","gap","onClick","fontFamily","fontSize","marginRight","color","margin","flexWrap","label","bg","border","item","i","txt","jobsList","isArray","segments","len","GAP","OUTLINE","provided","ref","innerRef","droppableProps","minHeight","textAlign","title","seg","si","outline","undefined","outlineOffset","jIdx","posIndex","isPhJob","startsWith","isSoftJob","baseColor","bgColor","borderColor","prov","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","right","gridRow","gridColumn","whiteSpace","overflow","textOverflow","fontWeight","lineHeight","placeholder","_c","AddPlaceholderModal","_c2","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === BEGIN SECTION 1 ===\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Configuration constants\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0, 6];\nconst HOLIDAYS       = ['2025-01-01', '2025-12-25'];\n\nconst LIGHT_YELLOW = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY   = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa', BUBBLE_END = '#ffe0b2', BUBBLE_DELIV = '#c8e6c9';\n\nfunction App() {\n  // Sync button handler\n  const [syncStatus, setSyncStatus] = useState('');            // ← added\n  const handleSync = useCallback(() => {\n    console.log('🔄 Sync clicked');\n    // your sync logic here...\n    // when done:\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  }, []);\n\n  // Modal visibility\n  const [showModal, setShowModal] = useState(false);\n\n  // Placeholder form state\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    designName: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date',\n  });\n\n  // Jobs list\n  const [jobs, setJobs] = useState([]);\n\n  // Add or update placeholder job\n  const addPlaceholderJob = () => {\n    if (ph.id) {\n      setJobs(prev =>\n        prev\n          .map(j => (j.id === ph.id ? { ...j, ...ph } : j))\n          .sort((a, b) => a.inHand.localeCompare(b.inHand))\n      );\n    } else {\n      const newJob = { id: `ph-${Date.now()}`, ...ph };\n      setJobs(prev =>\n        [...prev, newJob].sort((a, b) => a.inHand.localeCompare(b.inHand))\n      );\n    }\n    setPh({ id: null, company: '', designName: '', quantity: '', stitchCount: '', inHand: '', dueType: 'Hard Date' });\n    setShowModal(false);\n  };\n\n  // Edit placeholder\n  const editPlaceholder = job => {\n    setPh({ ...job });\n    setShowModal(true);\n  };\n\n  // Remove placeholder — only one declaration\n  const removePlaceholder = id => {\n    setJobs(prev => prev.filter(j => j.id !== id));\n  };\n\n  // ... existing onDragEnd, getChain, parseDueDate, subWorkDays, fmtMMDD, columns derivation ...\n// === END SECTION 1 ===\n\n\n// === Section 2: Helpers ===\n\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\n\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\n\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\n\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^d{4}-d{2}-d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\n\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\n\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (persist embroidery_start)\n// —————————————————————————————\n\n// —————————————————————————————\n// === Section 3: Scheduling & Late (using embroidery_start) ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n\n  return jobs.map((job, idx) => {\n    // 1) Calculate cutoff for lateness (6 work-days before due)\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // 2) Determine this job’s start time\n    let start;\n    if (idx === 0) {\n      // First job: prefer Embroidery List timestamp\n      if (job.embroidery_start) {\n        start = clampToWorkHours(new Date(job.embroidery_start));\n      } else {\n        // Fallback: stamp “now” into embroidery_start and persist\n        const nowIso = new Date().toISOString();\n        job.embroidery_start = nowIso;\n        start = clampToWorkHours(new Date(nowIso));\n\n        axios\n          .put(\n            `${API_ROOT}/orders/${job.id}`,\n            { embroidery_start: nowIso }\n          )\n          .catch(console.error);\n      }\n    } else {\n      // Subsequent jobs: 30 minutes after the prior end\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // 3) Calculate run time → end\n    const qty   = job.quantity % 6 === 0\n      ? job.quantity\n      : Math.ceil(job.quantity / 6) * 6;\n    const runMs = (job.stitchCount / 30000) * (qty / 6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    // 4) Decorate for display\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\n\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\n\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]    = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n\n  // find root of the chain\n  let root = id;\n  while (rev[root]) {\n    root = rev[root];\n  }\n\n  // build the chain array\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// === Section 5: FETCH & MERGE (with Manual Assignment & Ordering) ===\nconst fetchAll = async () => {\n  console.log('▶️ fetchAll: starting data load');\n\n  try {\n    // 1) Load manual state from localStorage\n    const manualState = JSON.parse(\n      localStorage.getItem('manualState') ||\n      JSON.stringify({ machine1: [], machine2: [] })\n    );\n    console.log('  – manualState:', manualState);\n\n    // 2) Preserve any existing embroidery_start\n    const prevEmb = {};\n    Object.values(columns)\n      .flatMap(col => col.jobs)\n      .forEach(j => {\n        prevEmb[j.id] = j.embroidery_start || j.start_date || '';\n      });\n\n    // 3) Fetch orders + embroideryList\n    const [{ data: orders }, { data: embList }] = await Promise.all([\n      axios.get(`${API_ROOT}/orders`),\n      axios.get(`${API_ROOT}/embroideryList`)\n    ]);\n\n    // 4) Build embroidery-start map\n    const embMap = {};\n    embList.forEach(row => {\n      const id = String(row['Order #'] || '').trim();\n      if (id) embMap[id] = row['Embroidery Start Time'] || '';\n    });\n\n    // 5) Build up jobById\n    const jobById = {};\n    orders.forEach(o => {\n      if (o.id == null) return;\n      const id    = String(o.id).trim();\n      const rawTs = embMap[id] ?? prevEmb[id] ?? '';\n      jobById[id] = {\n        ...o,\n        id,\n        stitchCount: o.stitch_count,\n        quantity:    o.quantity,\n        company:     o.company,\n        design:      o.design,\n        due_date:    o.due_date,\n        due_type:    o.due_type,\n        embroidery_start: rawTs,\n        start_date:  rawTs,\n        linkedTo:    links[o.id] || null,\n        // server-side machine assignment:\n        machineId:   o.machineId ?? o.machine ?? ''\n      };\n    });\n\n    // 6) Override with any manualState assignment\n    ;['machine1','machine2'].forEach(col => {\n      (manualState[col] || []).forEach(id => {\n        if (jobById[id]) jobById[id].machineId = col;\n      });\n    });\n\n    // 7) Build each machine in manual order + append new arrivals\n    const buildMachine = colId => {\n      const manualList = manualState[colId] || [];\n      const existing   = manualList.filter(id => jobById[id]).map(id => jobById[id]);\n      const appended   = Object.values(jobById)\n        .filter(j => j.machineId === colId && !manualList.includes(j.id));\n      return [...existing, ...appended];\n    };\n    const machine1Jobs = buildMachine('machine1');\n    const machine2Jobs = buildMachine('machine2');\n\n    // 8) Build queue: everything else, sorted by due date\n    const queueJobs = Object.values(jobById)\n      .filter(j => !['machine1','machine2'].includes(j.machineId))\n      .map(j => ({ \n        ...j,\n        start_date: '',\n        _rawStart:  null,\n        _rawEnd:    null,\n        start:      '',\n        end:        '',\n        delivery:   '',\n        isLate:     false\n      }))\n      .sort((a, b) => {\n        const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      });\n\n    // 9) Schedule runtimes (machines only)\n    const next = {\n      queue:    { ...columns.queue,    jobs: queueJobs },\n      machine1: { ...columns.machine1, jobs: scheduleMachineJobs(machine1Jobs) },\n      machine2: { ...columns.machine2, jobs: scheduleMachineJobs(machine2Jobs) },\n    };\n    console.log('▶️ fetchAll: setting columns →', next);\n    setColumns(next);\n\n  } catch (err) {\n    console.error('⚠️ fetchAll error:', err);\n  }\n};\n\n\n// === BEGIN SECTION 6: Placeholder CRUD ===\n/*\n  Only one “submitPlaceholder” handler here.\n  All add/edit/remove logic lives in Section 1.\n*/\nconst submitPlaceholder = () => {\n  // Re-use Section 1’s add/update logic:\n  addPlaceholderJob();\n};\n// === END SECTION 6 ===\n\n\n\n\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: Drag & Drop Handler (with Manual Assignment/Order) ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const srcId = source.droppableId;\n  const dstId = destination.droppableId;\n  // no-op if dropped back in same position\n  if (srcId === dstId && source.index === destination.index) return;\n\n  // 1) Load manualState\n  const manualState = JSON.parse(\n    localStorage.getItem('manualState') ||\n    JSON.stringify({ machine1: [], machine2: [] })\n  );\n\n  // 2) If same machine, just reorder its array\n  if (srcId === dstId && (srcId === 'machine1' || srcId === 'machine2')) {\n    const arr = Array.from(manualState[srcId] || []);\n    // find & remove\n    const from = arr.indexOf(draggableId);\n    if (from > -1) {\n      arr.splice(from, 1);\n      arr.splice(destination.index, 0, draggableId);\n      manualState[srcId] = arr;\n    }\n  } else {\n    // 3) Cross-column move: remove from any machine lists\n    ['machine1','machine2'].forEach(col => {\n      manualState[col] = (manualState[col] || []).filter(id => id !== draggableId);\n    });\n    // 4) If dropped into a machine, insert into that machine’s manual list\n    if (dstId === 'machine1' || dstId === 'machine2') {\n      const arr = Array.from(manualState[dstId] || []);\n      arr.splice(destination.index, 0, draggableId);\n      manualState[dstId] = arr;\n    }\n  }\n\n  // 5) Persist manualState\n  localStorage.setItem('manualState', JSON.stringify(manualState));\n\n  // 6) Now update UI immediately (same as before)\n  const srcJobs = Array.from(columns[srcId].jobs);\n  const [moved] = srcJobs.splice(source.index, 1);\n\n  // clear schedule when moving into queue\n  const jobForDest = dstId === 'queue'\n    ? { ...moved, start_date:'', _rawStart:null, _rawEnd:null, start:'', end:'', delivery:'', isLate:false }\n    : moved;\n\n  const dstJobs = Array.from(columns[dstId].jobs);\n  dstJobs.splice(destination.index, 0, jobForDest);\n\n  const finalDst = dstId === 'queue'\n    ? dstJobs.sort((a, b) => {\n        const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n        if (da && db) return da - db;\n        if (da) return -1;\n        if (db) return 1;\n        return 0;\n      })\n    : scheduleMachineJobs(dstJobs);\n\n  setColumns({\n    ...columns,\n    [srcId]: { ...columns[srcId], jobs: srcJobs },\n    [dstId]: { ...columns[dstId], jobs: finalDst },\n  });\n};\n\n// === BEGIN SECTION 9 ===\nreturn (\n  <>\n    {/* Modal for adding/editing placeholder */}\n    {showModal && (\n      <div\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000,\n        }}\n      >\n        <div\n          style={{\n            background: '#fff',\n            padding: 24,\n            borderRadius: 8,\n            width: 360,\n            boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n          }}\n        >\n          <h3 style={{ marginTop: 0 }}>\n            {ph.id ? 'Edit Placeholder' : 'New Placeholder'}\n          </h3>\n\n          <div style={{ marginBottom: 12 }}>\n            <label>Company</label>\n            <input\n              type=\"text\"\n              value={ph.company}\n              onChange={e => setPh({ ...ph, company: e.target.value })}\n              style={{ width: '100%', padding: 6, marginTop: 4 }}\n            />\n          </div>\n\n          <div style={{ marginBottom: 12 }}>\n            <label>Design Name</label>\n            <input\n              type=\"text\"\n              value={ph.designName}\n              onChange={e => setPh({ ...ph, designName: e.target.value })}\n              style={{ width: '100%', padding: 6, marginTop: 4 }}\n            />\n          </div>\n\n          <div style={{ marginBottom: 12 }}>\n            <label>Quantity</label>\n            <input\n              type=\"number\"\n              value={ph.quantity}\n              onChange={e => setPh({ ...ph, quantity: e.target.value })}\n              style={{ width: '100%', padding: 6, marginTop: 4 }}\n            />\n          </div>\n\n          <div style={{ marginBottom: 12 }}>\n            <label>Stitch Count</label>\n            <input\n              type=\"number\"\n              value={ph.stitchCount}\n              onChange={e => setPh({ ...ph, stitchCount: e.target.value })}\n              style={{ width: '100%', padding: 6, marginTop: 4 }}\n            />\n          </div>\n\n          <div style={{ marginBottom: 12 }}>\n            <label>In-Hand Date</label>\n            <input\n              type=\"date\"\n              value={ph.inHand}\n              onChange={e => setPh({ ...ph, inHand: e.target.value })}\n              style={{ width: '100%', padding: 6, marginTop: 4 }}\n            />\n          </div>\n\n          <div style={{ marginBottom: 16 }}>\n            <label>Due Type</label>\n            <select\n              value={ph.dueType}\n              onChange={e => setPh({ ...ph, dueType: e.target.value })}\n              style={{ width: '100%', padding: 6, marginTop: 4 }}\n            >\n              <option>Hard Date</option>\n              <option>Soft Date</option>\n            </select>\n          </div>\n\n          <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 8 }}>\n            <button\n              onClick={() => setShowModal(false)}\n              style={{ padding: '6px 12px' }}\n            >\n              Cancel\n            </button>\n            <button\n              onClick={addPlaceholderJob}\n              style={{ padding: '6px 12px' }}\n            >\n              {ph.id ? 'Update' : 'Add'}\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n\n    <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 13 }}>\n\n      {/* Add / Sync Buttons */}\n      <button\n        onClick={() => setShowModal(true)}\n        style={{ marginRight: 8, fontSize: 13 }}\n      >\n        + Add Placeholder\n      </button>\n      <button onClick={handleSync} style={{ fontSize: 13 }}>\n        Sync from Sheet{' '}\n        {syncStatus === 'updated' && (\n          <span style={{ color: 'green', fontSize: 13 }}>✓ Updated</span>\n        )}\n      </button>\n\n      {/* Legend */}\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: 16,\n          margin: '12px 0',\n          flexWrap: 'wrap',\n          fontSize: 12,\n        }}\n      >\n        {[\n          { label: 'Placeholder', bg: LIGHT_YELLOW, border: DARK_YELLOW },\n          { label: 'Soft Date',    bg: LIGHT_GREY,   border: DARK_GREY   },\n          { label: 'Hard Date',    bg: LIGHT_PURPLE, border: DARK_PURPLE },\n          { label: 'Late',         bg: 'red',        border: 'red'       },\n        ].map((item, i) => (\n          <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n            <span\n              style={{\n                width: 12,\n                height: 12,\n                background: item.bg,\n                border: `2px solid ${item.border}`,\n                borderRadius: 2,\n              }}\n            />\n            {item.label}\n          </div>\n        ))}\n        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n          <span style={{ fontSize: 14 }}>🔗</span> Link\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n          <span style={{ fontSize: 14 }}>❌</span> Unlink\n        </div>\n        {['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n          const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n          return (\n            <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n              <span\n                style={{\n                  width: 12,\n                  height: 12,\n                  background: color,\n                  borderRadius: 2,\n                }}\n              />\n              {txt}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Drag & Drop Columns */}\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n          {['queue', 'machine1', 'machine2'].map(colId => {\n            const col = columns[colId] || {};\n            const jobsList = Array.isArray(col.jobs) ? col.jobs : [];\n\n            // build segments of linked chains\n            const segments = [];\n            let idx = 0;\n            while (idx < jobsList.length) {\n              const chain = getChain(jobsList, jobsList[idx].id);\n              const len = chain.length > 1 ? chain.length : 1;\n              segments.push({ start: idx, len });\n              idx += len;\n            }\n            const GAP = 6, OUTLINE = 6;\n\n            return (\n              <Droppable key={colId} droppableId={colId}>\n                {provided => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      position: 'relative',\n                      border: '1px solid #ccc',\n                      borderRadius: 4,\n                      width: colId === 'queue' ? 260 : 300,\n                      minHeight: 400,\n                      padding: 12,\n                      background: '#fafafa',\n                    }}\n                  >\n                    <h4 style={{ textAlign: 'center', margin: '8px 0', fontSize: 13 }}>\n                      {col.title}\n                    </h4>\n\n                    {segments.map((seg, si) => (\n                      <div\n                        key={si}\n                        style={{\n                          position: 'relative',\n                          marginBottom: GAP,\n                          zIndex: seg.len > 1 ? 3 : 1,\n                          outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                          outlineOffset: seg.len > 1 ? '0px' : undefined,\n                          borderRadius: 4,\n                        }}\n                      >\n                        {jobsList.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                          const posIndex = seg.start + jIdx;\n                          const isPhJob = job.id.startsWith('ph-');\n                          const isSoftJob = job.dueType === 'Soft Date';\n                          const baseColor = isPhJob\n                            ? LIGHT_YELLOW\n                            : isSoftJob\n                            ? LIGHT_GREY\n                            : LIGHT_PURPLE;\n                          let bgColor = baseColor;\n                          let borderColor = isPhJob\n                            ? DARK_YELLOW\n                            : isSoftJob\n                            ? DARK_GREY\n                            : DARK_PURPLE;\n                          if (job.isLate) {\n                            bgColor = `repeating-linear-gradient(\n                              45deg,\n                              ${baseColor}, ${baseColor} 6px,\n                              rgba(255,0,0,0.5) 6px,\n                              rgba(255,0,0,0.5) 12px\n                            )`;\n                            borderColor = 'red';\n                          }\n\n                          return (\n                            <Draggable key={job.id} draggableId={job.id} index={posIndex}>\n                              {prov => (\n                                <div\n                                  ref={prov.innerRef}\n                                  {...prov.draggableProps}\n                                  {...prov.dragHandleProps}\n                                  style={{\n                                    position: 'relative',\n                                    display: 'grid',\n                                    gridTemplateColumns: '1fr auto',\n                                    gridTemplateRows: 'auto auto auto auto',\n                                    columnGap: 6,\n                                    rowGap: 4,\n                                    padding: '6px 28px 6px 6px',\n                                    margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                                    background: bgColor,\n                                    border: `2px solid ${borderColor}`,\n                                    borderRadius: 4,\n                                    zIndex: 2,\n                                    ...prov.draggableProps.style,\n                                  }}\n                                >\n                                  {jIdx === 0 && seg.len > 1 && (\n                                    <div\n                                      style={{\n                                        position: 'absolute',\n                                        top: 0,\n                                        right: 0,\n                                        width: 4,\n                                        height: '100%',\n                                        background: '#0288d1',\n                                        zIndex: 4,\n                                      }}\n                                    />\n                                  )}\n\n                                  {/* Row1 Col1: ID + Company */}\n                                  <span\n                                    style={{\n                                      gridRow: 1,\n                                      gridColumn: 1,\n                                      background: baseColor,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                      fontWeight: 'bold',\n                                    }}\n                                  >\n                                    <span\n                                      style={{\n                                        display: 'inline-block',\n                                        width: 20,\n                                        height: 20,\n                                        borderRadius: '50%',\n                                        background: '#000',\n                                        color: baseColor,\n                                        lineHeight: '20px',\n                                        textAlign: 'center',\n                                        fontSize: isPhJob ? 13 : 11,\n                                        fontWeight: 'bold',\n                                        marginRight: 4,\n                                      }}\n                                    >\n                                      {isPhJob ? '*' : job.id}\n                                    </span>\n                                    {job.company}\n                                  </span>\n                                </div>\n                              )}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </Droppable>\n            );\n          })}\n        </div>\n      </DragDropContext>\n    </div>\n  </>\n);\n}\n// === END SECTION 9 ===\n\n\n// === Section 10: AddPlaceholderModal Component ===\nfunction AddPlaceholderModal({ ph, setPh, addPlaceholderJob, setShowModal }) {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0, left: 0,\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n      }}\n    >\n      <div\n        style={{\n          background: '#fff',\n          padding: 24,\n          borderRadius: 8,\n          width: 360,\n          boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n        }}\n      >\n        <h3 style={{ marginTop: 0 }}>\n          {ph.id ? 'Edit Placeholder Job' : 'New Placeholder Job'}\n        </h3>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Company</label>\n          <input\n            type=\"text\"\n            value={ph.company}\n            onChange={e => setPh({ ...ph, company: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Design Name</label>\n          <input\n            type=\"text\"\n            value={ph.designName}\n            onChange={e => setPh({ ...ph, designName: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Quantity</label>\n          <input\n            type=\"number\"\n            value={ph.quantity}\n            onChange={e => setPh({ ...ph, quantity: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>Stitch Count</label>\n          <input\n            type=\"number\"\n            value={ph.stitchCount}\n            onChange={e => setPh({ ...ph, stitchCount: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 12 }}>\n          <label>In-Hand Date</label>\n          <input\n            type=\"date\"\n            value={ph.inHand}\n            onChange={e => setPh({ ...ph, inHand: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          />\n        </div>\n\n        <div style={{ marginBottom: 16 }}>\n          <label>Due Type</label>\n          <select\n            value={ph.dueType}\n            onChange={e => setPh({ ...ph, dueType: e.target.value })}\n            style={{ width: '100%', padding: 6, marginTop: 4 }}\n          >\n            <option>Hard Date</option>\n            <option>Soft Date</option>\n          </select>\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 8 }}>\n          <button\n            onClick={() => setShowModal(false)}\n            style={{ padding: '6px 12px' }}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={addPlaceholderJob}\n            style={{ padding: '6px 12px' }}\n          >\n            {ph.id ? 'Update' : 'Add'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}