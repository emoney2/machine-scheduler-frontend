{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// ————————————————————————————————————————————————————\n// Helpers\n// ————————————————————————————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // Advance to the next valid workday/time if before hours or weekend/holiday\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // If after work end, roll to next day\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const freeMs = endOfDay - current;\n    if (freeMs <= 0) {\n      // jump to next business day\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= freeMs) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= freeMs;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n// Format `dt` as \"YYYY-MM-DD h:mm AM/PM\"\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const Y = dt.getFullYear(),\n    M = pad(dt.getMonth() + 1),\n    D = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes());\n  const ampm = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${Y}-${M}-${D} ${h}:${m} ${ampm}`;\n}\n// Parse strings like \"5/23\" or full ISO dates\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length === 2) {\n    const [mo, da] = parts.map(x => parseInt(x, 10));\n    if (!isNaN(mo) && !isNaN(da)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), mo - 1, da, 0, 0, 0, 0);\n      return dt;\n    }\n  }\n  const dt = new Date(due);\n  return isNaN(dt) ? null : dt;\n}\n\n// ————————————————————————————————————————————————————\n// Main Component\n// ————————————————————————————————————————————————————\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n\n  // Fetch from API + merge placeholders into the queue\n  const fetchOrders = () => {\n    axios.get('http://localhost:5000/api/orders').then(({\n      data\n    }) => {\n      const cols = {\n        queue: {\n          id: 'queue',\n          title: 'Unscheduled',\n          jobs: []\n        },\n        machine1: {\n          id: 'machine1',\n          title: 'Machine 1',\n          jobs: []\n        },\n        machine2: {\n          id: 'machine2',\n          title: 'Machine 2',\n          jobs: []\n        }\n      };\n      // load real jobs\n      data.forEach(o => {\n        cols[o.machineId || 'queue'].jobs.push({\n          id: o.id,\n          title: o.title,\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date,\n          end: o.end_date\n        });\n      });\n      // sort the \"static\" queue by due date\n      const staticQueue = cols.queue.jobs.sort((a, b) => {\n        const da = parseDueDate(a.due_date),\n          db = parseDueDate(b.due_date);\n        return da && db ? da - db : 0;\n      });\n      // prepend placeholders so they persist\n      cols.queue.jobs = [...placeholders, ...staticQueue];\n      // sort machines by start time\n      ['machine1', 'machine2'].forEach(mid => {\n        cols[mid].jobs.sort((a, b) => {\n          const sa = new Date(a.start),\n            sb = new Date(b.start);\n          return sa && sb ? sa - sb : 0;\n        });\n      });\n      setColumns(cols);\n    }).catch(console.error);\n  };\n\n  // Initial load + re-fetch whenever placeholders change\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [placeholders]);\n\n  // — Drag & drop handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      reason\n    } = result;\n    if (reason !== 'DROP' || !destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n    // defer so DnD can animate\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const moved = cols[source.droppableId].jobs.splice(source.index, 1)[0];\n      cols[destination.droppableId].jobs.splice(destination.index, 0, moved);\n\n      // recalc start/end for that column\n      let prevEnd = null;\n      cols[destination.droppableId].jobs.forEach((job, i) => {\n        let start;\n        if (i === 0) {\n          start = new Date();\n          start.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n        } else {\n          prevEnd = cols[destination.droppableId].jobs[i - 1].end ? new Date(cols[destination.droppableId].jobs[i - 1].end) : prevEnd;\n          start = prevEnd ? new Date(prevEnd.getTime() + 30 * 60000) : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = job.stitchCount / 30000 * (job.quantity / 6) * 3600000;\n        const end = addWorkTime(start, runMs);\n        job.start = fmtDT(start);\n        job.end = fmtDT(end);\n        prevEnd = end;\n      });\n      setColumns(cols);\n\n      // persist moved job\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId: destination.droppableId,\n        start_date: moved.start,\n        end_date: moved.end\n      }).catch(console.error);\n\n      // cascade updates to the rest\n      cols[destination.droppableId].jobs.slice(destination.index + 1).forEach(job => {\n        axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n          start_date: job.start,\n          end_date: job.end\n        }).catch(console.error);\n      });\n    }, 0);\n  };\n\n  // — Add Placeholder\n  const addPlaceholder = () => {\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`;\n    const job = {\n      id,\n      title,\n      stitchCount: Number(ph.stitchCount) || 30000,\n      quantity: Number(ph.quantity) || 1,\n      due_date: ph.inHand,\n      // ← use In Hand as due_date\n      due_type: ph.dueType,\n      start: '',\n      end: ''\n    };\n    setPlaceholders(p => [job, ...p]);\n    setShowModal(false);\n    setPh({\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n\n  // — Remove Placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(p => p.filter(j => j.id !== id));\n  };\n\n  // — UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      textTransform: 'uppercase',\n      fontFamily: 'sans-serif',\n      fontSize: '14px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: \"Add Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: ph.company,\n            onChange: e => setPh({\n              ...ph,\n              company: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.quantity,\n            onChange: e => setPh({\n              ...ph,\n              quantity: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Stitch Count\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ph.stitchCount,\n            onChange: e => setPh({\n              ...ph,\n              stitchCount: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"In Hand Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ph.inHand,\n            onChange: e => setPh({\n              ...ph,\n              inHand: e.target.value\n            }),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Due Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ph.dueType,\n            onChange: e => setPh({\n              ...ph,\n              dueType: e.target.value\n            }),\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hard Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Soft Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addPlaceholder,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                textAlign: 'center',\n                fontSize: '16px'\n              },\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), col.jobs.map((job, idx) => {\n              const dueDt = parseDueDate(job.due_date),\n                endDt = job.end ? new Date(job.end) : null,\n                isLate = dueDt && endDt && endDt > dueDt,\n                isHard = job.due_type === 'Hard Date',\n                isPh = job.id.startsWith('ph-');\n              let bg = '#fff';\n              if (isLate) bg = '#ffe6e6';else if (isPh) bg = '#e8f5e9';else if (isHard) bg = '#f3e5f5';\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: idx,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    position: 'relative',\n                    userSelect: 'none',\n                    padding: '8px',\n                    margin: '0 0 8px 0',\n                    background: bg,\n                    border: isHard || isPh ? `2px solid ${isPh ? '#388e3c' : '#8e24aa'}` : '1px solid #ccc',\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    ...p.draggableProps.style\n                  },\n                  children: [isPh && /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => removePlaceholder(job.id),\n                    style: {\n                      position: 'absolute',\n                      top: 4,\n                      right: 4,\n                      cursor: 'pointer',\n                      color: '#b71c1c',\n                      fontWeight: 'bold'\n                    },\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 6\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 2,\n                      fontSize: '12px'\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#e0f7fa',\n                        borderRadius: 10\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 33\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 4px',\n                        background: '#ffe0b2',\n                        borderRadius: 10\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Syd9HI4BJAO9rIn1VRgMighJ8+U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","freeMs","getTime","fmtDT","pad","n","String","padStart","Y","getFullYear","M","getMonth","D","h","m","ampm","parseDueDate","due","parts","split","length","mo","da","map","x","parseInt","setFullYear","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","placeholders","setPlaceholders","showModal","setShowModal","ph","setPh","company","quantity","stitchCount","inHand","dueType","fetchOrders","get","then","data","cols","forEach","o","machineId","push","stitch_count","due_date","due_type","start","start_date","end","end_date","staticQueue","sort","a","b","db","mid","sa","sb","catch","console","error","iv","setInterval","clearInterval","onDragEnd","result","source","destination","draggableId","reason","droppableId","index","setTimeout","JSON","parse","stringify","moved","splice","prevEnd","job","i","runMs","put","addPlaceholder","now","Number","p","removePlaceholder","filter","j","style","padding","textTransform","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","value","onChange","e","target","width","type","gap","Object","values","col","prov","ref","innerRef","droppableProps","border","minHeight","idx","dueDt","endDt","isLate","isHard","isPh","startsWith","bg","draggableProps","dragHandleProps","userSelect","margin","boxShadow","cursor","color","fontWeight","flex","paddingRight","flexDirection","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// ————————————————————————————————————————————————————\n// Helpers\n// ————————————————————————————————————————————————————\nfunction isHoliday(dt) {\n  return dt instanceof Date\n    && !isNaN(dt)\n    && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date\n    && !isNaN(dt)\n    && !WEEKENDS.includes(dt.getDay())\n    && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  // Advance to the next valid workday/time if before hours or weekend/holiday\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HOUR ||\n    (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  // If after work end, roll to next day\n  if (\n    d.getHours() > WORK_END_HOUR ||\n    (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const freeMs = endOfDay - current;\n    if (freeMs <= 0) {\n      // jump to next business day\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    } else if (remaining <= freeMs) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= freeMs;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n// Format `dt` as \"YYYY-MM-DD h:mm AM/PM\"\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const Y = dt.getFullYear(), M = pad(dt.getMonth()+1), D = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes());\n  const ampm = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${Y}-${M}-${D} ${h}:${m} ${ampm}`;\n}\n// Parse strings like \"5/23\" or full ISO dates\nfunction parseDueDate(due) {\n  if (!due) return null;\n  const parts = due.split('/');\n  if (parts.length === 2) {\n    const [mo,da] = parts.map(x=>parseInt(x,10));\n    if (!isNaN(mo) && !isNaN(da)) {\n      const dt = new Date();\n      dt.setFullYear(dt.getFullYear(), mo-1, da, 0,0,0,0);\n      return dt;\n    }\n  }\n  const dt = new Date(due);\n  return isNaN(dt) ? null : dt;\n}\n\n// ————————————————————————————————————————————————————\n// Main Component\n// ————————————————————————————————————————————————————\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue', title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1', jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2', jobs:[] },\n  });\n  const [placeholders, setPlaceholders] = useState([]);\n  const [showModal, setShowModal]       = useState(false);\n  const [ph, setPh] = useState({\n    company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n\n  // Fetch from API + merge placeholders into the queue\n  const fetchOrders = () => {\n    axios.get('http://localhost:5000/api/orders')\n      .then(({ data }) => {\n        const cols = {\n          queue:    { id:'queue', title:'Unscheduled', jobs:[] },\n          machine1: { id:'machine1', title:'Machine 1', jobs:[] },\n          machine2: { id:'machine2', title:'Machine 2', jobs:[] },\n        };\n        // load real jobs\n        data.forEach(o => {\n          cols[o.machineId||'queue'].jobs.push({\n            id: o.id,\n            title: o.title,\n            stitchCount: o.stitch_count,\n            quantity:    o.quantity,\n            due_date:    o.due_date,\n            due_type:    o.due_type,\n            start:       o.start_date,\n            end:         o.end_date\n          });\n        });\n        // sort the \"static\" queue by due date\n        const staticQueue = cols.queue.jobs.sort((a,b)=>{\n          const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n          return da && db ? da-db : 0;\n        });\n        // prepend placeholders so they persist\n        cols.queue.jobs = [...placeholders, ...staticQueue];\n        // sort machines by start time\n        ['machine1','machine2'].forEach(mid => {\n          cols[mid].jobs.sort((a,b)=>{\n            const sa = new Date(a.start), sb = new Date(b.start);\n            return sa && sb ? sa-sb : 0;\n          });\n        });\n        setColumns(cols);\n      })\n      .catch(console.error);\n  };\n\n  // Initial load + re-fetch whenever placeholders change\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [placeholders]);\n\n  // — Drag & drop handler\n  const onDragEnd = result => {\n    const { source, destination, draggableId, reason } = result;\n    if (reason!=='DROP' || !destination) return;\n    if (source.droppableId===destination.droppableId && source.index===destination.index) return;\n\n    // defer so DnD can animate\n    setTimeout(() => {\n      const cols = JSON.parse(JSON.stringify(columns));\n      const moved = cols[source.droppableId].jobs.splice(source.index,1)[0];\n      cols[destination.droppableId].jobs.splice(destination.index,0,moved);\n\n      // recalc start/end for that column\n      let prevEnd = null;\n      cols[destination.droppableId].jobs.forEach((job,i) => {\n        let start;\n        if (i===0) {\n          start = new Date(); start.setHours(WORK_START_HOUR,WORK_START_MIN,0,0);\n        } else {\n          prevEnd = cols[destination.droppableId].jobs[i-1].end\n            ? new Date(cols[destination.droppableId].jobs[i-1].end)\n            : prevEnd;\n          start = prevEnd\n            ? new Date(prevEnd.getTime()+30*60000)\n            : new Date();\n        }\n        start = clampToWorkHours(start);\n        const runMs = (job.stitchCount/30000)*(job.quantity/6)*3600000;\n        const end = addWorkTime(start, runMs);\n        job.start = fmtDT(start);\n        job.end   = fmtDT(end);\n        prevEnd   = end;\n      });\n\n      setColumns(cols);\n\n      // persist moved job\n      axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n        machineId: destination.droppableId,\n        start_date: moved.start,\n        end_date:   moved.end\n      }).catch(console.error);\n\n      // cascade updates to the rest\n      cols[destination.droppableId].jobs\n        .slice(destination.index+1)\n        .forEach(job => {\n          axios.put(`http://localhost:5000/api/orders/${job.id}`, {\n            start_date: job.start,\n            end_date:   job.end\n          }).catch(console.error);\n        });\n    }, 0);\n  };\n\n  // — Add Placeholder\n  const addPlaceholder = () => {\n    const id = `ph-${Date.now()}`;\n    const title = `${ph.company} - ${ph.quantity} - ${ph.stitchCount} - ${ph.inHand} - ${ph.dueType}`;\n    const job = {\n      id,\n      title,\n      stitchCount: Number(ph.stitchCount)||30000,\n      quantity:    Number(ph.quantity)   ||1,\n      due_date:    ph.inHand,       // ← use In Hand as due_date\n      due_type:    ph.dueType,\n      start:       '',\n      end:         ''\n    };\n    setPlaceholders(p => [job, ...p]);\n    setShowModal(false);\n    setPh({ company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date' });\n  };\n\n  // — Remove Placeholder\n  const removePlaceholder = id => {\n    setPlaceholders(p => p.filter(j => j.id !== id));\n  };\n\n  // — UI\n  return (\n    <div style={{\n      padding:16,\n      textTransform:'uppercase',\n      fontFamily:'sans-serif',\n      fontSize:'14px'\n    }}>\n      <button onClick={() => setShowModal(true)} style={{ marginRight:8 }}>\n        + Add Placeholder\n      </button>\n      <button onClick={fetchOrders}>\n        Refresh Data\n      </button>\n\n      {showModal && (\n        <div style={{\n          position:'fixed', top:0,left:0,right:0,bottom:0,\n          background:'rgba(0,0,0,0.3)',\n          display:'flex', alignItems:'center', justifyContent:'center',\n          zIndex:1000\n        }}>\n          <div style={{\n            background:'#fff',\n            padding:20,\n            borderRadius:4,\n            minWidth:300\n          }}>\n            <h3 style={{ marginTop:0, textAlign:'center' }}>\n              Add Placeholder\n            </h3>\n            <label>Company Name<br/>\n              <input\n                value={ph.company}\n                onChange={e => setPh({...ph,company:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Quantity<br/>\n              <input\n                type=\"number\"\n                value={ph.quantity}\n                onChange={e => setPh({...ph,quantity:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Stitch Count<br/>\n              <input\n                type=\"number\"\n                value={ph.stitchCount}\n                onChange={e => setPh({...ph,stitchCount:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>In Hand Date<br/>\n              <input\n                type=\"date\"\n                value={ph.inHand}\n                onChange={e => setPh({...ph,inHand:e.target.value})}\n                style={{ width:'100%' }}\n              />\n            </label><br/><br/>\n            <label>Due Type<br/>\n              <select\n                value={ph.dueType}\n                onChange={e => setPh({...ph,dueType:e.target.value})}\n                style={{ width:'100%' }}\n              >\n                <option>Hard Date</option>\n                <option>Soft Date</option>\n              </select>\n            </label><br/><br/>\n            <div style={{ textAlign:'right' }}>\n              <button onClick={() => setShowModal(false)} style={{ marginRight:8 }}>\n                Cancel\n              </button>\n              <button onClick={addPlaceholder}>\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display:'flex', gap:16, marginTop:16 }}>\n          {Object.values(columns).map(col => (\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov => (\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4 style={{ textAlign:'center', fontSize:'16px' }}>\n                    {col.title}\n                  </h4>\n                  {col.jobs.map((job, idx) => {\n                    const dueDt = parseDueDate(job.due_date),\n                          endDt = job.end ? new Date(job.end) : null,\n                          isLate = dueDt && endDt && endDt > dueDt,\n                          isHard = job.due_type === 'Hard Date',\n                          isPh   = job.id.startsWith('ph-');\n                    let bg='#fff';\n                    if (isLate)    bg='#ffe6e6';\n                    else if (isPh) bg='#e8f5e9';\n                    else if (isHard) bg='#f3e5f5';\n\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p => (\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              position:'relative',\n                              userSelect:'none',\n                              padding:'8px',\n                              margin:'0 0 8px 0',\n                              background:bg,\n                              border: isHard||isPh\n                                ? `2px solid ${isPh?'#388e3c':'#8e24aa'}`\n                                : '1px solid #ccc',\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              fontSize:'14px',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            {isPh && (\n                              <span\n                                onClick={() => removePlaceholder(job.id)}\n                                style={{\n                                  position:'absolute',\n                                  top:4, right:4,\n                                  cursor:'pointer',\n                                  color:'#b71c1c',\n                                  fontWeight:'bold'\n                                }}\n                              >×</span>\n                            )}\n                            <div style={{ flex:1, paddingRight:6 }}>\n                              {job.title}\n                            </div>\n                            <div style={{\n                              display:'flex',\n                              flexDirection:'column',\n                              alignItems:'flex-end',\n                              gap:2,\n                              fontSize:'12px'\n                            }}>\n                              {job.start && (\n                                <div style={{\n                                  padding:'2px 4px',\n                                  background:'#e0f7fa',\n                                  borderRadius:10\n                                }}>{job.start}</div>\n                              )}\n                              {job.end && (\n                                <div style={{\n                                  padding:'2px 4px',\n                                  background:'#ffe0b2',\n                                  borderRadius:10\n                                }}>{job.end}</div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}