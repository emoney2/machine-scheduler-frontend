{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORK_START_HOUR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HOUR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HOUR || d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HOUR || d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate() + 1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth() + 1)}-${pad(dt.getDate())}` + ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n\n  // fetchOrders: initial load builds from scratch; subsequent merges\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders').then(res => {\n      setColumns(prev => {\n        const allEmpty = ['queue', 'machine1', 'machine2'].every(id => prev[id].jobs.length === 0);\n        // If initial load, build entirely\n        if (allEmpty) {\n          const cols = {\n            queue: {\n              id: 'queue',\n              title: 'Unscheduled',\n              jobs: []\n            },\n            machine1: {\n              id: 'machine1',\n              title: 'Machine 1',\n              jobs: []\n            },\n            machine2: {\n              id: 'machine2',\n              title: 'Machine 2',\n              jobs: []\n            }\n          };\n          res.data.forEach(o => {\n            const col = cols[o.machineId] || cols.queue;\n            col.jobs.push({\n              id: o.id.toString(),\n              title: o.title,\n              start: o.start_date || '',\n              end: o.end_date || '',\n              stitchCount: o.stitch_count || 30000,\n              quantity: o.quantity || 1,\n              due_date: o.due_date || ''\n            });\n          });\n          // sort\n          cols.queue.jobs.sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n          ['machine1', 'machine2'].forEach(id => cols[id].jobs.sort((a, b) => new Date(a.start) - new Date(b.start)));\n          return cols;\n        }\n        // Subsequent: merge only details\n        const apiMap = Object.fromEntries(res.data.map(o => [o.id.toString(), o]));\n        const cols = {\n          ...prev\n        };\n        // merge queue\n        cols.queue.jobs = prev.queue.jobs.map(job => {\n          var _o$stitch_count, _o$quantity, _o$due_date;\n          const o = apiMap[job.id];\n          if (!o) return job;\n          return {\n            ...job,\n            title: o.title,\n            stitchCount: (_o$stitch_count = o.stitch_count) !== null && _o$stitch_count !== void 0 ? _o$stitch_count : job.stitchCount,\n            quantity: (_o$quantity = o.quantity) !== null && _o$quantity !== void 0 ? _o$quantity : job.quantity,\n            due_date: (_o$due_date = o.due_date) !== null && _o$due_date !== void 0 ? _o$due_date : job.due_date\n          };\n        }).sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n        // merge machines, keep order & times\n        ['machine1', 'machine2'].forEach(id => {\n          cols[id].jobs = prev[id].jobs.map(job => {\n            var _o$stitch_count2, _o$quantity2, _o$due_date2;\n            const o = apiMap[job.id];\n            if (!o) return job;\n            return {\n              ...job,\n              title: o.title,\n              stitchCount: (_o$stitch_count2 = o.stitch_count) !== null && _o$stitch_count2 !== void 0 ? _o$stitch_count2 : job.stitchCount,\n              quantity: (_o$quantity2 = o.quantity) !== null && _o$quantity2 !== void 0 ? _o$quantity2 : job.quantity,\n              due_date: (_o$due_date2 = o.due_date) !== null && _o$due_date2 !== void 0 ? _o$due_date2 : job.due_date\n            };\n          });\n        });\n        return cols;\n      });\n    }).catch(console.error);\n  }, []);\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n\n  // Drag-and-drop handler (as before)\n  const onDragEnd = result => {\n    /* your existing onDragEnd logic here */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrders,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: col.id,\n          children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: prov.innerRef,\n            ...prov.droppableProps,\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 4,\n              width: 260,\n              minHeight: 400,\n              padding: 12,\n              background: '#fafafa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: col.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), col.jobs.map((job, i) => {\n              const due = new Date(job.due_date);\n              const end = new Date(job.end);\n              const isLate = job.due_date && job.end && !isNaN(due) && !isNaN(end) && end > due;\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: job.id,\n                index: i,\n                children: p => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: p.innerRef,\n                  ...p.draggableProps,\n                  ...p.dragHandleProps,\n                  style: {\n                    userSelect: 'none',\n                    padding: '10px',\n                    margin: '0 0 10px 0',\n                    background: isLate ? '#ffe6e6' : '#fff',\n                    border: isLate ? '1px solid #f00' : 'none',\n                    borderRadius: 4,\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    ...p.draggableProps.style\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1,\n                      paddingRight: 8\n                    },\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-end',\n                      gap: 4\n                    },\n                    children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#e0f7fa',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.start\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 45\n                    }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: '#ffe0b2',\n                        borderRadius: 12,\n                        fontSize: '0.75em'\n                      },\n                      children: job.end\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 27\n                }, this)\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 23\n              }, this);\n            }), prov.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"llFL86/SkY7acTo9h2CkxeWng0U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","WORK_START_HOUR","WORK_START_MIN","WORK_END_HOUR","WORK_END_MIN","WEEKENDS","HOLIDAYS","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","startDate","ms","remaining","current","endOfDay","available","getTime","fmtDT","pad","n","String","padStart","getFullYear","getMonth","App","_s","columns","setColumns","queue","id","title","jobs","machine1","machine2","fetchOrders","get","then","res","prev","allEmpty","every","length","cols","data","forEach","o","col","machineId","push","toString","start","start_date","end","end_date","stitchCount","stitch_count","quantity","due_date","sort","a","b","apiMap","Object","fromEntries","map","job","_o$stitch_count","_o$quantity","_o$due_date","_o$stitch_count2","_o$quantity2","_o$due_date2","catch","console","error","iv","setInterval","clearInterval","onDragEnd","result","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginTop","values","droppableId","prov","ref","innerRef","droppableProps","border","borderRadius","width","minHeight","background","i","due","isLate","draggableId","index","p","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","flexDirection","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// Business hours & holidays\nconst WORK_START_HOUR = 8, WORK_START_MIN = 30;\nconst WORK_END_HOUR   = 16, WORK_END_MIN   = 30;\nconst WEEKENDS = [0, 6];\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// Helpers\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) ||\n         d.getHours() < WORK_START_HOUR ||\n         (d.getHours() === WORK_START_HOUR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HOUR ||\n    (d.getHours() === WORK_END_HOUR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate()+1);\n    d.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(startDate, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(startDate);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HOUR, WORK_END_MIN, 0, 0);\n    const available = endOfDay - current;\n    if (available <= 0) {\n      current.setDate(current.getDate()+1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n      continue;\n    }\n    if (remaining <= available) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= available;\n      current = new Date(endOfDay);\n      current.setDate(current.getDate()+1);\n      current.setHours(WORK_START_HOUR, WORK_START_MIN, 0, 0);\n      current = clampToWorkHours(current);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  return `${dt.getFullYear()}-${pad(dt.getMonth()+1)}-${pad(dt.getDate())}` +\n         ` ${pad(dt.getHours())}:${pad(dt.getMinutes())}`;\n}\n\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',    jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',    jobs:[] },\n  });\n\n  // fetchOrders: initial load builds from scratch; subsequent merges\n  const fetchOrders = useCallback(() => {\n    axios.get('http://localhost:5000/api/orders')\n      .then(res => {\n        setColumns(prev => {\n          const allEmpty = ['queue','machine1','machine2']\n            .every(id => prev[id].jobs.length === 0);\n          // If initial load, build entirely\n          if (allEmpty) {\n            const cols = {\n              queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n              machine1: { id:'machine1', title:'Machine 1',    jobs:[] },\n              machine2: { id:'machine2', title:'Machine 2',    jobs:[] },\n            };\n            res.data.forEach(o => {\n              const col = cols[o.machineId] || cols.queue;\n              col.jobs.push({\n                id:          o.id.toString(),\n                title:       o.title,\n                start:       o.start_date || '',\n                end:         o.end_date   || '',\n                stitchCount: o.stitch_count || 30000,\n                quantity:    o.quantity      || 1,\n                due_date:    o.due_date      || ''\n              });\n            });\n            // sort\n            cols.queue.jobs.sort((a,b)=>(new Date(a.due_date) - new Date(b.due_date)));\n            ['machine1','machine2'].forEach(id =>\n              cols[id].jobs.sort((a,b)=>(new Date(a.start) - new Date(b.start)))\n            );\n            return cols;\n          }\n          // Subsequent: merge only details\n          const apiMap = Object.fromEntries(\n            res.data.map(o => [o.id.toString(), o])\n          );\n          const cols = { ...prev };\n          // merge queue\n          cols.queue.jobs = prev.queue.jobs\n            .map(job => {\n              const o = apiMap[job.id];\n              if (!o) return job;\n              return { ...job,\n                title:       o.title,\n                stitchCount: o.stitch_count  ?? job.stitchCount,\n                quantity:    o.quantity      ?? job.quantity,\n                due_date:    o.due_date      ?? job.due_date\n              };\n            })\n            .sort((a,b)=>(new Date(a.due_date) - new Date(b.due_date)));\n          // merge machines, keep order & times\n          ['machine1','machine2'].forEach(id => {\n            cols[id].jobs = prev[id].jobs.map(job => {\n              const o = apiMap[job.id];\n              if (!o) return job;\n              return { ...job,\n                title:       o.title,\n                stitchCount: o.stitch_count  ?? job.stitchCount,\n                quantity:    o.quantity      ?? job.quantity,\n                due_date:    o.due_date      ?? job.due_date\n              };\n            });\n          });\n          return cols;\n        });\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    fetchOrders();\n    const iv = setInterval(fetchOrders, 60000);\n    return () => clearInterval(iv);\n  }, [fetchOrders]);\n\n  // Drag-and-drop handler (as before)\n  const onDragEnd = result => {\n    /* your existing onDragEnd logic here */\n  };\n\n  return (\n    <div style={{ padding:16 }}>\n      <button onClick={fetchOrders}>Refresh Data</button>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display:'flex', gap:16, marginTop:16 }}>\n          {Object.values(columns).map(col => (\n            <Droppable droppableId={col.id} key={col.id}>\n              {prov => (\n                <div\n                  ref={prov.innerRef}\n                  {...prov.droppableProps}\n                  style={{\n                    border:'1px solid #ccc',\n                    borderRadius:4,\n                    width:260,\n                    minHeight:400,\n                    padding:12,\n                    background:'#fafafa'\n                  }}\n                >\n                  <h4>{col.title}</h4>\n                  {col.jobs.map((job,i) => {\n                    const due = new Date(job.due_date);\n                    const end = new Date(job.end);\n                    const isLate = job.due_date && job.end && !isNaN(due) && !isNaN(end) && end > due;\n                    return (\n                      <Draggable key={job.id} draggableId={job.id} index={i}>\n                        {p => (\n                          <div\n                            ref={p.innerRef}\n                            {...p.draggableProps}\n                            {...p.dragHandleProps}\n                            style={{\n                              userSelect:'none',\n                              padding:'10px',\n                              margin:'0 0 10px 0',\n                              background: isLate ? '#ffe6e6' : '#fff',\n                              border: isLate ? '1px solid #f00' : 'none',\n                              borderRadius:4,\n                              boxShadow:'0 1px 3px rgba(0,0,0,0.2)',\n                              display:'flex',\n                              justifyContent:'space-between',\n                              alignItems:'center',\n                              ...p.draggableProps.style\n                            }}\n                          >\n                            <div style={{ flex:1, paddingRight:8 }}>\n                              {job.title}\n                            </div>\n                            <div style={{display:'flex',flexDirection:'column',alignItems:'flex-end',gap:4}}>\n                              {job.start && <div style={{padding:'2px 6px',background:'#e0f7fa',borderRadius:12,fontSize:'0.75em'}}>{job.start}</div>}\n                              {job.end &&   <div style={{padding:'2px 6px',background:'#ffe0b2',borderRadius:12,fontSize:'0.75em'}}>{job.end}</div>}\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {prov.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}