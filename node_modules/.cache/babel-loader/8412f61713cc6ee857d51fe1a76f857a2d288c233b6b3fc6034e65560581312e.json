{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// SECTION 1: Imports & CONFIGURATION\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// API & Work Hours\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// SECTION 2: Color Constants\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\n\n// SECTION 3: Helper Functions\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const month = pad(dt.getMonth() + 1);\n  const day = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0],\n      da = +parts[1],\n      yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start),\n    removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth() + 1).padStart(2, '0');\n  const da = String(dt.getDate()).padStart(2, '0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date),\n      db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// SECTION 4: Scheduling + Late Flag\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start ? clampToWorkHours(new Date(job.embroidery_start)) : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // Round quantity up to multiple of 6\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    // Compute run time in ms\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n\n    // Determine late cutoff: 6 workdays before due date at end of day\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // Attach scheduling info\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = fmtDT(start);\n    job.end = fmtDT(end);\n    job.delivery = fmtMMDD(addWorkDays(end, 6));\n    job.isLate = end > cutoff;\n    prevEnd = end;\n    return job;\n  });\n}\n\n// SECTION 6: Main App Component\nexport default function App() {\n  _s();\n  // State\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState(() => JSON.parse(localStorage.getItem('placeholders') || '[]'));\n  const [links, setLinks] = useState(loadLinks);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // Persist placeholders & links to localStorage\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  useEffect(() => {\n    saveLinks(links);\n  }, [links]);\n\n  // SECTION 7: Fetch & Merge\n  const fetchAll = useCallback(async () => {\n    const {\n      data\n    } = await axios.get(`${API_ROOT}/orders`);\n    const real = {\n      queue: [],\n      machine1: [],\n      machine2: []\n    };\n    data.forEach(o => {\n      if (!o.title) return;\n      const col = o.machineId === 'machine1' || o.machineId === 'machine2' ? o.machineId : 'queue';\n      real[col].push({\n        ...o,\n        id: o.id.toString(),\n        stitchCount: o.stitch_count,\n        quantity: o.quantity,\n        company: o.company,\n        design: o.design,\n        due_date: o.due_date,\n        due_type: o.due_type,\n        start: o.start_date || '',\n        end: o.end_date || '',\n        delivery: o.delivery || '',\n        position: o.position != null ? o.position : null,\n        embroidery_start: o.embroidery_start || '',\n        linkedTo: links[o.id] || null\n      });\n    });\n    ['machine1', 'machine2'].forEach(c => {\n      real[c].sort((a, b) => (a.position || Infinity) - (b.position || Infinity));\n    });\n    const merged = {};\n    ['queue', 'machine1', 'machine2'].forEach(c => {\n      merged[c] = [...placeholders.filter(p => p.machineId === c), ...real[c]];\n    });\n    setColumns({\n      queue: {\n        ...columns.queue,\n        jobs: sortQueue(merged.queue)\n      },\n      machine1: {\n        ...columns.machine1,\n        jobs: scheduleMachineJobs(merged.machine1)\n      },\n      machine2: {\n        ...columns.machine2,\n        jobs: scheduleMachineJobs(merged.machine2)\n      }\n    });\n  }, [links]);\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, [fetchAll]);\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // SECTION 8: Placeholder CRUD\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      // Edit existing placeholder\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      // Add new placeholder\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // SECTION 9: Link Toggle\n  const toggleLink = (colId, idx) => {\n    setColumns(c => {\n      const jobs = [...c[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return c;\n\n      // Update persisted links\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // Toggle the in-memory link\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n      return {\n        ...c,\n        [colId]: {\n          ...c[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // SECTION 10: Drag & Drop Handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const sc = source.droppableId;\n    const dc = destination.droppableId;\n    // No-op if dropped back in the same spot\n    if (sc === dc && source.index === destination.index) return;\n\n    // Grab the entire chain of linked jobs\n    const chain = getChain(columns[sc].jobs, draggableId);\n\n    // Remove chain items from source column\n    const srcJobs = columns[sc].jobs.filter(j => !chain.includes(j.id));\n\n    // Insert chain items into destination column at the drop index\n    const destJobs = [...columns[dc].jobs];\n    destJobs.splice(destination.index, 0, ...columns[sc].jobs.filter(j => chain.includes(j.id)));\n\n    // Persist placeholder machineId if placeholders are moved\n    setPlaceholders(ps => ps.map(p => chain.includes(p.id) ? {\n      ...p,\n      machineId: dc\n    } : p));\n    const updated = {\n      ...columns,\n      [sc]: {\n        ...columns[sc],\n        jobs: srcJobs\n      },\n      [dc]: {\n        ...columns[dc],\n        jobs: destJobs\n      }\n    };\n\n    // Update each moved job and persist to backend\n    chain.forEach((id, i) => {\n      const job = updated[dc].jobs.find(j => j.id === id);\n      if (id.startsWith('ph-')) {\n        // Placeholder: reset times\n        job._rawStart = job._rawEnd = null;\n        job.start = job.end = job.delivery = '';\n        job.isLate = false;\n        job.machineId = dc;\n      } else {\n        // Real order: update fields\n        if (dc === 'queue') {\n          job._rawStart = job._rawEnd = null;\n          job.start = job.end = job.delivery = '';\n          job.isLate = false;\n          job.embroidery_start = '';\n        }\n        job.machineId = dc === 'queue' ? null : dc;\n        job.position = destination.index + i;\n        axios.put(`${API_ROOT}/orders/${id}`, {\n          machineId: job.machineId,\n          start_date: job.start || '',\n          end_date: job.end || '',\n          delivery: job.delivery || '',\n          position: job.position,\n          embroidery_start: job.embroidery_start || ''\n        }).catch(console.error);\n      }\n    });\n\n    // Re-run scheduling & sorting\n    updated.machine1.jobs = scheduleMachineJobs(updated.machine1.jobs);\n    updated.machine2.jobs = scheduleMachineJobs(updated.machine2.jobs);\n    updated.queue.jobs = sortQueue(updated.queue.jobs);\n    setColumns(updated);\n  };\n  // SECTION 11: Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 14\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      children: [\"Sync from Sheet \", syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: \"Add/Edit Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId];\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: colId === 'queue' ? 260 : 300,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0'\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this), col.jobs.map((job, idx) => {\n                /* job rendering as before */\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: job.id,\n                  index: idx,\n                  children: p => /* ...card JSX... */null\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 30\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n} // end App()\n_s(App, \"e89TIGiALeR1R/aZeSkegCZ3yE8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","jobs","prevEnd","map","job","idx","embroidery_start","qty","quantity","Math","ceil","runMs","stitchCount","end","eedDay","cutoff","_rawStart","_rawEnd","delivery","isLate","App","_s","columns","setColumns","queue","id","title","machine1","machine2","placeholders","setPlaceholders","JSON","parse","localStorage","getItem","links","setLinks","loadLinks","showModal","setShowModal","ph","setPh","company","inHand","dueType","syncStatus","setSyncStatus","setItem","stringify","saveLinks","fetchAll","data","get","real","forEach","o","col","machineId","push","toString","stitch_count","design","due_type","start_date","end_date","position","linkedTo","c","Infinity","merged","filter","p","catch","console","error","handleSync","setTimeout","submitPlaceholder","now","ps","j","removePlaceholder","editPlaceholder","toggleLink","colId","below","l","onDragEnd","result","source","destination","draggableId","sc","droppableId","dc","index","chain","getChain","srcJobs","destJobs","splice","updated","i","find","startsWith","put","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","gap","provided","ref","innerRef","droppableProps","border","width","minHeight","margin","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// SECTION 1: Imports & CONFIGURATION\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// API & Work Hours\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// SECTION 2: Color Constants\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\n// SECTION 3: Helper Functions\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\n\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\n\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\n\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\n\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\n\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo-1, da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\n\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\n\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\n\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\n\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// SECTION 4: Scheduling + Late Flag\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start\n        ? clampToWorkHours(new Date(job.embroidery_start))\n        : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // Round quantity up to multiple of 6\n    const qty = job.quantity % 6 === 0 \n      ? job.quantity \n      : Math.ceil(job.quantity / 6) * 6;\n    // Compute run time in ms\n    const runMs = (job.stitchCount / 30000) * (qty / 6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    // Determine late cutoff: 6 workdays before due date at end of day\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    // Attach scheduling info\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// SECTION 6: Main App Component\nexport default function App() {\n  // State\n  const [columns, setColumns] = useState({\n    queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n    machine1: { id: 'machine1', title: 'Machine 1',   jobs: [] },\n    machine2: { id: 'machine2', title: 'Machine 2',   jobs: [] },\n  });\n  const [placeholders, setPlaceholders] = useState(\n    () => JSON.parse(localStorage.getItem('placeholders') || '[]')\n  );\n  const [links, setLinks]           = useState(loadLinks);\n  const [showModal, setShowModal]   = useState(false);\n  const [ph, setPh]                 = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date',\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // Persist placeholders & links to localStorage\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  useEffect(() => {\n    saveLinks(links);\n  }, [links]);\n\n  // SECTION 7: Fetch & Merge\n  const fetchAll = useCallback(async () => {\n    const { data } = await axios.get(`${API_ROOT}/orders`);\n    const real = { queue: [], machine1: [], machine2: [] };\n\n    data.forEach(o => {\n      if (!o.title) return;\n      const col = (o.machineId === 'machine1' || o.machineId === 'machine2')\n                    ? o.machineId\n                    : 'queue';\n      real[col].push({\n        ...o,\n        id:               o.id.toString(),\n        stitchCount:      o.stitch_count,\n        quantity:         o.quantity,\n        company:          o.company,\n        design:           o.design,\n        due_date:         o.due_date,\n        due_type:         o.due_type,\n        start:            o.start_date   || '',\n        end:              o.end_date     || '',\n        delivery:         o.delivery     || '',\n        position:         o.position != null ? o.position : null,\n        embroidery_start: o.embroidery_start || '',\n        linkedTo:         links[o.id] || null\n      });\n    });\n\n    ['machine1','machine2'].forEach(c => {\n      real[c].sort((a, b) => (a.position || Infinity) - (b.position || Infinity));\n    });\n\n    const merged = {};\n    ['queue','machine1','machine2'].forEach(c => {\n      merged[c] = [\n        ...placeholders.filter(p => p.machineId === c),\n        ...real[c]\n      ];\n    });\n\n    setColumns({\n      queue:    { ...columns.queue,    jobs: sortQueue(merged.queue) },\n      machine1: { ...columns.machine1, jobs: scheduleMachineJobs(merged.machine1) },\n      machine2: { ...columns.machine2, jobs: scheduleMachineJobs(merged.machine2) },\n    });\n  }, [links]);\n\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, [fetchAll]);\n\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // SECTION 8: Placeholder CRUD\n  const submitPlaceholder = () => {\n    const job = {\n      id:         ph.id || `ph-${Date.now()}`,\n      company:    ph.company,\n      quantity:   +ph.quantity || 1,\n      stitchCount:+ph.stitchCount || 30000,\n      due_date:   ph.inHand,\n      due_type:   ph.dueType,\n      machineId:  'queue',\n      position:   null\n    };\n\n    if (ph.id) {\n      // Edit existing placeholder\n      setPlaceholders(ps =>\n        ps.map(p => (p.id === ph.id ? job : p))\n      );\n      setColumns(c => ({\n        ...c,\n        queue:    { ...c.queue,    jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j) },\n        machine1: { ...c.machine1, jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j) },\n        machine2: { ...c.machine2, jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j) },\n      }));\n    } else {\n      // Add new placeholder\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: { ...c.queue, jobs: [job, ...c.queue.jobs] }\n      }));\n    }\n\n    setShowModal(false);\n    setPh({ id: null, company: '', quantity: '', stitchCount: '', inHand: '', dueType: 'Hard Date' });\n  };\n\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue:    { ...c.queue,    jobs: c.queue.jobs.filter(j => j.id !== id) },\n      machine1: { ...c.machine1, jobs: c.machine1.jobs.filter(j => j.id !== id) },\n      machine2: { ...c.machine2, jobs: c.machine2.jobs.filter(j => j.id !== id) },\n    }));\n  };\n\n  const editPlaceholder = job => {\n    setPh({\n      id:            job.id,\n      company:       job.company,\n      quantity:      job.quantity,\n      stitchCount:   job.stitchCount,\n      inHand:        job.due_date,\n      dueType:       job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // SECTION 9: Link Toggle\n  const toggleLink = (colId, idx) => {\n    setColumns(c => {\n      const jobs = [...c[colId].jobs];\n      const job  = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return c;\n\n      // Update persisted links\n      setLinks(l => {\n        const m = { ...l };\n        if (m[job.id] === below.id) delete m[job.id];\n        else m[job.id] = below.id;\n        return m;\n      });\n\n      // Toggle the in-memory link\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      return {\n        ...c,\n        [colId]: { ...c[colId], jobs }\n      };\n    });\n  };\n\n  // SECTION 10: Drag & Drop Handler\n  const onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (!destination) return;\n\n    const sc = source.droppableId;\n    const dc = destination.droppableId;\n    // No-op if dropped back in the same spot\n    if (sc === dc && source.index === destination.index) return;\n\n    // Grab the entire chain of linked jobs\n    const chain = getChain(columns[sc].jobs, draggableId);\n\n    // Remove chain items from source column\n    const srcJobs = columns[sc].jobs.filter(j => !chain.includes(j.id));\n\n    // Insert chain items into destination column at the drop index\n    const destJobs = [...columns[dc].jobs];\n    destJobs.splice(\n      destination.index,\n      0,\n      ...columns[sc].jobs.filter(j => chain.includes(j.id))\n    );\n\n    // Persist placeholder machineId if placeholders are moved\n    setPlaceholders(ps =>\n      ps.map(p => chain.includes(p.id) ? { ...p, machineId: dc } : p)\n    );\n\n    const updated = {\n      ...columns,\n      [sc]: { ...columns[sc], jobs: srcJobs },\n      [dc]: { ...columns[dc], jobs: destJobs }\n    };\n\n    // Update each moved job and persist to backend\n    chain.forEach((id, i) => {\n      const job = updated[dc].jobs.find(j => j.id === id);\n      if (id.startsWith('ph-')) {\n        // Placeholder: reset times\n        job._rawStart = job._rawEnd = null;\n        job.start = job.end = job.delivery = '';\n        job.isLate = false;\n        job.machineId = dc;\n      } else {\n        // Real order: update fields\n        if (dc === 'queue') {\n          job._rawStart = job._rawEnd = null;\n          job.start = job.end = job.delivery = '';\n          job.isLate = false;\n          job.embroidery_start = '';\n        }\n        job.machineId = dc === 'queue' ? null : dc;\n        job.position = destination.index + i;\n\n        axios.put(`${API_ROOT}/orders/${id}`, {\n          machineId:        job.machineId,\n          start_date:       job.start || '',\n          end_date:         job.end   || '',\n          delivery:         job.delivery || '',\n          position:         job.position,\n          embroidery_start: job.embroidery_start || ''\n        }).catch(console.error);\n      }\n    });\n\n    // Re-run scheduling & sorting\n    updated.machine1.jobs = scheduleMachineJobs(updated.machine1.jobs);\n    updated.machine2.jobs = scheduleMachineJobs(updated.machine2.jobs);\n    updated.queue.jobs    = sortQueue(updated.queue.jobs);\n\n    setColumns(updated);\n  };\n  // SECTION 11: Render\n  return (\n    <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 14 }}>\n      <button onClick={() => setShowModal(true)} style={{ marginRight: 8 }}>\n        + Add Placeholder\n      </button>\n      <button onClick={handleSync}>\n        Sync from Sheet {syncStatus === 'updated' && <span style={{ color: 'green' }}>✓ Updated</span>}\n      </button>\n\n      {showModal && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0, left: 0, right: 0, bottom: 0,\n            background: 'rgba(0,0,0,0.3)',\n            display: 'flex', alignItems: 'center', justifyContent: 'center',\n            zIndex: 1000\n          }}\n        >\n          <div style={{ background: '#fff', padding: 20, borderRadius: 4, minWidth: 300 }}>\n            <h3 style={{ marginTop: 0, textAlign: 'center' }}>Add/Edit Placeholder</h3>\n            {/* modal form fields */}\n          </div>\n        </div>\n      )}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n          {['queue', 'machine1', 'machine2'].map(colId => {\n            const col = columns[colId];\n            return (\n              <Droppable key={colId} droppableId={colId}>\n                {provided => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      border: '1px solid #ccc',\n                      borderRadius: 4,\n                      width: colId === 'queue' ? 260 : 300,\n                      minHeight: 400,\n                      padding: 12,\n                      background: '#fafafa'\n                    }}\n                  >\n                    <h4 style={{ textAlign: 'center', margin: '8px 0' }}>{col.title}</h4>\n                    {col.jobs.map((job, idx) => {\n                      /* job rendering as before */\n                      return <Draggable key={job.id} draggableId={job.id} index={idx}>\n                        {p => /* ...card JSX... */ null}\n                      </Draggable>;\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            );\n          })}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n} // end App()\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}