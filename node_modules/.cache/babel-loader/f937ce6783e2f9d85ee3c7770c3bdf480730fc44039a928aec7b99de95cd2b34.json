{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({});\n\n  // Fetch orders and rebuild columns (with polling every minute)\n  useEffect(() => {\n    const fetchOrders = () => {\n      axios.get('http://localhost:5000/api/orders').then(res => {\n        const data = res.data;\n        const cols = {\n          queue: {\n            id: 'queue',\n            title: 'Unscheduled',\n            jobs: []\n          },\n          machine1: {\n            id: 'machine1',\n            title: 'Machine 1',\n            jobs: []\n          },\n          machine2: {\n            id: 'machine2',\n            title: 'Machine 2',\n            jobs: []\n          }\n        };\n        data.forEach(order => {\n          const colId = order.machineId || 'queue';\n          if (!cols[colId]) {\n            cols[colId] = {\n              id: colId,\n              title: colId,\n              jobs: []\n            };\n          }\n          cols[colId].jobs.push({\n            id: order.id.toString(),\n            title: order.title,\n            start: order.start_date,\n            end: order.end_date\n          });\n        });\n        setColumns(cols);\n      });\n    };\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Handle drag-and-drop between columns\n  const onDragEnd = ({\n    source,\n    destination,\n    draggableId\n  }) => {\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n    const sourceCol = columns[source.droppableId];\n    const destCol = columns[destination.droppableId];\n    const sourceJobs = Array.from(sourceCol.jobs);\n    const [moved] = sourceJobs.splice(source.index, 1);\n    const destJobs = Array.from(destCol.jobs);\n    destJobs.splice(destination.index, 0, moved);\n    const updated = {\n      ...columns,\n      [sourceCol.id]: {\n        ...sourceCol,\n        jobs: sourceJobs\n      },\n      [destCol.id]: {\n        ...destCol,\n        jobs: destJobs\n      }\n    };\n    setColumns(updated);\n\n    // Persist the new machine assignment\n    axios.put(`http://localhost:5000/api/orders/${draggableId}`, {\n      machineId: destCol.id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 16,\n        padding: 16\n      },\n      children: Object.values(columns).map(col => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: col.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          style: {\n            border: '1px solid #ccc',\n            borderRadius: 4,\n            width: 240,\n            minHeight: 400,\n            padding: 12,\n            background: '#fafafa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: col.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), col.jobs.map((job, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: job.id,\n            index: idx,\n            children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: prov.innerRef,\n              ...prov.draggableProps,\n              ...prov.dragHandleProps,\n              style: {\n                userSelect: 'none',\n                padding: '10px',\n                margin: '0 0 10px 0',\n                background: '#fff',\n                borderRadius: 4,\n                boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                ...prov.draggableProps.style\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1,\n                  paddingRight: 8\n                },\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: 4\n                },\n                children: [job.start && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '4px 8px',\n                    background: '#e0f7fa',\n                    borderRadius: 12,\n                    fontSize: '0.75em'\n                  },\n                  children: job.start\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 29\n                }, this), job.end && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '4px 8px',\n                    background: '#ffe0b2',\n                    borderRadius: 12,\n                    fontSize: '0.75em'\n                  },\n                  children: job.end\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }, this)\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, col.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9hsVabetJn4SdlqWOd41pD0I99g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","App","_s","columns","setColumns","fetchOrders","get","then","res","data","cols","queue","id","title","jobs","machine1","machine2","forEach","order","colId","machineId","push","toString","start","start_date","end","end_date","interval","setInterval","clearInterval","onDragEnd","source","destination","draggableId","droppableId","index","sourceCol","destCol","sourceJobs","Array","from","moved","splice","destJobs","updated","put","children","style","display","gap","padding","Object","values","map","col","provided","droppableProps","ref","innerRef","border","borderRadius","width","minHeight","background","fileName","_jsxFileName","lineNumber","columnNumber","job","idx","prov","draggableProps","dragHandleProps","userSelect","margin","boxShadow","justifyContent","alignItems","flex","paddingRight","fontSize","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// File: frontend/src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\nexport default function App() {\n  const [columns, setColumns] = useState({});\n\n  // Fetch orders and rebuild columns (with polling every minute)\n  useEffect(() => {\n    const fetchOrders = () => {\n      axios.get('http://localhost:5000/api/orders').then(res => {\n        const data = res.data;\n        const cols = {\n          queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n          machine1: { id: 'machine1', title: 'Machine 1',    jobs: [] },\n          machine2: { id: 'machine2', title: 'Machine 2',    jobs: [] }\n        };\n        data.forEach(order => {\n          const colId = order.machineId || 'queue';\n          if (!cols[colId]) {\n            cols[colId] = { id: colId, title: colId, jobs: [] };\n          }\n          cols[colId].jobs.push({\n            id:    order.id.toString(),\n            title: order.title,\n            start: order.start_date,\n            end:   order.end_date\n          });\n        });\n        setColumns(cols);\n      });\n    };\n\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Handle drag-and-drop between columns\n  const onDragEnd = ({ source, destination, draggableId }) => {\n    if (!destination) return;\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    const sourceCol = columns[source.droppableId];\n    const destCol   = columns[destination.droppableId];\n    const sourceJobs = Array.from(sourceCol.jobs);\n    const [moved]    = sourceJobs.splice(source.index, 1);\n    const destJobs   = Array.from(destCol.jobs);\n    destJobs.splice(destination.index, 0, moved);\n\n    const updated = {\n      ...columns,\n      [sourceCol.id]: { ...sourceCol, jobs: sourceJobs },\n      [destCol.id]:   { ...destCol,   jobs: destJobs }\n    };\n    setColumns(updated);\n\n    // Persist the new machine assignment\n    axios.put(\n      `http://localhost:5000/api/orders/${draggableId}`,\n      { machineId: destCol.id }\n    );\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, padding: 16 }}>\n        {Object.values(columns).map(col => (\n          <Droppable droppableId={col.id} key={col.id}>\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{\n                  border: '1px solid #ccc',\n                  borderRadius: 4,\n                  width: 240,\n                  minHeight: 400,\n                  padding: 12,\n                  background: '#fafafa'\n                }}\n              >\n                <h4>{col.title}</h4>\n                {col.jobs.map((job, idx) => (\n                  <Draggable key={job.id} draggableId={job.id} index={idx}>\n                    {prov => (\n                      <div\n                        ref={prov.innerRef}\n                        {...prov.draggableProps}\n                        {...prov.dragHandleProps}\n                        style={{\n                          userSelect: 'none',\n                          padding: '10px',\n                          margin: '0 0 10px 0',\n                          background: '#fff',\n                          borderRadius: 4,\n                          boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          ...prov.draggableProps.style\n                        }}\n                      >\n                        {/* Title on the left */}\n                        <div style={{ flex: 1, paddingRight: 8 }}>\n                          {job.title}\n                        </div>\n                        {/* Bubbles for start/end on the right */}\n                        <div style={{ display: 'flex', gap: 4 }}>\n                          {job.start && (\n                            <div style={{\n                              padding: '4px 8px',\n                              background: '#e0f7fa',\n                              borderRadius: 12,\n                              fontSize: '0.75em'\n                            }}>\n                              {job.start}\n                            </div>\n                          )}\n                          {job.end && (\n                            <div style={{\n                              padding: '4px 8px',\n                              background: '#ffe0b2',\n                              borderRadius: 12,\n                              fontSize: '0.75em'\n                            }}>\n                              {job.end}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}