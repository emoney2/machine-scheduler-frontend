{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const month = pad(dt.getMonth() + 1);\n  const day = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0],\n      da = +parts[1],\n      yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start),\n    removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth() + 1).padStart(2, '0');\n  const da = String(dt.getDate()).padStart(2, '0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date),\n      db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start ? clampToWorkHours(new Date(job.embroidery_start)) : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = addWorkTime(start, runMs);\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = fmtDT(start);\n    job.end = fmtDT(end);\n    job.delivery = fmtMMDD(addWorkDays(end, 6));\n    job.isLate = end > cutoff;\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {},\n    rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id] = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState(() => JSON.parse(localStorage.getItem('placeholders') || '[]'));\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => {\n    saveLinks(links);\n  }, [links]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE (unchanged)\n  // We remove links from the dependency so toggling a link won’t re-fetch & re-sort machines\n  const fetchAll = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_ROOT}/orders`);\n      const real = {\n        queue: [],\n        machine1: [],\n        machine2: []\n      };\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = o.machineId === 'machine1' || o.machineId === 'machine2' ? o.machineId : 'queue';\n        real[col].push({\n          ...o,\n          id: o.id.toString(),\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date || '',\n          end: o.end_date || '',\n          delivery: o.delivery || '',\n          position: o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo: links[o.id] || null\n        });\n      });\n      ['machine1', 'machine2'].forEach(c => {\n        real[c].sort((a, b) => (a.position || Infinity) - (b.position || Infinity));\n      });\n      const merged = {};\n      ['queue', 'machine1', 'machine2'].forEach(c => {\n        merged[c] = [...placeholders.filter(p => p.machineId === c), ...real[c]];\n      });\n      setColumns({\n        queue: {\n          ...columns.queue,\n          jobs: sortQueue(merged.queue)\n        },\n        machine1: {\n          ...columns.machine1,\n          jobs: scheduleMachineJobs(merged.machine1)\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: scheduleMachineJobs(merged.machine2)\n        }\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // Only on first mount, not on links change\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: onDragEnd ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const sc = source.droppableId;\n    const dc = destination.droppableId;\n\n    // 1) Same-list\n    if (sc === dc) {\n      const newJobs = Array.from(columns[sc].jobs);\n      const [moved] = newJobs.splice(source.index, 1);\n      newJobs.splice(destination.index, 0, moved);\n\n      // If reordering in queue, re-sort by due date\n      if (sc === 'queue') {\n        return setColumns(prev => ({\n          ...prev,\n          queue: {\n            ...prev.queue,\n            jobs: sortQueue(newJobs)\n          }\n        }));\n      }\n\n      // Otherwise just reorder that machine\n      return setColumns(prev => ({\n        ...prev,\n        [sc]: {\n          ...prev[sc],\n          jobs: newJobs\n        }\n      }));\n    }\n\n    // 2) Cross-list\n    const chain = getChain(columns[sc].jobs, draggableId);\n    const srcJobs = columns[sc].jobs.filter(j => !chain.includes(j.id));\n    const destJobs = Array.from(columns[dc].jobs);\n    destJobs.splice(destination.index, 0, ...columns[sc].jobs.filter(j => chain.includes(j.id)));\n\n    // 3) Update placeholders\n    setPlaceholders(ps => ps.map(p => chain.includes(p.id) ? {\n      ...p,\n      machineId: dc\n    } : p));\n\n    // 4) Deep clone columns\n    const newCols = {\n      queue: {\n        ...columns.queue\n      },\n      machine1: {\n        ...columns.machine1\n      },\n      machine2: {\n        ...columns.machine2\n      }\n    };\n    newCols[sc].jobs = srcJobs;\n    newCols[dc].jobs = destJobs;\n\n    // 5) Persist each moved job & clear if going back to queue\n    chain.forEach((id, i) => {\n      const job = newCols[dc].jobs.find(j => j.id === id);\n      if (!job) return;\n\n      // Clear if dropped into queue\n      if (dc === 'queue') {\n        job._rawStart = job._rawEnd = null;\n        job.start = job.end = job.delivery = '';\n        job.isLate = false;\n        job.position = null;\n        job.embroidery_start = '';\n\n        // remove any link for this job\n        setLinks(l => {\n          const nxt = {\n            ...l\n          };\n          delete nxt[job.id];\n          return nxt;\n        });\n        job.linkedTo = null;\n      }\n\n      // Update machineId & position\n      job.machineId = dc === 'queue' ? null : dc;\n      job.position = dc === 'queue' ? null : destination.index + i;\n\n      // Sync back to server\n      axios.put(`${API_ROOT}/orders/${id}`, {\n        machineId: job.machineId,\n        start_date: job.start || '',\n        end_date: job.end || '',\n        delivery: job.delivery || '',\n        position: job.position,\n        embroidery_start: job.embroidery_start || ''\n      }).catch(console.error);\n    });\n\n    // 6) Reschedule only affected machines\n    if (sc === 'machine1' || dc === 'machine1') {\n      newCols.machine1.jobs = scheduleMachineJobs(newCols.machine1.jobs);\n    }\n    if (sc === 'machine2' || dc === 'machine2') {\n      newCols.machine2.jobs = scheduleMachineJobs(newCols.machine2.jobs);\n    }\n\n    // 7) Always sort queue if anything landed there\n    if (dc === 'queue') {\n      newCols.queue.jobs = sortQueue(newCols.queue.jobs);\n    }\n\n    // 8) Commit\n    setColumns(newCols);\n  };\n\n  // === Section 9: Render / Return ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 14\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      children: [\"Sync from Sheet \", syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 5\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 20,\n          borderRadius: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            textAlign: 'center'\n          },\n          children: \"Add/Edit Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            style: {\n              marginRight: 8\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitPlaceholder,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n          // Build contiguous linked segments\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({\n              start: i,\n              len\n            });\n            i += len;\n          }\n          const GAP = 6; // gap between cards\n          const BORDER = 4; // outline thickness\n\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                position: 'relative',\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: colId === 'queue' ? 260 : 300,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0'\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  marginBottom: GAP\n                },\n                children: [jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                  const idx = seg.start + jIdx;\n                  const isPh = job.id.startsWith('ph-');\n                  const isSoft = job.due_type === 'Soft Date';\n                  const base = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                  const stripe = 'rgba(255,0,0,0.5)';\n                  let bg = base;\n                  let bColor = isPh ? DARK_YELLOW : isSoft ? DARK_GREY : DARK_PURPLE;\n                  if (job.isLate) {\n                    bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, ${stripe} 6px, ${stripe} 12px)`;\n                    bColor = 'red';\n                  }\n                  const rawCompany = job.company || '';\n                  const company = rawCompany.length > 17 ? rawCompany.slice(0, 17) + '..' : rawCompany;\n                  const rawDesign = job.design || '';\n                  const design = rawDesign.slice(0, 15);\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job.id,\n                    index: idx,\n                    children: providedDraggable => {\n                      var _jobs;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: providedDraggable.innerRef,\n                        ...providedDraggable.draggableProps,\n                        ...providedDraggable.dragHandleProps,\n                        style: {\n                          position: 'relative',\n                          display: 'grid',\n                          gridTemplateColumns: '140px 100px',\n                          gridTemplateRows: 'auto auto auto auto',\n                          columnGap: 8,\n                          rowGap: 4,\n                          padding: '6px 34px 6px 6px',\n                          margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                          background: bg,\n                          border: `2px solid ${bColor}`,\n                          borderRadius: 4,\n                          zIndex: 1,\n                          // bring cards above outline\n                          ...providedDraggable.draggableProps.style\n                        },\n                        children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 4,\n                            height: '100%',\n                            background: '#0288d1',\n                            zIndex: 2\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 599,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 1,\n                            display: 'inline-flex',\n                            alignItems: 'center',\n                            background: base,\n                            padding: '2px 6px',\n                            borderRadius: 4,\n                            width: 'max-content'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              flex: '0 0 20px',\n                              height: 20,\n                              borderRadius: '50%',\n                              background: '#000',\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              fontSize: isPh ? 14 : 12,\n                              lineHeight: '20px',\n                              fontWeight: 'bold',\n                              color: base,\n                              marginRight: 6\n                            },\n                            children: isPh ? '*' : job.id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 612,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              fontWeight: 'bold',\n                              fontSize: 14,\n                              whiteSpace: 'nowrap',\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis'\n                            },\n                            children: company\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 619,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 606,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: base,\n                            padding: '2px 4px',\n                            borderRadius: 4,\n                            fontSize: 12,\n                            fontWeight: 'bold',\n                            width: 'max-content'\n                          },\n                          children: job.due_type\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 626,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 1,\n                            background: base,\n                            padding: '2px 6px',\n                            borderRadius: 4,\n                            width: 'max-content'\n                          },\n                          children: `${design} — ${job.quantity}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 633,\n                          columnNumber: 33\n                        }, this), job.start && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_START,\n                            padding: '2px 4px',\n                            borderRadius: 10,\n                            fontSize: 12\n                          },\n                          children: job.start\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 641,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_END,\n                            padding: '2px 4px',\n                            borderRadius: 4,\n                            fontSize: 12\n                          },\n                          children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 649,\n                          columnNumber: 33\n                        }, this), job.end && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_END,\n                            padding: '2px 4px',\n                            borderRadius: 10,\n                            fontSize: 12\n                          },\n                          children: job.end\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 657,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_DELIV,\n                            padding: '2px 4px',\n                            borderRadius: 4,\n                            fontSize: 12\n                          },\n                          children: `IHD: ${fmtMMDD(job.due_date)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 665,\n                          columnNumber: 33\n                        }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            background: BUBBLE_DELIV,\n                            padding: '2px 4px',\n                            borderRadius: 10,\n                            fontSize: 12\n                          },\n                          children: job.delivery\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 673,\n                          columnNumber: 35\n                        }, this), idx < jobs.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => toggleLink(colId, idx),\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: '100%',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomRightRadius: 4,\n                            zIndex: 2\n                          },\n                          children: job.linkedTo === ((_jobs = jobs[idx + 1]) === null || _jobs === void 0 ? void 0 : _jobs.id) ? '❌' : '🔗'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 682,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 27\n                  }, this);\n                }), seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: -(GAP * (seg.len - 1)),\n                    border: `${BORDER}px solid #0288d1`,\n                    borderRadius: 4,\n                    pointerEvents: 'none',\n                    zIndex: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 25\n                }, this)]\n              }, si, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 3\n  }, this);\n\n  // ← end of App()\n}\n_s(App, \"MfB4a6MgKBieyrdo+unzb0fCu3g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","jobs","prevEnd","map","job","idx","embroidery_start","qty","quantity","Math","ceil","runMs","stitchCount","end","eedDay","cutoff","_rawStart","_rawEnd","delivery","isLate","loadLinks","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","id","fwd","rev","forEach","j","linkedTo","root","chain","cur","push","App","_s","columns","setColumns","queue","title","machine1","machine2","placeholders","setPlaceholders","links","setLinks","showModal","setShowModal","ph","setPh","company","inHand","dueType","syncStatus","setSyncStatus","fetchAll","data","get","real","o","col","machineId","toString","stitch_count","design","due_type","start_date","end_date","position","c","Infinity","merged","filter","p","err","console","error","catch","handleSync","setTimeout","submitPlaceholder","now","ps","removePlaceholder","editPlaceholder","toggleLink","colId","cols","below","l","onDragEnd","result","source","destination","draggableId","sc","droppableId","dc","newJobs","Array","from","moved","splice","index","prev","srcJobs","destJobs","newCols","i","find","nxt","put","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","borderRadius","minWidth","marginTop","textAlign","gap","isArray","segments","len","GAP","BORDER","provided","ref","innerRef","droppableProps","border","width","minHeight","margin","seg","si","marginBottom","jIdx","isPh","startsWith","isSoft","base","stripe","bg","bColor","rawCompany","rawDesign","providedDraggable","_jobs","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","height","gridRow","gridColumn","flex","lineHeight","fontWeight","whiteSpace","overflow","textOverflow","justifySelf","flexDirection","cursor","borderTopRightRadius","borderBottomRightRadius","pointerEvents","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo)&&!isNaN(da)&&!isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    let start;\n    if (idx === 0) {\n      start = job.embroidery_start\n        ? clampToWorkHours(new Date(job.embroidery_start))\n        : clampToWorkHours(new Date());\n      if (!job.embroidery_start) job.embroidery_start = new Date().toISOString();\n    } else {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30*60000));\n    }\n    const qty   = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity/6)*6;\n    const runMs = (job.stitchCount/30000) * (qty/6) * 3600000;\n    const end   = addWorkTime(start, runMs);\n\n    const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n    const cutoff = new Date(eedDay);\n    cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = fmtDT(start);\n    job.end       = fmtDT(end);\n    job.delivery  = fmtMMDD(addWorkDays(end, 6));\n    job.isLate    = end > cutoff;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks')||'{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]       = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id:'queue',    title:'Unscheduled', jobs:[] },\n    machine1: { id:'machine1', title:'Machine 1',   jobs:[] },\n    machine2: { id:'machine2', title:'Machine 2',   jobs:[] },\n  });\n  const [placeholders, setPlaceholders] = useState(() =>\n    JSON.parse(localStorage.getItem('placeholders')||'[]')\n  );\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => { saveLinks(links); }, [links]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id:null, company:'', quantity:'', stitchCount:'', inHand:'', dueType:'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE (unchanged)\n  // We remove links from the dependency so toggling a link won’t re-fetch & re-sort machines\n  const fetchAll = async () => {\n    try {\n      const { data } = await axios.get(`${API_ROOT}/orders`);\n      const real = { queue:[], machine1:[], machine2:[] };\n\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = (o.machineId==='machine1'||o.machineId==='machine2')\n                      ? o.machineId : 'queue';\n        real[col].push({\n          ...o,\n          id:               o.id.toString(),\n          stitchCount:      o.stitch_count,\n          quantity:         o.quantity,\n          company:          o.company,\n          design:           o.design,\n          due_date:         o.due_date,\n          due_type:         o.due_type,\n          start:            o.start_date || '',\n          end:              o.end_date   || '',\n          delivery:         o.delivery   || '',\n          position:         o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo:         links[o.id] || null\n        });\n      });\n\n      ['machine1','machine2'].forEach(c => {\n        real[c].sort((a,b) => (a.position||Infinity) - (b.position||Infinity));\n      });\n\n      const merged = {};\n      ['queue','machine1','machine2'].forEach(c => {\n        merged[c] = [\n          ...placeholders.filter(p=>p.machineId===c),\n          ...real[c]\n        ];\n      });\n\n      setColumns({\n        queue:    { ...columns.queue,    jobs: sortQueue(merged.queue) },\n        machine1: { ...columns.machine1, jobs: scheduleMachineJobs(merged.machine1) },\n        machine2: { ...columns.machine2, jobs: scheduleMachineJobs(merged.machine2) },\n      });\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  // Only on first mount, not on links change\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n// === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id:         ph.id || `ph-${Date.now()}`,\n      company:    ph.company,\n      quantity:   +ph.quantity || 1,\n      stitchCount:+ph.stitchCount||30000,\n      due_date:   ph.inHand,\n      due_type:   ph.dueType,\n      machineId:  'queue',\n      position:   null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p=>p.id===ph.id?job:p));\n      setColumns(c => ({\n        ...c,\n        queue:    {...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)},\n        machine1: {...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j)},\n        machine2: {...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j)},\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {...c.queue, jobs: [job, ...c.queue.jobs]}\n      }));\n    }\n    setShowModal(false);\n    setPh({id:null,company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p=>p.id!==id));\n    setColumns(c => ({\n      ...c,\n      queue:    {...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)},\n      machine1: {...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id)},\n      machine2: {...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id)},\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: onDragEnd ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const sc = source.droppableId;\n  const dc = destination.droppableId;\n\n  // 1) Same-list\n  if (sc === dc) {\n    const newJobs = Array.from(columns[sc].jobs);\n    const [moved] = newJobs.splice(source.index, 1);\n    newJobs.splice(destination.index, 0, moved);\n\n    // If reordering in queue, re-sort by due date\n    if (sc === 'queue') {\n      return setColumns(prev => ({\n        ...prev,\n        queue: { ...prev.queue, jobs: sortQueue(newJobs) }\n      }));\n    }\n\n    // Otherwise just reorder that machine\n    return setColumns(prev => ({\n      ...prev,\n      [sc]: { ...prev[sc], jobs: newJobs }\n    }));\n  }\n\n  // 2) Cross-list\n  const chain = getChain(columns[sc].jobs, draggableId);\n  const srcJobs = columns[sc].jobs.filter(j => !chain.includes(j.id));\n  const destJobs = Array.from(columns[dc].jobs);\n  destJobs.splice(destination.index, 0,\n    ...columns[sc].jobs.filter(j => chain.includes(j.id))\n  );\n\n  // 3) Update placeholders\n  setPlaceholders(ps =>\n    ps.map(p => chain.includes(p.id) ? { ...p, machineId: dc } : p)\n  );\n\n  // 4) Deep clone columns\n  const newCols = {\n    queue:    { ...columns.queue },\n    machine1: { ...columns.machine1 },\n    machine2: { ...columns.machine2 }\n  };\n  newCols[sc].jobs = srcJobs;\n  newCols[dc].jobs = destJobs;\n\n  // 5) Persist each moved job & clear if going back to queue\n  chain.forEach((id,i) => {\n    const job = newCols[dc].jobs.find(j => j.id === id);\n    if (!job) return;\n\n    // Clear if dropped into queue\n    if (dc === 'queue') {\n      job._rawStart = job._rawEnd = null;\n      job.start = job.end = job.delivery = '';\n      job.isLate = false;\n      job.position = null;\n      job.embroidery_start = '';\n\n      // remove any link for this job\n      setLinks(l => {\n        const nxt = { ...l };\n        delete nxt[job.id];\n        return nxt;\n      });\n      job.linkedTo = null;\n    }\n\n    // Update machineId & position\n    job.machineId = dc === 'queue' ? null : dc;\n    job.position = dc === 'queue' ? null : (destination.index + i);\n\n    // Sync back to server\n    axios.put(`${API_ROOT}/orders/${id}`, {\n      machineId: job.machineId,\n      start_date: job.start || '',\n      end_date:   job.end   || '',\n      delivery:   job.delivery || '',\n      position:   job.position,\n      embroidery_start: job.embroidery_start || ''\n    }).catch(console.error);\n  });\n\n  // 6) Reschedule only affected machines\n  if (sc === 'machine1' || dc === 'machine1') {\n    newCols.machine1.jobs = scheduleMachineJobs(newCols.machine1.jobs);\n  }\n  if (sc === 'machine2' || dc === 'machine2') {\n    newCols.machine2.jobs = scheduleMachineJobs(newCols.machine2.jobs);\n  }\n\n  // 7) Always sort queue if anything landed there\n  if (dc === 'queue') {\n    newCols.queue.jobs = sortQueue(newCols.queue.jobs);\n  }\n\n  // 8) Commit\n  setColumns(newCols);\n};\n\n\n// === Section 9: Render / Return ===\nreturn (\n  <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 14 }}>\n    {/* Add / Sync Buttons */}\n    <button onClick={() => setShowModal(true)} style={{ marginRight: 8 }}>\n      + Add Placeholder\n    </button>\n    <button onClick={handleSync}>\n      Sync from Sheet {syncStatus === 'updated' && <span style={{ color: 'green' }}>✓ Updated</span>}\n    </button>\n\n    {/* Modal */}\n    {showModal && (\n      <div style={{\n        position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex', alignItems: 'center', justifyContent: 'center',\n        zIndex: 1000\n      }}>\n        <div style={{ background: '#fff', padding: 20, borderRadius: 4, minWidth: 300 }}>\n          <h3 style={{ marginTop: 0, textAlign: 'center' }}>Add/Edit Placeholder</h3>\n          {/* …modal inputs… */}\n          <div style={{ textAlign: 'right' }}>\n            <button onClick={() => setShowModal(false)} style={{ marginRight: 8 }}>Cancel</button>\n            <button onClick={submitPlaceholder}>Submit</button>\n          </div>\n        </div>\n      </div>\n    )}\n\n    {/* Drag & Drop Columns */}\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n        {['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n\n          // Build contiguous linked segments\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({ start: i, len });\n            i += len;\n          }\n\n          const GAP = 6;    // gap between cards\n          const BORDER = 4; // outline thickness\n\n          return (\n            <Droppable key={colId} droppableId={colId}>\n              {provided => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    position: 'relative',\n                    border: '1px solid #ccc',\n                    borderRadius: 4,\n                    width: colId === 'queue' ? 260 : 300,\n                    minHeight: 400,\n                    padding: 12,\n                    background: '#fafafa'\n                  }}\n                >\n                  <h4 style={{ textAlign: 'center', margin: '8px 0' }}>{col.title}</h4>\n\n                  {segments.map((seg, si) => (\n                    <div\n                      key={si}\n                      style={{\n                        position: 'relative',\n                        marginBottom: GAP,\n                      }}\n                    >\n                      {/* Cards */}\n                      {jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                        const idx    = seg.start + jIdx;\n                        const isPh   = job.id.startsWith('ph-');\n                        const isSoft = job.due_type === 'Soft Date';\n                        const base   = isPh ? LIGHT_YELLOW : (isSoft ? LIGHT_GREY : LIGHT_PURPLE);\n                        const stripe = 'rgba(255,0,0,0.5)';\n                        let bg       = base;\n                        let bColor   = isPh ? DARK_YELLOW : (isSoft ? DARK_GREY : DARK_PURPLE);\n                        if (job.isLate) {\n                          bg     = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, ${stripe} 6px, ${stripe} 12px)`;\n                          bColor = 'red';\n                        }\n\n                        const rawCompany = job.company || '';\n                        const company    = rawCompany.length > 17\n                          ? rawCompany.slice(0, 17) + '..'\n                          : rawCompany;\n                        const rawDesign = job.design || '';\n                        const design    = rawDesign.slice(0, 15);\n\n                        return (\n                          <Draggable key={job.id} draggableId={job.id} index={idx}>\n                            {providedDraggable => (\n                              <div\n                                ref={providedDraggable.innerRef}\n                                {...providedDraggable.draggableProps}\n                                {...providedDraggable.dragHandleProps}\n                                style={{\n                                  position: 'relative',\n                                  display: 'grid',\n                                  gridTemplateColumns: '140px 100px',\n                                  gridTemplateRows: 'auto auto auto auto',\n                                  columnGap: 8,\n                                  rowGap: 4,\n                                  padding: '6px 34px 6px 6px',\n                                  margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                                  background: bg,\n                                  border: `2px solid ${bColor}`,\n                                  borderRadius: 4,\n                                  zIndex: 1,                      // bring cards above outline\n                                  ...providedDraggable.draggableProps.style\n                                }}\n                              >\n                                {/* connector stripe */}\n                                {jIdx === 0 && seg.len > 1 && (\n                                  <div style={{\n                                    position: 'absolute', top: 0, right: 0,\n                                    width: 4, height: '100%', background: '#0288d1', zIndex: 2\n                                  }}/>\n                                )}\n\n                                {/* Row1 Col1: Company */}\n                                <span style={{\n                                  gridRow: 1, gridColumn: 1,\n                                  display: 'inline-flex', alignItems: 'center',\n                                  background: base, padding: '2px 6px', borderRadius: 4,\n                                  width: 'max-content'\n                                }}>\n                                  <span style={{\n                                    flex: '0 0 20px', height: 20, borderRadius: '50%',\n                                    background: '#000', display: 'flex', alignItems: 'center',\n                                    justifyContent: 'center', fontSize: isPh ? 14 : 12,\n                                    lineHeight: '20px', fontWeight: 'bold',\n                                    color: base, marginRight: 6\n                                  }}>{isPh ? '*' : job.id}</span>\n                                  <span style={{\n                                    fontWeight: 'bold', fontSize: 14,\n                                    whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\n                                  }}>{company}</span>\n                                </span>\n\n                                {/* Row1 Col2: Due Type */}\n                                <span style={{\n                                  gridRow: 1, gridColumn: 2, justifySelf: 'end',\n                                  background: base, padding: '2px 4px', borderRadius: 4,\n                                  fontSize: 12, fontWeight: 'bold', width: 'max-content'\n                                }}>{job.due_type}</span>\n\n                                {/* Row2 Col1: Design — Quantity */}\n                                <span style={{\n                                  gridRow: 2, gridColumn: 1,\n                                  background: base, padding: '2px 6px', borderRadius: 4,\n                                  width: 'max-content'\n                                }}>{`${design} — ${job.quantity}`}</span>\n\n                                {/* Row2 Col2 */}\n                                {job.start && (\n                                  <span style={{\n                                    gridRow: 2, gridColumn: 2, justifySelf: 'end',\n                                    background: BUBBLE_START, padding: '2px 4px',\n                                    borderRadius: 10, fontSize: 12\n                                  }}>{job.start}</span>\n                                )}\n\n                                {/* Row3 Col1 */}\n                                <span style={{\n                                  gridRow: 3, gridColumn: 1, display: 'inline-block',\n                                  background: BUBBLE_END, padding: '2px 4px',\n                                  borderRadius: 4, fontSize: 12\n                                }}>{`EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`}</span>\n\n                                {/* Row3 Col2 */}\n                                {job.end && (\n                                  <span style={{\n                                    gridRow: 3, gridColumn: 2, justifySelf: 'end',\n                                    background: BUBBLE_END, padding: '2px 4px',\n                                    borderRadius: 10, fontSize: 12\n                                  }}>{job.end}</span>\n                                )}\n\n                                {/* Row4 Col1 */}\n                                <span style={{\n                                  gridRow: 4, gridColumn: 1, display: 'inline-block',\n                                  background: BUBBLE_DELIV, padding: '2px 4px',\n                                  borderRadius: 4, fontSize: 12\n                                }}>{`IHD: ${fmtMMDD(job.due_date)}`}</span>\n\n                                {/* Row4 Col2 */}\n                                {job.delivery && (\n                                  <span style={{\n                                    gridRow: 4, gridColumn: 2, justifySelf: 'end',\n                                    background: BUBBLE_DELIV, padding: '2px 4px',\n                                    borderRadius: 10, fontSize: 12\n                                  }}>{job.delivery}</span>\n                                )}\n\n                                {/* 🔗 / ❌ Link Toggle */}\n                                {idx < jobs.length - 1 && (\n                                  <div\n                                    onClick={() => toggleLink(colId, idx)}\n                                    style={{\n                                      position: 'absolute', top: 0, right: 0,\n                                      width: 28, height: '100%', display: 'flex',\n                                      flexDirection: 'column', alignItems: 'center',\n                                      justifyContent: 'center', cursor: 'pointer',\n                                      background: base,\n                                      borderTopRightRadius: 4,\n                                      borderBottomRightRadius: 4,\n                                      zIndex: 2\n                                    }}\n                                  >\n                                    {job.linkedTo === jobs[idx+1]?.id ? '❌' : '🔗'}\n                                  </div>\n                                )}\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n\n                      {/* Overlay border on top */}\n                      {seg.len > 1 && (\n                        <div style={{\n                          position: 'absolute',\n                          top: 0,\n                          left: 0,\n                          right: 0,\n                          bottom: -(GAP * (seg.len - 1)),\n                          border: `${BORDER}px solid #0288d1`,\n                          borderRadius: 4,\n                          pointerEvents: 'none',\n                          zIndex: 1\n                        }}/>\n                      )}\n                    </div>\n                  ))}\n\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n        })}\n      </div>\n    </DragDropContext>\n  </div>\n);\n\n// ← end of App()\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}