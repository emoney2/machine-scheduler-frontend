{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eckar\\\\machine-scheduler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'http://localhost:5000/api';\nconst WORK_START_HR = 8,\n  WORK_START_MIN = 30;\nconst WORK_END_HR = 16,\n  WORK_END_MIN = 30;\nconst WEEKENDS = [0, 6]; // Sunday=0, Saturday=6\nconst HOLIDAYS = ['2025-01-01', '2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW = '#FFF9C4',\n  DARK_YELLOW = '#FDD835';\nconst LIGHT_GREY = '#ECEFF1',\n  DARK_GREY = '#616161';\nconst LIGHT_PURPLE = '#E1BEE7',\n  DARK_PURPLE = '#6A1B9A';\nconst BUBBLE_START = '#e0f7fa';\nconst BUBBLE_END = '#ffe0b2';\nconst BUBBLE_DELIV = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date && !isNaN(dt) && HOLIDAYS.includes(dt.toISOString().slice(0, 10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date && !isNaN(dt) && !WEEKENDS.includes(dt.getDay()) && !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (!isWorkday(d) || d.getHours() < WORK_START_HR || d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (d.getHours() > WORK_END_HR || d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2, '0');\n  const month = pad(dt.getMonth() + 1);\n  const day = pad(dt.getDate());\n  let h = dt.getHours(),\n    m = pad(dt.getMinutes()),\n    ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0],\n      da = +parts[1],\n      yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo) && !isNaN(da) && !isNaN(yr)) return new Date(yr, mo - 1, da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start),\n    added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start),\n    removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth() + 1).padStart(2, '0');\n  const da = String(dt.getDate()).padStart(2, '0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a, b) => {\n    const da = parseDueDate(a.due_date),\n      db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n  return jobs.map((job, idx) => {\n    const isPlaceholder = job.id.startsWith('ph-');\n    const hasStart = Boolean(job.start_date);\n    let start = null;\n\n    // Only for the first real job in the column, and only if it has no start yet:\n    if (idx === 0 && !isPlaceholder && !hasStart) {\n      const nowIso = new Date().toISOString();\n      job.start_date = nowIso;\n      start = clampToWorkHours(new Date(nowIso));\n      // Persist that one-time stamp back to your backend:\n      axios.put(`${API_ROOT}/orders/${job.id}`, {\n        start_date: nowIso\n      }).catch(console.error);\n    }\n    // If it already has a start_date, respect it:\n    else if (idx === 0 && !isPlaceholder && hasStart) {\n      start = clampToWorkHours(new Date(job.start_date));\n    }\n    // For any non-first (real or placeholder), chain from previous end:\n    else if (idx > 0 && prevEnd) {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // Compute end-time & delivery exactly as before:\n    const qty = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity / 6) * 6;\n    const runMs = job.stitchCount / 30000 * (qty / 6) * 3600000;\n    const end = start ? addWorkTime(start, runMs) : null;\n\n    // Format for display:\n    job._rawStart = start;\n    job._rawEnd = end;\n    job.start = start ? fmtDT(start) : '';\n    job.end = end ? fmtDT(end) : '';\n    job.delivery = end ? fmtMMDD(addWorkDays(end, 6)) : '';\n    job.isLate = end ? end > (() => {\n      const eedDay = subWorkDays(parseDueDate(job.due_date), 6);\n      const cutoff = new Date(eedDay);\n      cutoff.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n      return cutoff;\n    })() : false;\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks') || '{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {},\n    rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id] = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  _s();\n  const [columns, setColumns] = useState({\n    queue: {\n      id: 'queue',\n      title: 'Unscheduled',\n      jobs: []\n    },\n    machine1: {\n      id: 'machine1',\n      title: 'Machine 1',\n      jobs: []\n    },\n    machine2: {\n      id: 'machine2',\n      title: 'Machine 2',\n      jobs: []\n    }\n  });\n  const [placeholders, setPlaceholders] = useState(() => JSON.parse(localStorage.getItem('placeholders') || '[]'));\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => {\n    saveLinks(links);\n  }, [links]);\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null,\n    company: '',\n    quantity: '',\n    stitchCount: '',\n    inHand: '',\n    dueType: 'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE\n  const fetchAll = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_ROOT}/orders`);\n      // bucket real jobs by column\n      const real = {\n        queue: [],\n        machine1: [],\n        machine2: []\n      };\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = o.machineId === 'machine1' || o.machineId === 'machine2' ? o.machineId : 'queue';\n        real[col].push({\n          ...o,\n          id: o.id.toString(),\n          stitchCount: o.stitch_count,\n          quantity: o.quantity,\n          company: o.company,\n          design: o.design,\n          due_date: o.due_date,\n          due_type: o.due_type,\n          start: o.start_date || '',\n          end: o.end_date || '',\n          delivery: o.delivery || '',\n          position: o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo: links[o.id] || null\n        });\n      });\n\n      // combine placeholders + real for each column\n      const merged = {};\n      ['queue', 'machine1', 'machine2'].forEach(col => {\n        merged[col] = [...placeholders.filter(p => p.machineId === col), ...real[col]];\n      });\n      setColumns({\n        // queue: sort everything by due date\n        queue: {\n          ...columns.queue,\n          jobs: sortQueue(merged.queue)\n        },\n        // machines: sort everything by stored position\n        machine1: {\n          ...columns.machine1,\n          jobs: merged.machine1.sort((a, b) => (a.position != null ? a.position : Infinity) - (b.position != null ? b.position : Infinity)).map(job =>\n          // after sorting, schedule times\n          job).map((job, i, jobs) => job) // placeholder for scheduling below\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: merged.machine2.sort((a, b) => (a.position != null ? a.position : Infinity) - (b.position != null ? b.position : Infinity)).map(job => job).map((job, i, jobs) => job)\n        }\n      });\n\n      // finally run scheduling on the two machines\n      setColumns(cols => ({\n        ...cols,\n        machine1: {\n          ...cols.machine1,\n          jobs: scheduleMachineJobs(cols.machine1.jobs)\n        },\n        machine2: {\n          ...cols.machine2,\n          jobs: scheduleMachineJobs(cols.machine2.jobs)\n        }\n      }));\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n  // === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id: ph.id || `ph-${Date.now()}`,\n      company: ph.company,\n      quantity: +ph.quantity || 1,\n      stitchCount: +ph.stitchCount || 30000,\n      due_date: ph.inHand,\n      due_type: ph.dueType,\n      machineId: 'queue',\n      position: null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p => p.id === ph.id ? job : p));\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: c.queue.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine1: {\n          ...c.machine1,\n          jobs: c.machine1.jobs.map(j => j.id === ph.id ? job : j)\n        },\n        machine2: {\n          ...c.machine2,\n          jobs: c.machine2.jobs.map(j => j.id === ph.id ? job : j)\n        }\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {\n          ...c.queue,\n          jobs: [job, ...c.queue.jobs]\n        }\n      }));\n    }\n    setShowModal(false);\n    setPh({\n      id: null,\n      company: '',\n      quantity: '',\n      stitchCount: '',\n      inHand: '',\n      dueType: 'Hard Date'\n    });\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p => p.id !== id));\n    setColumns(c => ({\n      ...c,\n      queue: {\n        ...c.queue,\n        jobs: c.queue.jobs.filter(j => j.id !== id)\n      },\n      machine1: {\n        ...c.machine1,\n        jobs: c.machine1.jobs.filter(j => j.id !== id)\n      },\n      machine2: {\n        ...c.machine2,\n        jobs: c.machine2.jobs.filter(j => j.id !== id)\n      }\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n  // === Section 7: toggleLink ===\n  const toggleLink = (colId, idx) => {\n    setColumns(cols => {\n      // clone this column’s jobs\n      const jobs = [...cols[colId].jobs];\n      const job = jobs[idx];\n      const below = jobs[idx + 1];\n      if (!below) return cols; // nothing below to link to\n\n      // update our persisted links map\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        if (m[job.id] === below.id) delete m[job.id];else m[job.id] = below.id;\n        return m;\n      });\n\n      // toggle the in-memory link flag\n      job.linkedTo = job.linkedTo === below.id ? null : below.id;\n      jobs[idx] = job;\n\n      // return updated columns state\n      return {\n        ...cols,\n        [colId]: {\n          ...cols[colId],\n          jobs\n        }\n      };\n    });\n  };\n\n  // === Section 8: onDragEnd ===\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const sc = source.droppableId;\n    const dc = destination.droppableId;\n\n    // clone all three lists\n    const lists = {\n      queue: Array.from(columns.queue.jobs),\n      machine1: Array.from(columns.machine1.jobs),\n      machine2: Array.from(columns.machine2.jobs)\n    };\n\n    // remove dragged (or chain) from source\n    const sourceList = lists[sc];\n    const chain = getChain(sourceList, draggableId);\n    const movedSet = new Set(chain);\n    const movedJobs = sourceList.filter(j => movedSet.has(j.id));\n    lists[sc] = sourceList.filter(j => !movedSet.has(j.id));\n\n    // insert them into destination\n    const destList = lists[dc];\n    destList.splice(destination.index, 0, ...movedJobs);\n    lists[dc] = destList;\n\n    // update placeholder positions for _all_ moved placeholders\n    setPlaceholders(ps => ps.map(p => {\n      if (p.id === draggableId || movedSet.has(p.id)) {\n        return {\n          ...p,\n          machineId: dc,\n          position: destination.index + movedJobs.findIndex(j => j.id === p.id)\n        };\n      }\n      return p;\n    }));\n\n    // if moved back to queue, clear timing & links\n    if (dc === 'queue') {\n      setLinks(l => {\n        const m = {\n          ...l\n        };\n        chain.forEach(id => delete m[id]);\n        return m;\n      });\n      movedJobs.forEach(job => {\n        job.linkedTo = null;\n        job._rawStart = job._rawEnd = null;\n        job.start = job.end = job.delivery = '';\n        job.isLate = false;\n        job.embroidery_start = '';\n        job.position = null;\n      });\n    }\n\n    // persist moved jobs\n    movedJobs.forEach((job, i) => {\n      const pos = dc === 'queue' ? null : destination.index + i;\n      axios.put(`${API_ROOT}/orders/${job.id}`, {\n        machineId: dc === 'queue' ? null : dc,\n        start_date: job.start || '',\n        end_date: job.end || '',\n        delivery: job.delivery || '',\n        position: pos,\n        embroidery_start: job.embroidery_start || ''\n      }).catch(console.error);\n    });\n\n    // now build new columns state\n    const newCols = {\n      queue: {\n        ...columns.queue,\n        jobs: sortQueue(lists.queue)\n      },\n      machine1: {\n        ...columns.machine1,\n        jobs: scheduleMachineJobs(lists.machine1)\n      },\n      machine2: {\n        ...columns.machine2,\n        jobs: scheduleMachineJobs(lists.machine2)\n      }\n    };\n\n    // apply once\n    setColumns(newCols);\n  };\n\n  // === Section 9: Render / Return ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      fontFamily: 'sans-serif',\n      fontSize: 13\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginRight: 8,\n        fontSize: 13\n      },\n      children: \"+ Add Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSync,\n      style: {\n        fontSize: 13\n      },\n      children: [\"Sync from Sheet\", ' ', syncStatus === 'updated' && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green',\n          fontSize: 13\n        },\n        children: \"\\u2713 Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 16,\n        margin: '12px 0',\n        flexWrap: 'wrap',\n        fontSize: 12\n      },\n      children: [[{\n        label: 'Placeholder',\n        bg: LIGHT_YELLOW,\n        border: DARK_YELLOW\n      }, {\n        label: 'Soft Date',\n        bg: LIGHT_GREY,\n        border: DARK_GREY\n      }, {\n        label: 'Hard Date',\n        bg: LIGHT_PURPLE,\n        border: DARK_PURPLE\n      }, {\n        label: 'Late',\n        bg: 'red',\n        border: 'red'\n      }].map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            width: 12,\n            height: 12,\n            background: item.bg,\n            border: `2px solid ${item.border}`,\n            borderRadius: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), item.label]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 14\n          },\n          children: \"\\uD83D\\uDD17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 9\n        }, this), \" Link\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 14\n          },\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 9\n        }, this), \" Unlink\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 7\n      }, this), ['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n        const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: 12,\n              height: 12,\n              background: color,\n              borderRadius: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), txt]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginTop: 16\n        },\n        children: ['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({\n              start: i,\n              len\n            });\n            i += len;\n          }\n          const GAP = 6,\n            OUTLINE = 6;\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: colId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                position: 'relative',\n                border: '1px solid #ccc',\n                borderRadius: 4,\n                width: colId === 'queue' ? 260 : 300,\n                minHeight: 400,\n                padding: 12,\n                background: '#fafafa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: 'center',\n                  margin: '8px 0',\n                  fontSize: 13\n                },\n                children: col.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this), segments.map((seg, si) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  marginBottom: GAP,\n                  zIndex: seg.len > 1 ? 3 : 1,\n                  outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                  outlineOffset: seg.len > 1 ? '0px' : undefined,\n                  borderRadius: 4\n                },\n                children: jobs.slice(seg.start, seg.start + seg.len).map((job, jIdx) => {\n                  const idx = seg.start + jIdx;\n                  const isPh = job.id.startsWith('ph-');\n                  const isSoft = job.due_type === 'Soft Date';\n                  const base = isPh ? LIGHT_YELLOW : isSoft ? LIGHT_GREY : LIGHT_PURPLE;\n                  let bg = base;\n                  let bCol = isPh ? DARK_YELLOW : isSoft ? DARK_GREY : DARK_PURPLE;\n                  if (job.isLate) {\n                    bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                    bCol = 'red';\n                  }\n                  const dt0 = (job.due_type || '')[0] || '';\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: job.id,\n                    index: idx,\n                    children: prov => {\n                      var _job$design, _jobs;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: prov.innerRef,\n                        ...prov.draggableProps,\n                        ...prov.dragHandleProps,\n                        style: {\n                          position: 'relative',\n                          display: 'grid',\n                          gridTemplateColumns: '1fr auto',\n                          gridTemplateRows: 'auto auto auto auto',\n                          columnGap: 6,\n                          rowGap: 4,\n                          padding: '6px 28px 6px 6px',\n                          margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                          background: bg,\n                          border: `2px solid ${bCol}`,\n                          borderRadius: 4,\n                          zIndex: 2,\n                          ...prov.draggableProps.style\n                        },\n                        children: [jIdx === 0 && seg.len > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 4,\n                            height: '100%',\n                            background: '#0288d1',\n                            zIndex: 4\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 669,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13,\n                            fontWeight: 'bold'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              display: 'inline-block',\n                              width: 20,\n                              height: 20,\n                              borderRadius: '50%',\n                              background: '#000',\n                              color: base,\n                              lineHeight: '20px',\n                              textAlign: 'center',\n                              fontSize: isPh ? 13 : 11,\n                              fontWeight: 'bold',\n                              marginRight: 4\n                            },\n                            children: isPh ? '*' : job.id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 698,\n                            columnNumber: 37\n                          }, this), job.company]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 683,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 1,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            fontSize: 15,\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis'\n                          },\n                          children: job.quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 719,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: base,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: (_job$design = job.design) === null || _job$design === void 0 ? void 0 : _job$design.slice(0, 22)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 739,\n                          columnNumber: 35\n                        }, this), job.start && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 2,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_START,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.start\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 758,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            fontSize: 13\n                          },\n                          children: `EED: ${fmtMMDD(subWorkDays(parseDueDate(job.due_date), 6))}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 776,\n                          columnNumber: 35\n                        }, this), job.end && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 3,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_END,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.end\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 797,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 1,\n                            display: 'inline-block',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 4,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: `IHD: ${fmtMMDD(job.due_date)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 815,\n                          columnNumber: 35\n                        }, this), job.delivery && /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            gridRow: 4,\n                            gridColumn: 2,\n                            justifySelf: 'end',\n                            display: 'inline-block',\n                            background: BUBBLE_DELIV,\n                            padding: '0 4px',\n                            borderRadius: 10,\n                            whiteSpace: 'nowrap',\n                            fontSize: 13\n                          },\n                          children: job.delivery\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 832,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: 28,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomLeftRadius: 4,\n                            zIndex: 4,\n                            fontSize: 11,\n                            fontWeight: 'bold'\n                          },\n                          children: dt0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 850,\n                          columnNumber: 35\n                        }, this), idx < jobs.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          onClick: () => toggleLink(colId, idx),\n                          style: {\n                            position: 'absolute',\n                            top: 28,\n                            right: 0,\n                            width: 28,\n                            height: 'calc(100% - 28px)',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer',\n                            background: base,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: job.linkedTo === ((_jobs = jobs[idx + 1]) === null || _jobs === void 0 ? void 0 : _jobs.id) ? '❌' : '🔗'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 873,\n                          columnNumber: 37\n                        }, this), job.id.startsWith('ph-') && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            width: 28,\n                            height: '100%',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'flex-start',\n                            background: base,\n                            borderTopRightRadius: 4,\n                            borderBottomRightRadius: 4,\n                            zIndex: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => editPlaceholder(job),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u270E\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 916,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => removePlaceholder(job.id),\n                            style: {\n                              cursor: 'pointer',\n                              fontSize: 12,\n                              margin: 4\n                            },\n                            children: \"\\u2716\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 926,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 899,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 33\n                      }, this);\n                    }\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, si, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this)\n          }, colId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 3\n  }, this);\n} // ← end of App component\n_s(App, \"+AbyhJxwKjtQAu/lQB62LR2ATpE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","API_ROOT","WORK_START_HR","WORK_START_MIN","WORK_END_HR","WORK_END_MIN","WEEKENDS","HOLIDAYS","LIGHT_YELLOW","DARK_YELLOW","LIGHT_GREY","DARK_GREY","LIGHT_PURPLE","DARK_PURPLE","BUBBLE_START","BUBBLE_END","BUBBLE_DELIV","isHoliday","dt","Date","isNaN","includes","toISOString","slice","isWorkday","getDay","clampToWorkHours","d","getHours","getMinutes","setDate","getDate","setHours","addWorkTime","start","ms","remaining","current","endOfDay","free","getTime","fmtDT","pad","n","String","padStart","month","getMonth","day","h","m","ap","parseDueDate","test","parts","split","length","mo","da","yr","getFullYear","addWorkDays","days","added","subWorkDays","removed","fmtMMDD","sortQueue","arr","sort","a","b","due_date","db","scheduleMachineJobs","jobs","prevEnd","map","job","idx","isPlaceholder","id","startsWith","hasStart","Boolean","start_date","nowIso","put","catch","console","error","qty","quantity","Math","ceil","runMs","stitchCount","end","_rawStart","_rawEnd","delivery","isLate","eedDay","cutoff","loadLinks","JSON","parse","localStorage","getItem","saveLinks","setItem","stringify","getChain","fwd","rev","forEach","j","linkedTo","root","chain","cur","push","App","_s","columns","setColumns","queue","title","machine1","machine2","placeholders","setPlaceholders","links","setLinks","showModal","setShowModal","ph","setPh","company","inHand","dueType","syncStatus","setSyncStatus","fetchAll","data","get","real","o","col","machineId","toString","stitch_count","design","due_type","end_date","position","embroidery_start","merged","filter","p","Infinity","i","cols","err","handleSync","setTimeout","submitPlaceholder","now","ps","c","removePlaceholder","editPlaceholder","toggleLink","colId","below","l","onDragEnd","result","source","destination","draggableId","sc","droppableId","dc","lists","Array","from","sourceList","movedSet","Set","movedJobs","has","destList","splice","index","findIndex","pos","newCols","style","padding","fontFamily","fontSize","children","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","display","alignItems","gap","margin","flexWrap","label","bg","border","item","width","height","background","borderRadius","txt","marginTop","isArray","segments","len","GAP","OUTLINE","provided","ref","innerRef","droppableProps","minHeight","textAlign","seg","si","marginBottom","zIndex","outline","undefined","outlineOffset","jIdx","isPh","isSoft","base","bCol","dt0","prov","_job$design","_jobs","draggableProps","dragHandleProps","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","top","right","gridRow","gridColumn","whiteSpace","overflow","textOverflow","fontWeight","lineHeight","justifySelf","justifyContent","borderTopRightRadius","borderBottomLeftRadius","flexDirection","cursor","borderBottomRightRadius","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eckar/machine-scheduler/frontend/src/App.js"],"sourcesContent":["// === Section 1: Imports & Configuration ===\n// File: frontend/src/App.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\n// CONFIGURATION\nconst API_ROOT       = 'http://localhost:5000/api';\nconst WORK_START_HR  = 8,  WORK_START_MIN = 30;\nconst WORK_END_HR    = 16, WORK_END_MIN   = 30;\nconst WEEKENDS       = [0,6]; // Sunday=0, Saturday=6\nconst HOLIDAYS       = ['2025-01-01','2025-12-25'];\n\n// COLOR CONSTANTS\nconst LIGHT_YELLOW  = '#FFF9C4', DARK_YELLOW  = '#FDD835';\nconst LIGHT_GREY    = '#ECEFF1', DARK_GREY    = '#616161';\nconst LIGHT_PURPLE  = '#E1BEE7', DARK_PURPLE  = '#6A1B9A';\nconst BUBBLE_START  = '#e0f7fa';\nconst BUBBLE_END    = '#ffe0b2';\nconst BUBBLE_DELIV  = '#c8e6c9';\n\n// —————————————————————————————\n// HELPERS (unchanged)\n// —————————————————————————————\n\n// === Section 2: Helpers ===\nfunction isHoliday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         HOLIDAYS.includes(dt.toISOString().slice(0,10));\n}\nfunction isWorkday(dt) {\n  return dt instanceof Date &&\n         !isNaN(dt) &&\n         !WEEKENDS.includes(dt.getDay()) &&\n         !isHoliday(dt);\n}\nfunction clampToWorkHours(dt) {\n  let d = new Date(dt);\n  while (\n    !isWorkday(d) ||\n    d.getHours() < WORK_START_HR ||\n    (d.getHours() === WORK_START_HR && d.getMinutes() < WORK_START_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n  }\n  if (\n    d.getHours() > WORK_END_HR ||\n    (d.getHours() === WORK_END_HR && d.getMinutes() >= WORK_END_MIN)\n  ) {\n    d.setDate(d.getDate() + 1);\n    d.setHours(WORK_START_HR, WORK_START_MIN, 0, 0);\n    return clampToWorkHours(d);\n  }\n  return d;\n}\nfunction addWorkTime(start, ms) {\n  let remaining = ms;\n  let current = clampToWorkHours(start);\n  while (remaining > 0) {\n    const endOfDay = new Date(current);\n    endOfDay.setHours(WORK_END_HR, WORK_END_MIN, 0, 0);\n    const free = endOfDay.getTime() - current.getTime();\n    if (free <= 0) {\n      current = clampToWorkHours(new Date(current.setDate(current.getDate() + 1)));\n    } else if (remaining <= free) {\n      current = new Date(current.getTime() + remaining);\n      remaining = 0;\n    } else {\n      remaining -= free;\n      current = new Date(endOfDay);\n    }\n  }\n  return current;\n}\nfunction fmtDT(dt) {\n  const pad = n => String(n).padStart(2,'0');\n  const month = pad(dt.getMonth() + 1);\n  const day   = pad(dt.getDate());\n  let h = dt.getHours(), m = pad(dt.getMinutes()), ap = h >= 12 ? 'PM' : 'AM';\n  h = h % 12 || 12;\n  return `${month}/${day} ${pad(h)}:${m} ${ap}`;\n}\nfunction parseDueDate(d) {\n  if (!d) return null;\n  if (/^\\d{4}-\\d{2}-\\d{2}$/.test(d)) return new Date(d);\n  const parts = d.split('/');\n  if (parts.length >= 2) {\n    const mo = +parts[0], da = +parts[1],\n          yr = parts.length === 3 ? +parts[2] : new Date().getFullYear();\n    if (!isNaN(mo)&&!isNaN(da)&&!isNaN(yr)) return new Date(yr,mo-1,da);\n  }\n  const dt = new Date(d);\n  return isNaN(dt) ? null : dt;\n}\nfunction addWorkDays(start, days) {\n  let d = new Date(start), added = 0;\n  while (added < days) {\n    d.setDate(d.getDate() + 1);\n    if (isWorkday(d)) added++;\n  }\n  return d;\n}\nfunction subWorkDays(start, days) {\n  let d = new Date(start), removed = 0;\n  while (removed < days) {\n    d.setDate(d.getDate() - 1);\n    if (isWorkday(d)) removed++;\n  }\n  return d;\n}\nfunction fmtMMDD(d) {\n  const dt = new Date(d);\n  const mo = String(dt.getMonth()+1).padStart(2,'0');\n  const da = String(dt.getDate()).padStart(2,'0');\n  return `${mo}/${da}`;\n}\nfunction sortQueue(arr) {\n  return [...arr].sort((a,b) => {\n    const da = parseDueDate(a.due_date), db = parseDueDate(b.due_date);\n    if (da && db) return da - db;\n    if (da) return -1;\n    if (db) return 1;\n    return 0;\n  });\n}\n\n// —————————————————————————————\n// SCHEDULING + LATE (unchanged)\n// —————————————————————————————\n\n// === Section 3: Scheduling & Late ===\nfunction scheduleMachineJobs(jobs) {\n  let prevEnd = null;\n\n  return jobs.map((job, idx) => {\n    const isPlaceholder = job.id.startsWith('ph-');\n    const hasStart      = Boolean(job.start_date);\n    let start           = null;\n\n    // Only for the first real job in the column, and only if it has no start yet:\n    if (idx === 0 && !isPlaceholder && !hasStart) {\n      const nowIso = new Date().toISOString();\n      job.start_date = nowIso;\n      start = clampToWorkHours(new Date(nowIso));\n      // Persist that one-time stamp back to your backend:\n      axios.put(`${API_ROOT}/orders/${job.id}`, { start_date: nowIso })\n           .catch(console.error);\n    }\n    // If it already has a start_date, respect it:\n    else if (idx === 0 && !isPlaceholder && hasStart) {\n      start = clampToWorkHours(new Date(job.start_date));\n    }\n    // For any non-first (real or placeholder), chain from previous end:\n    else if (idx > 0 && prevEnd) {\n      start = clampToWorkHours(new Date(prevEnd.getTime() + 30 * 60000));\n    }\n\n    // Compute end-time & delivery exactly as before:\n    const qty   = job.quantity % 6 === 0 ? job.quantity : Math.ceil(job.quantity/6)*6;\n    const runMs = (job.stitchCount/30000) * (qty/6) * 3600000;\n    const end   = start ? addWorkTime(start, runMs) : null;\n\n    // Format for display:\n    job._rawStart = start;\n    job._rawEnd   = end;\n    job.start     = start ? fmtDT(start) : '';\n    job.end       = end   ? fmtDT(end)   : '';\n    job.delivery  = end   ? fmtMMDD(addWorkDays(end, 6)) : '';\n    job.isLate    = end ? (end > (() => { \n      const eedDay = subWorkDays(parseDueDate(job.due_date),6);\n      const cutoff = new Date(eedDay); cutoff.setHours(WORK_END_HR,WORK_END_MIN,0,0);\n      return cutoff;\n    })()) : false;\n\n    prevEnd = end;\n    return job;\n  });\n}\n\n// —————————————————————————————\n// LINK UTILITIES (unchanged)\n// —————————————————————————————\n\n// === Section 4: Link Utilities ===\nfunction loadLinks() {\n  try {\n    return JSON.parse(localStorage.getItem('jobLinks')||'{}');\n  } catch {\n    return {};\n  }\n}\nfunction saveLinks(map) {\n  localStorage.setItem('jobLinks', JSON.stringify(map));\n}\nfunction getChain(jobs, id) {\n  const fwd = {}, rev = {};\n  jobs.forEach(j => {\n    if (j.linkedTo) {\n      fwd[j.id]       = j.linkedTo;\n      rev[j.linkedTo] = j.id;\n    }\n  });\n  let root = id;\n  while (rev[root]) root = rev[root];\n  const chain = [];\n  let cur = root;\n  while (cur) {\n    chain.push(cur);\n    cur = fwd[cur];\n  }\n  return chain;\n}\n\n// —————————————————————————————\n// MAIN COMPONENT\n// —————————————————————————————\n\n// === Section 5: Component & State Hooks ===\nexport default function App() {\n  const [columns, setColumns] = useState({\n    queue:    { id: 'queue',    title: 'Unscheduled', jobs: [] },\n    machine1: { id: 'machine1', title: 'Machine 1',    jobs: [] },\n    machine2: { id: 'machine2', title: 'Machine 2',    jobs: [] },\n  });\n  const [placeholders, setPlaceholders] = useState(() =>\n    JSON.parse(localStorage.getItem('placeholders') || '[]')\n  );\n  useEffect(() => {\n    localStorage.setItem('placeholders', JSON.stringify(placeholders));\n  }, [placeholders]);\n\n  const [links, setLinks] = useState(loadLinks);\n  useEffect(() => { saveLinks(links); }, [links]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [ph, setPh] = useState({\n    id: null, company: '', quantity: '', stitchCount: '', inHand: '', dueType: 'Hard Date'\n  });\n  const [syncStatus, setSyncStatus] = useState('');\n\n  // FETCH & MERGE\n  const fetchAll = async () => {\n    try {\n      const { data } = await axios.get(`${API_ROOT}/orders`);\n      // bucket real jobs by column\n      const real = { queue: [], machine1: [], machine2: [] };\n      data.forEach(o => {\n        if (!o.title) return;\n        const col = (o.machineId === 'machine1' || o.machineId === 'machine2')\n          ? o.machineId\n          : 'queue';\n        real[col].push({\n          ...o,\n          id:               o.id.toString(),\n          stitchCount:      o.stitch_count,\n          quantity:         o.quantity,\n          company:          o.company,\n          design:           o.design,\n          due_date:         o.due_date,\n          due_type:         o.due_type,\n          start:            o.start_date || '',\n          end:              o.end_date   || '',\n          delivery:         o.delivery   || '',\n          position:         o.position != null ? o.position : null,\n          embroidery_start: o.embroidery_start || '',\n          linkedTo:         links[o.id] || null\n        });\n      });\n\n      // combine placeholders + real for each column\n      const merged = {};\n      ['queue','machine1','machine2'].forEach(col => {\n        merged[col] = [\n          ...placeholders.filter(p => p.machineId === col),\n          ...real[col]\n        ];\n      });\n\n      setColumns({\n        // queue: sort everything by due date\n        queue: {\n          ...columns.queue,\n          jobs: sortQueue(merged.queue)\n        },\n        // machines: sort everything by stored position\n        machine1: {\n          ...columns.machine1,\n          jobs: merged.machine1\n            .sort((a,b) => (a.position != null ? a.position : Infinity)\n                        - (b.position != null ? b.position : Infinity))\n            .map(job =>\n              // after sorting, schedule times\n              job\n            )\n            .map((job,i,jobs) => job) // placeholder for scheduling below\n        },\n        machine2: {\n          ...columns.machine2,\n          jobs: merged.machine2\n            .sort((a,b) => (a.position != null ? a.position : Infinity)\n                        - (b.position != null ? b.position : Infinity))\n            .map(job =>\n              job\n            )\n            .map((job,i,jobs) => job)\n        }\n      });\n\n      // finally run scheduling on the two machines\n      setColumns(cols => ({\n        ...cols,\n        machine1: {\n          ...cols.machine1,\n          jobs: scheduleMachineJobs(cols.machine1.jobs)\n        },\n        machine2: {\n          ...cols.machine2,\n          jobs: scheduleMachineJobs(cols.machine2.jobs)\n        }\n      }));\n    } catch (err) {\n      console.error('fetchAll error', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchAll().catch(console.error);\n  }, []);\n\n  const handleSync = () => {\n    fetchAll().catch(console.error);\n    setSyncStatus('updated');\n    setTimeout(() => setSyncStatus(''), 2000);\n  };\n\n// === Section 6: Placeholder CRUD ===\n  const submitPlaceholder = () => {\n    const job = {\n      id:         ph.id || `ph-${Date.now()}`,\n      company:    ph.company,\n      quantity:   +ph.quantity || 1,\n      stitchCount:+ph.stitchCount||30000,\n      due_date:   ph.inHand,\n      due_type:   ph.dueType,\n      machineId:  'queue',\n      position:   null\n    };\n    if (ph.id) {\n      setPlaceholders(ps => ps.map(p=>p.id===ph.id?job:p));\n      setColumns(c => ({\n        ...c,\n        queue:    {...c.queue,    jobs: c.queue.jobs.map(j=>j.id===ph.id?job:j)},\n        machine1: {...c.machine1, jobs: c.machine1.jobs.map(j=>j.id===ph.id?job:j)},\n        machine2: {...c.machine2, jobs: c.machine2.jobs.map(j=>j.id===ph.id?job:j)},\n      }));\n    } else {\n      setPlaceholders(ps => [job, ...ps]);\n      setColumns(c => ({\n        ...c,\n        queue: {...c.queue, jobs: [job, ...c.queue.jobs]}\n      }));\n    }\n    setShowModal(false);\n    setPh({id:null,company:'',quantity:'',stitchCount:'',inHand:'',dueType:'Hard Date'});\n  };\n  const removePlaceholder = id => {\n    setPlaceholders(ps => ps.filter(p=>p.id!==id));\n    setColumns(c => ({\n      ...c,\n      queue:    {...c.queue,    jobs: c.queue.jobs.filter(j=>j.id!==id)},\n      machine1: {...c.machine1, jobs: c.machine1.jobs.filter(j=>j.id!==id)},\n      machine2: {...c.machine2, jobs: c.machine2.jobs.filter(j=>j.id!==id)},\n    }));\n  };\n  const editPlaceholder = job => {\n    setPh({\n      id: job.id,\n      company: job.company,\n      quantity: job.quantity,\n      stitchCount: job.stitchCount,\n      inHand: job.due_date,\n      dueType: job.due_type\n    });\n    setShowModal(true);\n  };\n\n\n// === Section 7: toggleLink ===\nconst toggleLink = (colId, idx) => {\n  setColumns(cols => {\n    // clone this column’s jobs\n    const jobs = [...cols[colId].jobs];\n    const job  = jobs[idx];\n    const below = jobs[idx + 1];\n    if (!below) return cols;  // nothing below to link to\n\n    // update our persisted links map\n    setLinks(l => {\n      const m = { ...l };\n      if (m[job.id] === below.id) delete m[job.id];\n      else m[job.id] = below.id;\n      return m;\n    });\n\n    // toggle the in-memory link flag\n    job.linkedTo = job.linkedTo === below.id ? null : below.id;\n    jobs[idx] = job;\n\n    // return updated columns state\n    return {\n      ...cols,\n      [colId]: { ...cols[colId], jobs }\n    };\n  });\n};\n\n// === Section 8: onDragEnd ===\nconst onDragEnd = result => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const sc = source.droppableId;\n  const dc = destination.droppableId;\n\n  // clone all three lists\n  const lists = {\n    queue:    Array.from(columns.queue.jobs),\n    machine1: Array.from(columns.machine1.jobs),\n    machine2: Array.from(columns.machine2.jobs),\n  };\n\n  // remove dragged (or chain) from source\n  const sourceList = lists[sc];\n  const chain = getChain(sourceList, draggableId);\n  const movedSet = new Set(chain);\n  const movedJobs = sourceList.filter(j => movedSet.has(j.id));\n  lists[sc] = sourceList.filter(j => !movedSet.has(j.id));\n\n  // insert them into destination\n  const destList = lists[dc];\n  destList.splice(destination.index, 0, ...movedJobs);\n  lists[dc] = destList;\n\n  // update placeholder positions for _all_ moved placeholders\n  setPlaceholders(ps =>\n    ps.map(p => {\n      if (p.id === draggableId || movedSet.has(p.id)) {\n        return {\n          ...p,\n          machineId: dc,\n          position: destination.index + movedJobs.findIndex(j => j.id === p.id)\n        };\n      }\n      return p;\n    })\n  );\n\n  // if moved back to queue, clear timing & links\n  if (dc === 'queue') {\n    setLinks(l => {\n      const m = { ...l };\n      chain.forEach(id => delete m[id]);\n      return m;\n    });\n    movedJobs.forEach(job => {\n      job.linkedTo = null;\n      job._rawStart = job._rawEnd = null;\n      job.start = job.end = job.delivery = '';\n      job.isLate = false;\n      job.embroidery_start = '';\n      job.position = null;\n    });\n  }\n\n  // persist moved jobs\n  movedJobs.forEach((job, i) => {\n    const pos = dc === 'queue' ? null : destination.index + i;\n    axios.put(`${API_ROOT}/orders/${job.id}`, {\n      machineId: dc === 'queue' ? null : dc,\n      start_date: job.start || '',\n      end_date:   job.end   || '',\n      delivery:   job.delivery || '',\n      position:   pos,\n      embroidery_start: job.embroidery_start || ''\n    }).catch(console.error);\n  });\n\n  // now build new columns state\n  const newCols = {\n    queue:    { ...columns.queue,    jobs: sortQueue(lists.queue) },\n    machine1: { ...columns.machine1, jobs: scheduleMachineJobs(lists.machine1) },\n    machine2: { ...columns.machine2, jobs: scheduleMachineJobs(lists.machine2) },\n  };\n\n  // apply once\n  setColumns(newCols);\n};\n\n\n// === Section 9: Render / Return ===\nreturn (\n  <div style={{ padding: 16, fontFamily: 'sans-serif', fontSize: 13 }}>\n\n    {/* Add / Sync Buttons */}\n    <button\n      onClick={() => setShowModal(true)}\n      style={{ marginRight: 8, fontSize: 13 }}\n    >\n      + Add Placeholder\n    </button>\n    <button onClick={handleSync} style={{ fontSize: 13 }}>\n      Sync from Sheet{' '}\n      {syncStatus === 'updated' && (\n        <span style={{ color: 'green', fontSize: 13 }}>✓ Updated</span>\n      )}\n    </button>\n\n    {/* Legend */}\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: 16,\n        margin: '12px 0',\n        flexWrap: 'wrap',\n        fontSize: 12,\n      }}\n    >\n      {[\n        { label: 'Placeholder', bg: LIGHT_YELLOW, border: DARK_YELLOW },\n        { label: 'Soft Date',    bg: LIGHT_GREY,   border: DARK_GREY   },\n        { label: 'Hard Date',    bg: LIGHT_PURPLE, border: DARK_PURPLE },\n        { label: 'Late',         bg: 'red',        border: 'red'       },\n      ].map((item, i) => (\n        <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n          <span\n            style={{\n              width: 12,\n              height: 12,\n              background: item.bg,\n              border: `2px solid ${item.border}`,\n              borderRadius: 2,\n            }}\n          />\n          {item.label}\n        </div>\n      ))}\n      <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n        <span style={{ fontSize: 14 }}>🔗</span> Link\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n        <span style={{ fontSize: 14 }}>❌</span> Unlink\n      </div>\n      {['Start', 'EED / End', 'IHD / Delivery'].map((txt, i) => {\n        const color = i === 0 ? BUBBLE_START : i === 1 ? BUBBLE_END : BUBBLE_DELIV;\n        return (\n          <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n            <span\n              style={{\n                width: 12,\n                height: 12,\n                background: color,\n                borderRadius: 2,\n              }}\n            />\n            {txt}\n          </div>\n        );\n      })}\n    </div>\n\n    {/* Drag & Drop Columns */}\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div style={{ display: 'flex', gap: 16, marginTop: 16 }}>\n        {['queue', 'machine1', 'machine2'].map(colId => {\n          const col = columns[colId] || {};\n          const jobs = Array.isArray(col.jobs) ? col.jobs : [];\n          const segments = [];\n          let i = 0;\n          while (i < jobs.length) {\n            const chain = getChain(jobs, jobs[i].id);\n            const len = chain.length > 1 ? chain.length : 1;\n            segments.push({ start: i, len });\n            i += len;\n          }\n          const GAP = 6, OUTLINE = 6;\n          return (\n            <Droppable key={colId} droppableId={colId}>\n              {provided => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    position: 'relative',\n                    border: '1px solid #ccc',\n                    borderRadius: 4,\n                    width: colId === 'queue' ? 260 : 300,\n                    minHeight: 400,\n                    padding: 12,\n                    background: '#fafafa',\n                  }}\n                >\n                  <h4 style={{ textAlign: 'center', margin: '8px 0', fontSize: 13 }}>\n                    {col.title}\n                  </h4>\n\n                  {segments.map((seg, si) => (\n                    <div\n                      key={si}\n                      style={{\n                        position: 'relative',\n                        marginBottom: GAP,\n                        zIndex: seg.len > 1 ? 3 : 1,\n                        outline: seg.len > 1 ? `${OUTLINE}px solid #0288d1` : undefined,\n                        outlineOffset: seg.len > 1 ? '0px' : undefined,\n                        borderRadius: 4,\n                      }}\n                    >\n                      {jobs\n                        .slice(seg.start, seg.start + seg.len)\n                        .map((job, jIdx) => {\n                          const idx = seg.start + jIdx;\n                          const isPh = job.id.startsWith('ph-');\n                          const isSoft = job.due_type === 'Soft Date';\n                          const base = isPh\n                            ? LIGHT_YELLOW\n                            : isSoft\n                            ? LIGHT_GREY\n                            : LIGHT_PURPLE;\n                          let bg = base;\n                          let bCol = isPh\n                            ? DARK_YELLOW\n                            : isSoft\n                            ? DARK_GREY\n                            : DARK_PURPLE;\n                          if (job.isLate) {\n                            bg = `repeating-linear-gradient(45deg, ${base}, ${base} 6px, rgba(255,0,0,0.5) 6px, rgba(255,0,0,0.5) 12px)`;\n                            bCol = 'red';\n                          }\n                          const dt0 = (job.due_type || '')[0] || '';\n\n                          return (\n                            <Draggable key={job.id} draggableId={job.id} index={idx}>\n                              {prov => (\n                                <div\n                                  ref={prov.innerRef}\n                                  {...prov.draggableProps}\n                                  {...prov.dragHandleProps}\n                                  style={{\n                                    position: 'relative',\n                                    display: 'grid',\n                                    gridTemplateColumns: '1fr auto',\n                                    gridTemplateRows: 'auto auto auto auto',\n                                    columnGap: 6,\n                                    rowGap: 4,\n                                    padding: '6px 28px 6px 6px',\n                                    margin: `0 0 ${jIdx < seg.len - 1 ? GAP : 0}px 0`,\n                                    background: bg,\n                                    border: `2px solid ${bCol}`,\n                                    borderRadius: 4,\n                                    zIndex: 2,\n                                    ...prov.draggableProps.style,\n                                  }}\n                                >\n                                  {jIdx === 0 && seg.len > 1 && (\n                                    <div\n                                      style={{\n                                        position: 'absolute',\n                                        top: 0,\n                                        right: 0,\n                                        width: 4,\n                                        height: '100%',\n                                        background: '#0288d1',\n                                        zIndex: 4,\n                                      }}\n                                    />\n                                  )}\n\n                                  {/* Row1 Col1: ID + Company */}\n                                  <span\n                                    style={{\n                                      gridRow: 1,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                      fontWeight: 'bold',\n                                    }}\n                                  >\n                                    <span\n                                      style={{\n                                        display: 'inline-block',\n                                        width: 20,\n                                        height: 20,\n                                        borderRadius: '50%',\n                                        background: '#000',\n                                        color: base,\n                                        lineHeight: '20px',\n                                        textAlign: 'center',\n                                        fontSize: isPh ? 13 : 11,\n                                        fontWeight: 'bold',\n                                        marginRight: 4,\n                                      }}\n                                    >\n                                      {isPh ? '*' : job.id}\n                                    </span>\n                                    {job.company}\n                                  </span>\n\n                                  {/* Row1 Col2: Quantity */}\n                                  <span\n                                    style={{\n                                      gridRow: 1,\n                                      gridColumn: 2,\n                                      justifySelf: 'end',\n                                      display: 'inline-block',\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      fontSize: 15,\n                                      fontWeight: 'bold',\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                    }}\n                                  >\n                                    {job.quantity}\n                                  </span>\n\n                                  {/* Row2 Col1: Design */}\n                                  <span\n                                    style={{\n                                      gridRow: 2,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: base,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {job.design?.slice(0, 22)}\n                                  </span>\n\n                                  {/* Row2 Col2: Start */}\n                                  {job.start && (\n                                    <span\n                                      style={{\n                                        gridRow: 2,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        display: 'inline-block',\n                                        background: BUBBLE_START,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13,\n                                      }}\n                                    >\n                                      {job.start}\n                                    </span>\n                                  )}\n\n                                  {/* Row3 Col1: EED */}\n                                  <span\n                                    style={{\n                                      gridRow: 3,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: BUBBLE_END,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      overflow: 'hidden',\n                                      textOverflow: 'ellipsis',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {`EED: ${fmtMMDD(\n                                      subWorkDays(parseDueDate(job.due_date), 6)\n                                    )}`}\n                                  </span>\n\n                                  {/* Row3 Col2: End */}\n                                  {job.end && (\n                                    <span\n                                      style={{\n                                        gridRow: 3,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        display: 'inline-block',\n                                        background: BUBBLE_END,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13,\n                                      }}\n                                    >\n                                      {job.end}\n                                    </span>\n                                  )}\n\n                                  {/* Row4 Col1: IHD */}\n                                  <span\n                                    style={{\n                                      gridRow: 4,\n                                      gridColumn: 1,\n                                      display: 'inline-block',\n                                      background: BUBBLE_DELIV,\n                                      padding: '0 4px',\n                                      borderRadius: 4,\n                                      whiteSpace: 'nowrap',\n                                      fontSize: 13,\n                                    }}\n                                  >\n                                    {`IHD: ${fmtMMDD(job.due_date)}`}\n                                  </span>\n\n                                  {/* Row4 Col2: Delivery */}\n                                  {job.delivery && (\n                                    <span\n                                      style={{\n                                        gridRow: 4,\n                                        gridColumn: 2,\n                                        justifySelf: 'end',\n                                        display: 'inline-block',\n                                        background: BUBBLE_DELIV,\n                                        padding: '0 4px',\n                                        borderRadius: 10,\n                                        whiteSpace: 'nowrap',\n                                        fontSize: 13,\n                                      }}\n                                    >\n                                      {job.delivery}\n                                    </span>\n                                  )}\n\n                                  {/* Top-right tab: Due-Type */}\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      right: 0,\n                                      width: 28,\n                                      height: 28,\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      background: base,\n                                      borderTopRightRadius: 4,\n                                      borderBottomLeftRadius: 4,\n                                      zIndex: 4,\n                                      fontSize: 11,\n                                      fontWeight: 'bold',\n                                    }}\n                                  >\n                                    {dt0}\n                                  </div>\n\n                                  {/* Link / Unlink toggle */}\n                                  {idx < jobs.length - 1 && (\n                                    <div\n                                      onClick={() => toggleLink(colId, idx)}\n                                      style={{\n                                        position: 'absolute',\n                                        top: 28,\n                                        right: 0,\n                                        width: 28,\n                                        height: 'calc(100% - 28px)',\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        cursor: 'pointer',\n                                        background: base,\n                                        borderBottomRightRadius: 4,\n                                        zIndex: 4,\n                                      }}\n                                    >\n                                      {job.linkedTo === jobs[idx + 1]?.id\n                                        ? '❌'\n                                        : '🔗'}\n                                    </div>\n                                  )}\n\n                                  {/* Placeholder edit/delete */}\n                                  {job.id.startsWith('ph-') && (\n                                    <div\n                                      style={{\n                                        position: 'absolute',\n                                        top: 0,\n                                        right: 0,\n                                        width: 28,\n                                        height: '100%',\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-start',\n                                        background: base,\n                                        borderTopRightRadius: 4,\n                                        borderBottomRightRadius: 4,\n                                        zIndex: 4,\n                                      }}\n                                    >\n                                      <span\n                                        onClick={() => editPlaceholder(job)}\n                                        style={{\n                                          cursor: 'pointer',\n                                          fontSize: 12,\n                                          margin: 4,\n                                        }}\n                                      >\n                                        ✎\n                                      </span>\n                                      <span\n                                        onClick={() => removePlaceholder(job.id)}\n                                        style={{\n                                          cursor: 'pointer',\n                                          fontSize: 12,\n                                          margin: 4,\n                                        }}\n                                      >\n                                        ✖\n                                      </span>\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                            </Draggable>\n                          );\n                        })}\n                    </div>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n        })}\n      </div>\n    </DragDropContext>\n  </div>\n);\n} // ← end of App component\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}